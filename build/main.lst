ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	hi2c1
  16              		.section	.bss.hi2c1,"aw",%nobits
  17              		.align	2
  20              	hi2c1:
  21 0000 00000000 		.space	84
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.global	htim2
  23              		.section	.bss.htim2,"aw",%nobits
  24              		.align	2
  27              	htim2:
  28 0000 00000000 		.space	72
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.global	htim4
  30              		.section	.bss.htim4,"aw",%nobits
  31              		.align	2
  34              	htim4:
  35 0000 00000000 		.space	72
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	TempCelsiusTemporaria
  37              		.section	.bss.TempCelsiusTemporaria,"aw",%nobits
  38              		.align	2
  41              	TempCelsiusTemporaria:
  42 0000 00000000 		.space	4
  43              		.global	TempCelsius
  44              		.section	.bss.TempCelsius,"aw",%nobits
  45              		.align	2
  48              	TempCelsius:
  49 0000 00000000 		.space	4
  50              		.global	TempCelsiusUser
  51              		.section	.bss.TempCelsiusUser,"aw",%nobits
  52              		.align	2
  55              	TempCelsiusUser:
  56 0000 00000000 		.space	4
  57              		.global	TempCelsiusMed
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 2


  58              		.section	.bss.TempCelsiusMed,"aw",%nobits
  59              		.align	2
  62              	TempCelsiusMed:
  63 0000 00000000 		.space	4
  64              		.global	TempSoma
  65              		.section	.bss.TempSoma,"aw",%nobits
  66              		.align	2
  69              	TempSoma:
  70 0000 00000000 		.space	4
  71              		.global	setpoint
  72              		.section	.bss.setpoint,"aw",%nobits
  73              		.align	2
  76              	setpoint:
  77 0000 00000000 		.space	4
  78              		.global	setpointUser
  79              		.section	.bss.setpointUser,"aw",%nobits
  80              		.align	2
  83              	setpointUser:
  84 0000 00000000 		.space	4
  85              		.global	kp
  86              		.section	.bss.kp,"aw",%nobits
  87              		.align	2
  90              	kp:
  91 0000 00000000 		.space	4
  92              		.global	ki
  93              		.section	.bss.ki,"aw",%nobits
  94              		.align	2
  97              	ki:
  98 0000 00000000 		.space	4
  99              		.global	kd
 100              		.section	.bss.kd,"aw",%nobits
 101              		.align	2
 104              	kd:
 105 0000 00000000 		.space	4
 106              		.global	erroAtual
 107              		.section	.bss.erroAtual,"aw",%nobits
 108              		.align	2
 111              	erroAtual:
 112 0000 00000000 		.space	4
 113              		.global	erroInt
 114              		.section	.bss.erroInt,"aw",%nobits
 115              		.align	2
 118              	erroInt:
 119 0000 00000000 		.space	4
 120              		.global	erroAnt
 121              		.section	.bss.erroAnt,"aw",%nobits
 122              		.align	2
 125              	erroAnt:
 126 0000 00000000 		.space	4
 127              		.global	Ts
 128              		.section	.bss.Ts,"aw",%nobits
 129              		.align	2
 132              	Ts:
 133 0000 00000000 		.space	4
 134              		.global	yiAnt
 135              		.section	.bss.yiAnt,"aw",%nobits
 136              		.align	2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 3


 139              	yiAnt:
 140 0000 00000000 		.space	4
 141              		.global	ydAnt
 142              		.section	.bss.ydAnt,"aw",%nobits
 143              		.align	2
 146              	ydAnt:
 147 0000 00000000 		.space	4
 148              		.global	Nd
 149              		.section	.bss.Nd,"aw",%nobits
 150              		.align	2
 153              	Nd:
 154 0000 00000000 		.space	4
 155              		.global	tim4ms
 156              		.section	.bss.tim4ms,"aw",%nobits
 157              		.align	2
 160              	tim4ms:
 161 0000 00000000 		.space	4
 162              		.global	y
 163              		.section	.bss.y,"aw",%nobits
 164              		.align	2
 167              	y:
 168 0000 00000000 		.space	4
 169              		.global	yPWM
 170              		.section	.bss.yPWM,"aw",%nobits
 171              		.align	2
 174              	yPWM:
 175 0000 00000000 		.space	4
 176              		.global	yPWMint
 177              		.section	.data.yPWMint,"aw"
 178              		.align	2
 181              	yPWMint:
 182 0000 10270000 		.word	10000
 183              		.global	yp
 184              		.section	.bss.yp,"aw",%nobits
 185              		.align	2
 188              	yp:
 189 0000 00000000 		.space	4
 190              		.global	yi
 191              		.section	.bss.yi,"aw",%nobits
 192              		.align	2
 195              	yi:
 196 0000 00000000 		.space	4
 197              		.global	yd
 198              		.section	.bss.yd,"aw",%nobits
 199              		.align	2
 202              	yd:
 203 0000 00000000 		.space	4
 204              		.global	__aeabi_fsub
 205              		.global	__aeabi_fmul
 206              		.global	__aeabi_fadd
 207              		.global	__aeabi_f2d
 208              		.global	__aeabi_ddiv
 209              		.global	__aeabi_dadd
 210              		.global	__aeabi_d2f
 211              		.global	__aeabi_fcmpgt
 212              		.global	__aeabi_fcmplt
 213              		.global	__aeabi_fdiv
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 4


 214              		.global	__aeabi_f2uiz
 215              		.section	.text.calcPid,"ax",%progbits
 216              		.align	1
 217              		.global	calcPid
 218              		.arch armv7-m
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu softvfp
 224              	calcPid:
 225              	.LFB65:
 226              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "tmp117.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 5


  46:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** #define I2C_PORT (hi2c1)
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** // Sensor de Temperatura
  52:Core/Src/main.c **** float TempCelsiusTemporaria;
  53:Core/Src/main.c **** float TempCelsius, TempCelsiusUser;
  54:Core/Src/main.c **** float TempCelsiusMed, TempSoma = 0.0;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** //PID
  57:Core/Src/main.c **** float setpoint, setpointUser, kp, ki, kd, erroAtual, erroInt, erroAnt, Ts, yiAnt, ydAnt, Nd,tim4ms,
  58:Core/Src/main.c **** uint32_t yPWMint = 10000;
  59:Core/Src/main.c **** float yp, yi, yd;
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_I2C1_Init(void);
  66:Core/Src/main.c **** static void MX_TIM2_Init(void);
  67:Core/Src/main.c **** static void MX_TIM4_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** void calcPid(void){
 227              		.loc 1 69 19
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 B0B5     		push	{r4, r5, r7, lr}
 232              	.LCFI0:
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 4, -16
 235              		.cfi_offset 5, -12
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 00AF     		add	r7, sp, #0
 239              	.LCFI1:
 240              		.cfi_def_cfa_register 7
  70:Core/Src/main.c ****     Ts = tim4ms;
 241              		.loc 1 70 8
 242 0004 734B     		ldr	r3, .L9
 243 0006 1B68     		ldr	r3, [r3]	@ float
 244 0008 734A     		ldr	r2, .L9+4
 245 000a 1360     		str	r3, [r2]	@ float
  71:Core/Src/main.c ****     
  72:Core/Src/main.c ****     erroAtual = setpoint - TempCelsiusMed;
 246              		.loc 1 72 26
 247 000c 734B     		ldr	r3, .L9+8
 248 000e 1B68     		ldr	r3, [r3]	@ float
 249 0010 734A     		ldr	r2, .L9+12
 250 0012 1268     		ldr	r2, [r2]	@ float
 251 0014 1146     		mov	r1, r2
 252 0016 1846     		mov	r0, r3
 253 0018 FFF7FEFF 		bl	__aeabi_fsub
 254 001c 0346     		mov	r3, r0
 255 001e 1A46     		mov	r2, r3
 256              		.loc 1 72 15
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 6


 257 0020 704B     		ldr	r3, .L9+16
 258 0022 1A60     		str	r2, [r3]	@ float
  73:Core/Src/main.c ****     yp = kp*erroAtual;
 259              		.loc 1 73 12
 260 0024 704B     		ldr	r3, .L9+20
 261 0026 1B68     		ldr	r3, [r3]	@ float
 262 0028 6E4A     		ldr	r2, .L9+16
 263 002a 1268     		ldr	r2, [r2]	@ float
 264 002c 1146     		mov	r1, r2
 265 002e 1846     		mov	r0, r3
 266 0030 FFF7FEFF 		bl	__aeabi_fmul
 267 0034 0346     		mov	r3, r0
 268 0036 1A46     		mov	r2, r3
 269              		.loc 1 73 8
 270 0038 6C4B     		ldr	r3, .L9+24
 271 003a 1A60     		str	r2, [r3]	@ float
  74:Core/Src/main.c ****     yi = ki*Ts*(erroAtual+erroAnt)/2.0 + yiAnt;
 272              		.loc 1 74 12
 273 003c 6C4B     		ldr	r3, .L9+28
 274 003e 1B68     		ldr	r3, [r3]	@ float
 275 0040 654A     		ldr	r2, .L9+4
 276 0042 1268     		ldr	r2, [r2]	@ float
 277 0044 1146     		mov	r1, r2
 278 0046 1846     		mov	r0, r3
 279 0048 FFF7FEFF 		bl	__aeabi_fmul
 280 004c 0346     		mov	r3, r0
 281 004e 1C46     		mov	r4, r3
 282              		.loc 1 74 26
 283 0050 644B     		ldr	r3, .L9+16
 284 0052 1B68     		ldr	r3, [r3]	@ float
 285 0054 674A     		ldr	r2, .L9+32
 286 0056 1268     		ldr	r2, [r2]	@ float
 287 0058 1146     		mov	r1, r2
 288 005a 1846     		mov	r0, r3
 289 005c FFF7FEFF 		bl	__aeabi_fadd
 290 0060 0346     		mov	r3, r0
 291              		.loc 1 74 15
 292 0062 1946     		mov	r1, r3
 293 0064 2046     		mov	r0, r4
 294 0066 FFF7FEFF 		bl	__aeabi_fmul
 295 006a 0346     		mov	r3, r0
 296 006c 1846     		mov	r0, r3
 297 006e FFF7FEFF 		bl	__aeabi_f2d
 298              		.loc 1 74 35
 299 0072 4FF00002 		mov	r2, #0
 300 0076 4FF08043 		mov	r3, #1073741824
 301 007a FFF7FEFF 		bl	__aeabi_ddiv
 302 007e 0246     		mov	r2, r0
 303 0080 0B46     		mov	r3, r1
 304 0082 1446     		mov	r4, r2
 305 0084 1D46     		mov	r5, r3
 306              		.loc 1 74 40
 307 0086 5C4B     		ldr	r3, .L9+36
 308 0088 1B68     		ldr	r3, [r3]	@ float
 309 008a 1846     		mov	r0, r3
 310 008c FFF7FEFF 		bl	__aeabi_f2d
 311 0090 0246     		mov	r2, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 7


 312 0092 0B46     		mov	r3, r1
 313 0094 2046     		mov	r0, r4
 314 0096 2946     		mov	r1, r5
 315 0098 FFF7FEFF 		bl	__aeabi_dadd
 316 009c 0246     		mov	r2, r0
 317 009e 0B46     		mov	r3, r1
 318 00a0 1046     		mov	r0, r2
 319 00a2 1946     		mov	r1, r3
 320 00a4 FFF7FEFF 		bl	__aeabi_d2f
 321 00a8 0346     		mov	r3, r0
 322              		.loc 1 74 8
 323 00aa 544A     		ldr	r2, .L9+40
 324 00ac 1360     		str	r3, [r2]	@ float
  75:Core/Src/main.c ****     yd = kd*Nd*(erroAtual-erroAnt) + (1-Nd*Ts)*ydAnt;
 325              		.loc 1 75 12
 326 00ae 544B     		ldr	r3, .L9+44
 327 00b0 1B68     		ldr	r3, [r3]	@ float
 328 00b2 544A     		ldr	r2, .L9+48
 329 00b4 1268     		ldr	r2, [r2]	@ float
 330 00b6 1146     		mov	r1, r2
 331 00b8 1846     		mov	r0, r3
 332 00ba FFF7FEFF 		bl	__aeabi_fmul
 333 00be 0346     		mov	r3, r0
 334 00c0 1C46     		mov	r4, r3
 335              		.loc 1 75 26
 336 00c2 484B     		ldr	r3, .L9+16
 337 00c4 1B68     		ldr	r3, [r3]	@ float
 338 00c6 4B4A     		ldr	r2, .L9+32
 339 00c8 1268     		ldr	r2, [r2]	@ float
 340 00ca 1146     		mov	r1, r2
 341 00cc 1846     		mov	r0, r3
 342 00ce FFF7FEFF 		bl	__aeabi_fsub
 343 00d2 0346     		mov	r3, r0
 344              		.loc 1 75 15
 345 00d4 1946     		mov	r1, r3
 346 00d6 2046     		mov	r0, r4
 347 00d8 FFF7FEFF 		bl	__aeabi_fmul
 348 00dc 0346     		mov	r3, r0
 349 00de 1C46     		mov	r4, r3
 350              		.loc 1 75 43
 351 00e0 484B     		ldr	r3, .L9+48
 352 00e2 1B68     		ldr	r3, [r3]	@ float
 353 00e4 3C4A     		ldr	r2, .L9+4
 354 00e6 1268     		ldr	r2, [r2]	@ float
 355 00e8 1146     		mov	r1, r2
 356 00ea 1846     		mov	r0, r3
 357 00ec FFF7FEFF 		bl	__aeabi_fmul
 358 00f0 0346     		mov	r3, r0
 359              		.loc 1 75 40
 360 00f2 1946     		mov	r1, r3
 361 00f4 4FF07E50 		mov	r0, #1065353216
 362 00f8 FFF7FEFF 		bl	__aeabi_fsub
 363 00fc 0346     		mov	r3, r0
 364 00fe 1A46     		mov	r2, r3
 365              		.loc 1 75 47
 366 0100 414B     		ldr	r3, .L9+52
 367 0102 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 8


 368 0104 1946     		mov	r1, r3
 369 0106 1046     		mov	r0, r2
 370 0108 FFF7FEFF 		bl	__aeabi_fmul
 371 010c 0346     		mov	r3, r0
 372              		.loc 1 75 36
 373 010e 1946     		mov	r1, r3
 374 0110 2046     		mov	r0, r4
 375 0112 FFF7FEFF 		bl	__aeabi_fadd
 376 0116 0346     		mov	r3, r0
 377 0118 1A46     		mov	r2, r3
 378              		.loc 1 75 8
 379 011a 3C4B     		ldr	r3, .L9+56
 380 011c 1A60     		str	r2, [r3]	@ float
  76:Core/Src/main.c ****     y = yp+yi+yd;
 381              		.loc 1 76 11
 382 011e 334B     		ldr	r3, .L9+24
 383 0120 1B68     		ldr	r3, [r3]	@ float
 384 0122 364A     		ldr	r2, .L9+40
 385 0124 1268     		ldr	r2, [r2]	@ float
 386 0126 1146     		mov	r1, r2
 387 0128 1846     		mov	r0, r3
 388 012a FFF7FEFF 		bl	__aeabi_fadd
 389 012e 0346     		mov	r3, r0
 390 0130 1A46     		mov	r2, r3
 391              		.loc 1 76 14
 392 0132 364B     		ldr	r3, .L9+56
 393 0134 1B68     		ldr	r3, [r3]	@ float
 394 0136 1946     		mov	r1, r3
 395 0138 1046     		mov	r0, r2
 396 013a FFF7FEFF 		bl	__aeabi_fadd
 397 013e 0346     		mov	r3, r0
 398 0140 1A46     		mov	r2, r3
 399              		.loc 1 76 7
 400 0142 334B     		ldr	r3, .L9+60
 401 0144 1A60     		str	r2, [r3]	@ float
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     yiAnt = yi;
 402              		.loc 1 78 11
 403 0146 2D4B     		ldr	r3, .L9+40
 404 0148 1B68     		ldr	r3, [r3]	@ float
 405 014a 2B4A     		ldr	r2, .L9+36
 406 014c 1360     		str	r3, [r2]	@ float
  79:Core/Src/main.c ****     ydAnt = yd;
 407              		.loc 1 79 11
 408 014e 2F4B     		ldr	r3, .L9+56
 409 0150 1B68     		ldr	r3, [r3]	@ float
 410 0152 2D4A     		ldr	r2, .L9+52
 411 0154 1360     		str	r3, [r2]	@ float
  80:Core/Src/main.c ****     erroAnt = erroAtual;
 412              		.loc 1 80 13
 413 0156 234B     		ldr	r3, .L9+16
 414 0158 1B68     		ldr	r3, [r3]	@ float
 415 015a 264A     		ldr	r2, .L9+32
 416 015c 1360     		str	r3, [r2]	@ float
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****     if (y>100)
 417              		.loc 1 82 10
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 9


 418 015e 2C4B     		ldr	r3, .L9+60
 419 0160 1B68     		ldr	r3, [r3]	@ float
 420              		.loc 1 82 8
 421 0162 2C49     		ldr	r1, .L9+64
 422 0164 1846     		mov	r0, r3
 423 0166 FFF7FEFF 		bl	__aeabi_fcmpgt
 424 016a 0346     		mov	r3, r0
 425 016c 002B     		cmp	r3, #0
 426 016e 03D0     		beq	.L8
  83:Core/Src/main.c ****     {
  84:Core/Src/main.c ****       y = 100;
 427              		.loc 1 84 9
 428 0170 274B     		ldr	r3, .L9+60
 429 0172 284A     		ldr	r2, .L9+64
 430 0174 1A60     		str	r2, [r3]	@ float
 431 0176 0DE0     		b	.L4
 432              	.L8:
  85:Core/Src/main.c ****     }
  86:Core/Src/main.c ****     else if (y<0)
 433              		.loc 1 86 15
 434 0178 254B     		ldr	r3, .L9+60
 435 017a 1B68     		ldr	r3, [r3]	@ float
 436              		.loc 1 86 13
 437 017c 4FF00001 		mov	r1, #0
 438 0180 1846     		mov	r0, r3
 439 0182 FFF7FEFF 		bl	__aeabi_fcmplt
 440 0186 0346     		mov	r3, r0
 441 0188 002B     		cmp	r3, #0
 442 018a 03D0     		beq	.L4
  87:Core/Src/main.c ****     {
  88:Core/Src/main.c ****       y = 0;
 443              		.loc 1 88 9
 444 018c 204B     		ldr	r3, .L9+60
 445 018e 4FF00002 		mov	r2, #0
 446 0192 1A60     		str	r2, [r3]	@ float
 447              	.L4:
  89:Core/Src/main.c ****     }
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     yPWM = 10000*(100-y)/100;
 448              		.loc 1 91 22
 449 0194 1E4B     		ldr	r3, .L9+60
 450 0196 1B68     		ldr	r3, [r3]	@ float
 451 0198 1946     		mov	r1, r3
 452 019a 1E48     		ldr	r0, .L9+64
 453 019c FFF7FEFF 		bl	__aeabi_fsub
 454 01a0 0346     		mov	r3, r0
 455              		.loc 1 91 17
 456 01a2 1D49     		ldr	r1, .L9+68
 457 01a4 1846     		mov	r0, r3
 458 01a6 FFF7FEFF 		bl	__aeabi_fmul
 459 01aa 0346     		mov	r3, r0
 460              		.loc 1 91 25
 461 01ac 1949     		ldr	r1, .L9+64
 462 01ae 1846     		mov	r0, r3
 463 01b0 FFF7FEFF 		bl	__aeabi_fdiv
 464 01b4 0346     		mov	r3, r0
 465 01b6 1A46     		mov	r2, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 10


 466              		.loc 1 91 10
 467 01b8 184B     		ldr	r3, .L9+72
 468 01ba 1A60     		str	r2, [r3]	@ float
  92:Core/Src/main.c ****     //yPWM = htim2.Instance->ARR*(100)/100;
  93:Core/Src/main.c ****     htim2.Instance->CCR2 = yPWM;   
 469              		.loc 1 93 26
 470 01bc 174B     		ldr	r3, .L9+72
 471 01be 1B68     		ldr	r3, [r3]	@ float
 472              		.loc 1 93 10
 473 01c0 174A     		ldr	r2, .L9+76
 474 01c2 1468     		ldr	r4, [r2]
 475              		.loc 1 93 26
 476 01c4 1846     		mov	r0, r3
 477 01c6 FFF7FEFF 		bl	__aeabi_f2uiz
 478 01ca 0346     		mov	r3, r0
 479 01cc A363     		str	r3, [r4, #56]
  94:Core/Src/main.c **** }
 480              		.loc 1 94 1
 481 01ce 00BF     		nop
 482 01d0 B0BD     		pop	{r4, r5, r7, pc}
 483              	.L10:
 484 01d2 00BF     		.align	2
 485              	.L9:
 486 01d4 00000000 		.word	tim4ms
 487 01d8 00000000 		.word	Ts
 488 01dc 00000000 		.word	setpoint
 489 01e0 00000000 		.word	TempCelsiusMed
 490 01e4 00000000 		.word	erroAtual
 491 01e8 00000000 		.word	kp
 492 01ec 00000000 		.word	yp
 493 01f0 00000000 		.word	ki
 494 01f4 00000000 		.word	erroAnt
 495 01f8 00000000 		.word	yiAnt
 496 01fc 00000000 		.word	yi
 497 0200 00000000 		.word	kd
 498 0204 00000000 		.word	Nd
 499 0208 00000000 		.word	ydAnt
 500 020c 00000000 		.word	yd
 501 0210 00000000 		.word	y
 502 0214 0000C842 		.word	1120403456
 503 0218 00401C46 		.word	1176256512
 504 021c 00000000 		.word	yPWM
 505 0220 00000000 		.word	htim2
 506              		.cfi_endproc
 507              	.LFE65:
 509              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_TIM_PeriodElapsedCallback
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_TIM_PeriodElapsedCallback:
 518              	.LFB66:
  95:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim) // Interrupt do passo do motor
  96:Core/Src/main.c **** {
 519              		.loc 1 96 1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 11


 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              	.LCFI2:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 82B0     		sub	sp, sp, #8
 529              	.LCFI3:
 530              		.cfi_def_cfa_offset 16
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI4:
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
  97:Core/Src/main.c ****   TempCelsiusUser = TempCelsiusMed;
 535              		.loc 1 97 19
 536 0008 044B     		ldr	r3, .L12
 537 000a 1B68     		ldr	r3, [r3]	@ float
 538 000c 044A     		ldr	r2, .L12+4
 539 000e 1360     		str	r3, [r2]	@ float
  98:Core/Src/main.c ****   calcPid();
 540              		.loc 1 98 3
 541 0010 FFF7FEFF 		bl	calcPid
  99:Core/Src/main.c ****   //htim2.Instance->CCR2 = 0; // Para fazer curva em malha aberta
 100:Core/Src/main.c **** }
 542              		.loc 1 100 1
 543 0014 00BF     		nop
 544 0016 0837     		adds	r7, r7, #8
 545              	.LCFI5:
 546              		.cfi_def_cfa_offset 8
 547 0018 BD46     		mov	sp, r7
 548              	.LCFI6:
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 001a 80BD     		pop	{r7, pc}
 552              	.L13:
 553              		.align	2
 554              	.L12:
 555 001c 00000000 		.word	TempCelsiusMed
 556 0020 00000000 		.word	TempCelsiusUser
 557              		.cfi_endproc
 558              	.LFE66:
 560              		.section	.text.main,"ax",%progbits
 561              		.align	1
 562              		.global	main
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu softvfp
 568              	main:
 569              	.LFB67:
 101:Core/Src/main.c **** /* USER CODE END PFP */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 104:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 105:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 12


 106:Core/Src/main.c **** /* USER CODE END 0 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief  The application entry point.
 110:Core/Src/main.c ****   * @retval int
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** int main(void)
 113:Core/Src/main.c **** {
 570              		.loc 1 113 1
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 90B5     		push	{r4, r7, lr}
 575              	.LCFI7:
 576              		.cfi_def_cfa_offset 12
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 95B0     		sub	sp, sp, #84
 581              	.LCFI8:
 582              		.cfi_def_cfa_offset 96
 583 0004 12AF     		add	r7, sp, #72
 584              	.LCFI9:
 585              		.cfi_def_cfa 7, 24
 114:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 115:Core/Src/main.c ****   // Sensor Temp
 116:Core/Src/main.c ****   uint32_t iMedia = 1;
 586              		.loc 1 116 12
 587 0006 0123     		movs	r3, #1
 588 0008 7B60     		str	r3, [r7, #4]
 117:Core/Src/main.c ****   /* USER CODE END 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 122:Core/Src/main.c ****   HAL_Init();
 589              		.loc 1 122 3
 590 000a FFF7FEFF 		bl	HAL_Init
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Configure the system clock */
 129:Core/Src/main.c ****   SystemClock_Config();
 591              		.loc 1 129 3
 592 000e FFF7FEFF 		bl	SystemClock_Config
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Initialize all configured peripherals */
 136:Core/Src/main.c ****   MX_GPIO_Init();
 593              		.loc 1 136 3
 594 0012 FFF7FEFF 		bl	MX_GPIO_Init
 137:Core/Src/main.c ****   MX_I2C1_Init();
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 13


 595              		.loc 1 137 3
 596 0016 FFF7FEFF 		bl	MX_I2C1_Init
 138:Core/Src/main.c ****   MX_TIM2_Init();
 597              		.loc 1 138 3
 598 001a FFF7FEFF 		bl	MX_TIM2_Init
 139:Core/Src/main.c ****   MX_TIM4_Init();
 599              		.loc 1 139 3
 600 001e FFF7FEFF 		bl	MX_TIM4_Init
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   // Timer de Aquecimento
 143:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 601              		.loc 1 143 3
 602 0022 0421     		movs	r1, #4
 603 0024 3948     		ldr	r0, .L19
 604 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   //Sensor Temp
 146:Core/Src/main.c ****   TMP117_Initialization_DEFAULT(I2C_PORT);
 605              		.loc 1 146 3
 606 002a 394C     		ldr	r4, .L19+4
 607 002c 6846     		mov	r0, sp
 608 002e 04F11003 		add	r3, r4, #16
 609 0032 4422     		movs	r2, #68
 610 0034 1946     		mov	r1, r3
 611 0036 FFF7FEFF 		bl	memcpy
 612 003a 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 613 003e FFF7FEFF 		bl	TMP117_Initialization_DEFAULT
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   //PID
 150:Core/Src/main.c ****   setpoint = 37; 
 614              		.loc 1 150 12
 615 0042 344B     		ldr	r3, .L19+8
 616 0044 344A     		ldr	r2, .L19+12
 617 0046 1A60     		str	r2, [r3]	@ float
 151:Core/Src/main.c ****   TempCelsius = 25.0;
 618              		.loc 1 151 15
 619 0048 344B     		ldr	r3, .L19+16
 620 004a 354A     		ldr	r2, .L19+20
 621 004c 1A60     		str	r2, [r3]	@ float
 152:Core/Src/main.c ****   TempCelsiusUser = 25;
 622              		.loc 1 152 19
 623 004e 354B     		ldr	r3, .L19+24
 624 0050 334A     		ldr	r2, .L19+20
 625 0052 1A60     		str	r2, [r3]	@ float
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   kp = 10.0; //Calibrar depois
 626              		.loc 1 154 6
 627 0054 344B     		ldr	r3, .L19+28
 628 0056 354A     		ldr	r2, .L19+32
 629 0058 1A60     		str	r2, [r3]	@ float
 155:Core/Src/main.c ****   ki = 0.03;
 630              		.loc 1 155 6
 631 005a 354B     		ldr	r3, .L19+36
 632 005c 354A     		ldr	r2, .L19+40
 633 005e 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 14


 156:Core/Src/main.c ****   kd = 10.0;
 634              		.loc 1 156 6
 635 0060 354B     		ldr	r3, .L19+44
 636 0062 324A     		ldr	r2, .L19+32
 637 0064 1A60     		str	r2, [r3]	@ float
 157:Core/Src/main.c ****   erroAnt = 0.0; //Qual o valor inicial?
 638              		.loc 1 157 11
 639 0066 354B     		ldr	r3, .L19+48
 640 0068 4FF00002 		mov	r2, #0
 641 006c 1A60     		str	r2, [r3]	@ float
 158:Core/Src/main.c ****   yiAnt = 0.0;
 642              		.loc 1 158 9
 643 006e 344B     		ldr	r3, .L19+52
 644 0070 4FF00002 		mov	r2, #0
 645 0074 1A60     		str	r2, [r3]	@ float
 159:Core/Src/main.c ****   ydAnt = 0.0;
 646              		.loc 1 159 9
 647 0076 334B     		ldr	r3, .L19+56
 648 0078 4FF00002 		mov	r2, #0
 649 007c 1A60     		str	r2, [r3]	@ float
 160:Core/Src/main.c ****   Nd = 1; // Filtro
 650              		.loc 1 160 6
 651 007e 324B     		ldr	r3, .L19+60
 652 0080 4FF07E52 		mov	r2, #1065353216
 653 0084 1A60     		str	r2, [r3]	@ float
 654              	.L18:
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   
 166:Core/Src/main.c ****   /* USER CODE END 2 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Infinite loop */
 169:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 170:Core/Src/main.c ****   while (1)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     
 173:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0); // LED
 655              		.loc 1 173 5
 656 0086 0022     		movs	r2, #0
 657 0088 4FF40051 		mov	r1, #8192
 658 008c 2F48     		ldr	r0, .L19+64
 659 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 174:Core/Src/main.c ****      
 175:Core/Src/main.c ****     
 176:Core/Src/main.c ****     if(TMP117_get_Temperature(I2C_PORT, &TempCelsiusTemporaria)==HAL_OK)
 660              		.loc 1 176 8
 661 0092 1F4C     		ldr	r4, .L19+4
 662 0094 2E4B     		ldr	r3, .L19+68
 663 0096 1193     		str	r3, [sp, #68]
 664 0098 6846     		mov	r0, sp
 665 009a 04F11003 		add	r3, r4, #16
 666 009e 4422     		movs	r2, #68
 667 00a0 1946     		mov	r1, r3
 668 00a2 FFF7FEFF 		bl	memcpy
 669 00a6 94E80F00 		ldm	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 15


 670 00aa FFF7FEFF 		bl	TMP117_get_Temperature
 671 00ae 0346     		mov	r3, r0
 672              		.loc 1 176 7
 673 00b0 002B     		cmp	r3, #0
 674 00b2 06D1     		bne	.L15
 177:Core/Src/main.c ****     {
 178:Core/Src/main.c ****       // Interrupt do PID
 179:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim4);
 675              		.loc 1 179 7
 676 00b4 2748     		ldr	r0, .L19+72
 677 00b6 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 180:Core/Src/main.c ****       TempCelsius = TempCelsiusTemporaria; //tudo ok, pode usar variavel temporaria
 678              		.loc 1 180 19
 679 00ba 254B     		ldr	r3, .L19+68
 680 00bc 1B68     		ldr	r3, [r3]	@ float
 681 00be 174A     		ldr	r2, .L19+16
 682 00c0 1360     		str	r3, [r2]	@ float
 683              	.L15:
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     if(iMedia<=10) // Faz a media da temparatura de 10 amostras
 684              		.loc 1 183 7
 685 00c2 7B68     		ldr	r3, [r7, #4]
 686 00c4 0A2B     		cmp	r3, #10
 687 00c6 0FD8     		bhi	.L16
 184:Core/Src/main.c ****     {
 185:Core/Src/main.c ****       TempSoma = TempSoma + TempCelsius;
 688              		.loc 1 185 27
 689 00c8 234B     		ldr	r3, .L19+76
 690 00ca 1B68     		ldr	r3, [r3]	@ float
 691 00cc 134A     		ldr	r2, .L19+16
 692 00ce 1268     		ldr	r2, [r2]	@ float
 693 00d0 1146     		mov	r1, r2
 694 00d2 1846     		mov	r0, r3
 695 00d4 FFF7FEFF 		bl	__aeabi_fadd
 696 00d8 0346     		mov	r3, r0
 697 00da 1A46     		mov	r2, r3
 698              		.loc 1 185 16
 699 00dc 1E4B     		ldr	r3, .L19+76
 700 00de 1A60     		str	r2, [r3]	@ float
 186:Core/Src/main.c ****       iMedia++;
 701              		.loc 1 186 13
 702 00e0 7B68     		ldr	r3, [r7, #4]
 703 00e2 0133     		adds	r3, r3, #1
 704 00e4 7B60     		str	r3, [r7, #4]
 705 00e6 CEE7     		b	.L18
 706              	.L16:
 187:Core/Src/main.c ****     }
 188:Core/Src/main.c ****     else
 189:Core/Src/main.c ****     {
 190:Core/Src/main.c ****       TempCelsiusMed = TempSoma/10.0;
 707              		.loc 1 190 32
 708 00e8 1B4B     		ldr	r3, .L19+76
 709 00ea 1B68     		ldr	r3, [r3]	@ float
 710 00ec 0F49     		ldr	r1, .L19+32
 711 00ee 1846     		mov	r0, r3
 712 00f0 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 16


 713 00f4 0346     		mov	r3, r0
 714 00f6 1A46     		mov	r2, r3
 715              		.loc 1 190 22
 716 00f8 184B     		ldr	r3, .L19+80
 717 00fa 1A60     		str	r2, [r3]	@ float
 191:Core/Src/main.c ****       iMedia = 1;
 718              		.loc 1 191 14
 719 00fc 0123     		movs	r3, #1
 720 00fe 7B60     		str	r3, [r7, #4]
 192:Core/Src/main.c ****       TempSoma = 0.0;
 721              		.loc 1 192 16
 722 0100 154B     		ldr	r3, .L19+76
 723 0102 4FF00002 		mov	r2, #0
 724 0106 1A60     		str	r2, [r3]	@ float
 173:Core/Src/main.c ****      
 725              		.loc 1 173 5
 726 0108 BDE7     		b	.L18
 727              	.L20:
 728 010a 00BF     		.align	2
 729              	.L19:
 730 010c 00000000 		.word	htim2
 731 0110 00000000 		.word	hi2c1
 732 0114 00000000 		.word	setpoint
 733 0118 00001442 		.word	1108606976
 734 011c 00000000 		.word	TempCelsius
 735 0120 0000C841 		.word	1103626240
 736 0124 00000000 		.word	TempCelsiusUser
 737 0128 00000000 		.word	kp
 738 012c 00002041 		.word	1092616192
 739 0130 00000000 		.word	ki
 740 0134 8FC2F53C 		.word	1022739087
 741 0138 00000000 		.word	kd
 742 013c 00000000 		.word	erroAnt
 743 0140 00000000 		.word	yiAnt
 744 0144 00000000 		.word	ydAnt
 745 0148 00000000 		.word	Nd
 746 014c 00100140 		.word	1073811456
 747 0150 00000000 		.word	TempCelsiusTemporaria
 748 0154 00000000 		.word	htim4
 749 0158 00000000 		.word	TempSoma
 750 015c 00000000 		.word	TempCelsiusMed
 751              		.cfi_endproc
 752              	.LFE67:
 754              		.section	.text.SystemClock_Config,"ax",%progbits
 755              		.align	1
 756              		.global	SystemClock_Config
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	SystemClock_Config:
 763              	.LFB68:
 193:Core/Src/main.c ****     }
 194:Core/Src/main.c ****        
 195:Core/Src/main.c ****     /* USER CODE END WHILE */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 17


 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   /* USER CODE END 3 */
 200:Core/Src/main.c **** }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief System Clock Configuration
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** void SystemClock_Config(void)
 207:Core/Src/main.c **** {
 764              		.loc 1 207 1
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 64
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              	.LCFI10:
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 90B0     		sub	sp, sp, #64
 774              	.LCFI11:
 775              		.cfi_def_cfa_offset 72
 776 0004 00AF     		add	r7, sp, #0
 777              	.LCFI12:
 778              		.cfi_def_cfa_register 7
 208:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 779              		.loc 1 208 22
 780 0006 07F11803 		add	r3, r7, #24
 781 000a 2822     		movs	r2, #40
 782 000c 0021     		movs	r1, #0
 783 000e 1846     		mov	r0, r3
 784 0010 FFF7FEFF 		bl	memset
 209:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 785              		.loc 1 209 22
 786 0014 3B1D     		adds	r3, r7, #4
 787 0016 0022     		movs	r2, #0
 788 0018 1A60     		str	r2, [r3]
 789 001a 5A60     		str	r2, [r3, #4]
 790 001c 9A60     		str	r2, [r3, #8]
 791 001e DA60     		str	r2, [r3, #12]
 792 0020 1A61     		str	r2, [r3, #16]
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 212:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 793              		.loc 1 214 36
 794 0022 0123     		movs	r3, #1
 795 0024 BB61     		str	r3, [r7, #24]
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 796              		.loc 1 215 30
 797 0026 4FF48033 		mov	r3, #65536
 798 002a FB61     		str	r3, [r7, #28]
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 799              		.loc 1 216 36
 800 002c 0023     		movs	r3, #0
 801 002e 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 18


 217:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 802              		.loc 1 217 30
 803 0030 0123     		movs	r3, #1
 804 0032 BB62     		str	r3, [r7, #40]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 805              		.loc 1 218 34
 806 0034 0223     		movs	r3, #2
 807 0036 7B63     		str	r3, [r7, #52]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 808              		.loc 1 219 35
 809 0038 4FF48033 		mov	r3, #65536
 810 003c BB63     		str	r3, [r7, #56]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 811              		.loc 1 220 32
 812 003e 4FF4E013 		mov	r3, #1835008
 813 0042 FB63     		str	r3, [r7, #60]
 221:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 814              		.loc 1 221 7
 815 0044 07F11803 		add	r3, r7, #24
 816 0048 1846     		mov	r0, r3
 817 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 818 004e 0346     		mov	r3, r0
 819              		.loc 1 221 6
 820 0050 002B     		cmp	r3, #0
 821 0052 01D0     		beq	.L22
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 822              		.loc 1 223 5
 823 0054 FFF7FEFF 		bl	Error_Handler
 824              	.L22:
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 825              		.loc 1 227 31
 826 0058 0F23     		movs	r3, #15
 827 005a 7B60     		str	r3, [r7, #4]
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 229:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 828              		.loc 1 229 34
 829 005c 0223     		movs	r3, #2
 830 005e BB60     		str	r3, [r7, #8]
 230:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 831              		.loc 1 230 35
 832 0060 0023     		movs	r3, #0
 833 0062 FB60     		str	r3, [r7, #12]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 834              		.loc 1 231 36
 835 0064 4FF48063 		mov	r3, #1024
 836 0068 3B61     		str	r3, [r7, #16]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 837              		.loc 1 232 36
 838 006a 0023     		movs	r3, #0
 839 006c 7B61     		str	r3, [r7, #20]
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 840              		.loc 1 234 7
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 19


 841 006e 3B1D     		adds	r3, r7, #4
 842 0070 0221     		movs	r1, #2
 843 0072 1846     		mov	r0, r3
 844 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 845 0078 0346     		mov	r3, r0
 846              		.loc 1 234 6
 847 007a 002B     		cmp	r3, #0
 848 007c 01D0     		beq	.L24
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 849              		.loc 1 236 5
 850 007e FFF7FEFF 		bl	Error_Handler
 851              	.L24:
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** }
 852              		.loc 1 238 1
 853 0082 00BF     		nop
 854 0084 4037     		adds	r7, r7, #64
 855              	.LCFI13:
 856              		.cfi_def_cfa_offset 8
 857 0086 BD46     		mov	sp, r7
 858              	.LCFI14:
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 0088 80BD     		pop	{r7, pc}
 862              		.cfi_endproc
 863              	.LFE68:
 865              		.section	.text.MX_I2C1_Init,"ax",%progbits
 866              		.align	1
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu softvfp
 872              	MX_I2C1_Init:
 873              	.LFB69:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_I2C1_Init(void)
 246:Core/Src/main.c **** {
 874              		.loc 1 246 1
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              	.LCFI15:
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 00AF     		add	r7, sp, #0
 884              	.LCFI16:
 885              		.cfi_def_cfa_register 7
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 20


 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 255:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 886              		.loc 1 255 18
 887 0004 134B     		ldr	r3, .L28
 888 0006 144A     		ldr	r2, .L28+4
 889 0008 1A60     		str	r2, [r3]
 256:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 10000;
 890              		.loc 1 256 25
 891 000a 124B     		ldr	r3, .L28
 892 000c 42F21072 		movw	r2, #10000
 893 0010 5A60     		str	r2, [r3, #4]
 257:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 894              		.loc 1 257 24
 895 0012 104B     		ldr	r3, .L28
 896 0014 0022     		movs	r2, #0
 897 0016 9A60     		str	r2, [r3, #8]
 258:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 898              		.loc 1 258 26
 899 0018 0E4B     		ldr	r3, .L28
 900 001a 0022     		movs	r2, #0
 901 001c DA60     		str	r2, [r3, #12]
 259:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 902              		.loc 1 259 29
 903 001e 0D4B     		ldr	r3, .L28
 904 0020 4FF48042 		mov	r2, #16384
 905 0024 1A61     		str	r2, [r3, #16]
 260:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 906              		.loc 1 260 30
 907 0026 0B4B     		ldr	r3, .L28
 908 0028 0022     		movs	r2, #0
 909 002a 5A61     		str	r2, [r3, #20]
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 910              		.loc 1 261 26
 911 002c 094B     		ldr	r3, .L28
 912 002e 0022     		movs	r2, #0
 913 0030 9A61     		str	r2, [r3, #24]
 262:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 914              		.loc 1 262 30
 915 0032 084B     		ldr	r3, .L28
 916 0034 0022     		movs	r2, #0
 917 0036 DA61     		str	r2, [r3, #28]
 263:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 918              		.loc 1 263 28
 919 0038 064B     		ldr	r3, .L28
 920 003a 0022     		movs	r2, #0
 921 003c 1A62     		str	r2, [r3, #32]
 264:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 922              		.loc 1 264 7
 923 003e 0548     		ldr	r0, .L28
 924 0040 FFF7FEFF 		bl	HAL_I2C_Init
 925 0044 0346     		mov	r3, r0
 926              		.loc 1 264 6
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 21


 927 0046 002B     		cmp	r3, #0
 928 0048 01D0     		beq	.L27
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 929              		.loc 1 266 5
 930 004a FFF7FEFF 		bl	Error_Handler
 931              	.L27:
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** }
 932              		.loc 1 272 1
 933 004e 00BF     		nop
 934 0050 80BD     		pop	{r7, pc}
 935              	.L29:
 936 0052 00BF     		.align	2
 937              	.L28:
 938 0054 00000000 		.word	hi2c1
 939 0058 00540040 		.word	1073763328
 940              		.cfi_endproc
 941              	.LFE69:
 943              		.section	.text.MX_TIM2_Init,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu softvfp
 950              	MX_TIM2_Init:
 951              	.LFB70:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /**
 275:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 276:Core/Src/main.c ****   * @param None
 277:Core/Src/main.c ****   * @retval None
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c **** static void MX_TIM2_Init(void)
 280:Core/Src/main.c **** {
 952              		.loc 1 280 1
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 56
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 80B5     		push	{r7, lr}
 957              	.LCFI17:
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 8EB0     		sub	sp, sp, #56
 962              	.LCFI18:
 963              		.cfi_def_cfa_offset 64
 964 0004 00AF     		add	r7, sp, #0
 965              	.LCFI19:
 966              		.cfi_def_cfa_register 7
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 283:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 22


 284:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 967              		.loc 1 286 26
 968 0006 07F12803 		add	r3, r7, #40
 969 000a 0022     		movs	r2, #0
 970 000c 1A60     		str	r2, [r3]
 971 000e 5A60     		str	r2, [r3, #4]
 972 0010 9A60     		str	r2, [r3, #8]
 973 0012 DA60     		str	r2, [r3, #12]
 287:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 974              		.loc 1 287 27
 975 0014 07F12003 		add	r3, r7, #32
 976 0018 0022     		movs	r2, #0
 977 001a 1A60     		str	r2, [r3]
 978 001c 5A60     		str	r2, [r3, #4]
 288:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 979              		.loc 1 288 22
 980 001e 3B1D     		adds	r3, r7, #4
 981 0020 0022     		movs	r2, #0
 982 0022 1A60     		str	r2, [r3]
 983 0024 5A60     		str	r2, [r3, #4]
 984 0026 9A60     		str	r2, [r3, #8]
 985 0028 DA60     		str	r2, [r3, #12]
 986 002a 1A61     		str	r2, [r3, #16]
 987 002c 5A61     		str	r2, [r3, #20]
 988 002e 9A61     		str	r2, [r3, #24]
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 293:Core/Src/main.c ****   htim2.Instance = TIM2;
 989              		.loc 1 293 18
 990 0030 2E4B     		ldr	r3, .L36
 991 0032 4FF08042 		mov	r2, #1073741824
 992 0036 1A60     		str	r2, [r3]
 294:Core/Src/main.c ****   htim2.Init.Prescaler = 7200-1;
 993              		.loc 1 294 24
 994 0038 2C4B     		ldr	r3, .L36
 995 003a 41F61F42 		movw	r2, #7199
 996 003e 5A60     		str	r2, [r3, #4]
 295:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 997              		.loc 1 295 26
 998 0040 2A4B     		ldr	r3, .L36
 999 0042 0022     		movs	r2, #0
 1000 0044 9A60     		str	r2, [r3, #8]
 296:Core/Src/main.c ****   htim2.Init.Period = 10000;
 1001              		.loc 1 296 21
 1002 0046 294B     		ldr	r3, .L36
 1003 0048 42F21072 		movw	r2, #10000
 1004 004c DA60     		str	r2, [r3, #12]
 297:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1005              		.loc 1 297 28
 1006 004e 274B     		ldr	r3, .L36
 1007 0050 0022     		movs	r2, #0
 1008 0052 1A61     		str	r2, [r3, #16]
 298:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 23


 1009              		.loc 1 298 32
 1010 0054 254B     		ldr	r3, .L36
 1011 0056 0022     		movs	r2, #0
 1012 0058 9A61     		str	r2, [r3, #24]
 299:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1013              		.loc 1 299 7
 1014 005a 2448     		ldr	r0, .L36
 1015 005c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1016 0060 0346     		mov	r3, r0
 1017              		.loc 1 299 6
 1018 0062 002B     		cmp	r3, #0
 1019 0064 01D0     		beq	.L31
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 1020              		.loc 1 301 5
 1021 0066 FFF7FEFF 		bl	Error_Handler
 1022              	.L31:
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1023              		.loc 1 303 34
 1024 006a 4FF48053 		mov	r3, #4096
 1025 006e BB62     		str	r3, [r7, #40]
 304:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1026              		.loc 1 304 7
 1027 0070 07F12803 		add	r3, r7, #40
 1028 0074 1946     		mov	r1, r3
 1029 0076 1D48     		ldr	r0, .L36
 1030 0078 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1031 007c 0346     		mov	r3, r0
 1032              		.loc 1 304 6
 1033 007e 002B     		cmp	r3, #0
 1034 0080 01D0     		beq	.L32
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 1035              		.loc 1 306 5
 1036 0082 FFF7FEFF 		bl	Error_Handler
 1037              	.L32:
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1038              		.loc 1 308 7
 1039 0086 1948     		ldr	r0, .L36
 1040 0088 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1041 008c 0346     		mov	r3, r0
 1042              		.loc 1 308 6
 1043 008e 002B     		cmp	r3, #0
 1044 0090 01D0     		beq	.L33
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 1045              		.loc 1 310 5
 1046 0092 FFF7FEFF 		bl	Error_Handler
 1047              	.L33:
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1048              		.loc 1 312 37
 1049 0096 0023     		movs	r3, #0
 1050 0098 3B62     		str	r3, [r7, #32]
 313:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 24


 1051              		.loc 1 313 33
 1052 009a 0023     		movs	r3, #0
 1053 009c 7B62     		str	r3, [r7, #36]
 314:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1054              		.loc 1 314 7
 1055 009e 07F12003 		add	r3, r7, #32
 1056 00a2 1946     		mov	r1, r3
 1057 00a4 1148     		ldr	r0, .L36
 1058 00a6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1059 00aa 0346     		mov	r3, r0
 1060              		.loc 1 314 6
 1061 00ac 002B     		cmp	r3, #0
 1062 00ae 01D0     		beq	.L34
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
 1063              		.loc 1 316 5
 1064 00b0 FFF7FEFF 		bl	Error_Handler
 1065              	.L34:
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1066              		.loc 1 318 20
 1067 00b4 6023     		movs	r3, #96
 1068 00b6 7B60     		str	r3, [r7, #4]
 319:Core/Src/main.c ****   sConfigOC.Pulse = 10000;
 1069              		.loc 1 319 19
 1070 00b8 42F21073 		movw	r3, #10000
 1071 00bc BB60     		str	r3, [r7, #8]
 320:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1072              		.loc 1 320 24
 1073 00be 0023     		movs	r3, #0
 1074 00c0 FB60     		str	r3, [r7, #12]
 321:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1075              		.loc 1 321 24
 1076 00c2 0023     		movs	r3, #0
 1077 00c4 7B61     		str	r3, [r7, #20]
 322:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1078              		.loc 1 322 7
 1079 00c6 3B1D     		adds	r3, r7, #4
 1080 00c8 0422     		movs	r2, #4
 1081 00ca 1946     		mov	r1, r3
 1082 00cc 0748     		ldr	r0, .L36
 1083 00ce FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1084 00d2 0346     		mov	r3, r0
 1085              		.loc 1 322 6
 1086 00d4 002B     		cmp	r3, #0
 1087 00d6 01D0     		beq	.L35
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 1088              		.loc 1 324 5
 1089 00d8 FFF7FEFF 		bl	Error_Handler
 1090              	.L35:
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 329:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 1091              		.loc 1 329 3
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 25


 1092 00dc 0348     		ldr	r0, .L36
 1093 00de FFF7FEFF 		bl	HAL_TIM_MspPostInit
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** }
 1094              		.loc 1 331 1
 1095 00e2 00BF     		nop
 1096 00e4 3837     		adds	r7, r7, #56
 1097              	.LCFI20:
 1098              		.cfi_def_cfa_offset 8
 1099 00e6 BD46     		mov	sp, r7
 1100              	.LCFI21:
 1101              		.cfi_def_cfa_register 13
 1102              		@ sp needed
 1103 00e8 80BD     		pop	{r7, pc}
 1104              	.L37:
 1105 00ea 00BF     		.align	2
 1106              	.L36:
 1107 00ec 00000000 		.word	htim2
 1108              		.cfi_endproc
 1109              	.LFE70:
 1111              		.global	__aeabi_ui2d
 1112              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1113              		.align	1
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu softvfp
 1119              	MX_TIM4_Init:
 1120              	.LFB71:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 335:Core/Src/main.c ****   * @param None
 336:Core/Src/main.c ****   * @retval None
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c **** static void MX_TIM4_Init(void)
 339:Core/Src/main.c **** {
 1121              		.loc 1 339 1
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 24
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 0000 80B5     		push	{r7, lr}
 1126              	.LCFI22:
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 86B0     		sub	sp, sp, #24
 1131              	.LCFI23:
 1132              		.cfi_def_cfa_offset 32
 1133 0004 00AF     		add	r7, sp, #0
 1134              	.LCFI24:
 1135              		.cfi_def_cfa_register 7
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 344:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 26


 345:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1136              		.loc 1 345 26
 1137 0006 07F10803 		add	r3, r7, #8
 1138 000a 0022     		movs	r2, #0
 1139 000c 1A60     		str	r2, [r3]
 1140 000e 5A60     		str	r2, [r3, #4]
 1141 0010 9A60     		str	r2, [r3, #8]
 1142 0012 DA60     		str	r2, [r3, #12]
 346:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1143              		.loc 1 346 27
 1144 0014 3B46     		mov	r3, r7
 1145 0016 0022     		movs	r2, #0
 1146 0018 1A60     		str	r2, [r3]
 1147 001a 5A60     		str	r2, [r3, #4]
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 351:Core/Src/main.c ****   htim4.Instance = TIM4;
 1148              		.loc 1 351 18
 1149 001c 2C4B     		ldr	r3, .L42+8
 1150 001e 2D4A     		ldr	r2, .L42+12
 1151 0020 1A60     		str	r2, [r3]
 352:Core/Src/main.c ****   htim4.Init.Prescaler = 7200-1;
 1152              		.loc 1 352 24
 1153 0022 2B4B     		ldr	r3, .L42+8
 1154 0024 41F61F42 		movw	r2, #7199
 1155 0028 5A60     		str	r2, [r3, #4]
 353:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1156              		.loc 1 353 26
 1157 002a 294B     		ldr	r3, .L42+8
 1158 002c 0022     		movs	r2, #0
 1159 002e 9A60     		str	r2, [r3, #8]
 354:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1160              		.loc 1 354 21
 1161 0030 274B     		ldr	r3, .L42+8
 1162 0032 42F21072 		movw	r2, #10000
 1163 0036 DA60     		str	r2, [r3, #12]
 355:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1164              		.loc 1 355 28
 1165 0038 254B     		ldr	r3, .L42+8
 1166 003a 0022     		movs	r2, #0
 1167 003c 1A61     		str	r2, [r3, #16]
 356:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1168              		.loc 1 356 32
 1169 003e 244B     		ldr	r3, .L42+8
 1170 0040 0022     		movs	r2, #0
 1171 0042 9A61     		str	r2, [r3, #24]
 357:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1172              		.loc 1 357 7
 1173 0044 2248     		ldr	r0, .L42+8
 1174 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1175 004a 0346     		mov	r3, r0
 1176              		.loc 1 357 6
 1177 004c 002B     		cmp	r3, #0
 1178 004e 01D0     		beq	.L39
 358:Core/Src/main.c ****   {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 27


 359:Core/Src/main.c ****     Error_Handler();
 1179              		.loc 1 359 5
 1180 0050 FFF7FEFF 		bl	Error_Handler
 1181              	.L39:
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1182              		.loc 1 361 34
 1183 0054 4FF48053 		mov	r3, #4096
 1184 0058 BB60     		str	r3, [r7, #8]
 362:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1185              		.loc 1 362 7
 1186 005a 07F10803 		add	r3, r7, #8
 1187 005e 1946     		mov	r1, r3
 1188 0060 1B48     		ldr	r0, .L42+8
 1189 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1190 0066 0346     		mov	r3, r0
 1191              		.loc 1 362 6
 1192 0068 002B     		cmp	r3, #0
 1193 006a 01D0     		beq	.L40
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 1194              		.loc 1 364 5
 1195 006c FFF7FEFF 		bl	Error_Handler
 1196              	.L40:
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1197              		.loc 1 366 37
 1198 0070 0023     		movs	r3, #0
 1199 0072 3B60     		str	r3, [r7]
 367:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1200              		.loc 1 367 33
 1201 0074 0023     		movs	r3, #0
 1202 0076 7B60     		str	r3, [r7, #4]
 368:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1203              		.loc 1 368 7
 1204 0078 3B46     		mov	r3, r7
 1205 007a 1946     		mov	r1, r3
 1206 007c 1448     		ldr	r0, .L42+8
 1207 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1208 0082 0346     		mov	r3, r0
 1209              		.loc 1 368 6
 1210 0084 002B     		cmp	r3, #0
 1211 0086 01D0     		beq	.L41
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 1212              		.loc 1 370 5
 1213 0088 FFF7FEFF 		bl	Error_Handler
 1214              	.L41:
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 373:Core/Src/main.c ****   tim4ms = (htim4.Init.Prescaler+1)*htim4.Init.Period/72000000.0;
 1215              		.loc 1 373 23
 1216 008c 104B     		ldr	r3, .L42+8
 1217 008e 5B68     		ldr	r3, [r3, #4]
 1218              		.loc 1 373 33
 1219 0090 0133     		adds	r3, r3, #1
 1220              		.loc 1 373 47
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 28


 1221 0092 0F4A     		ldr	r2, .L42+8
 1222 0094 D268     		ldr	r2, [r2, #12]
 1223              		.loc 1 373 36
 1224 0096 02FB03F3 		mul	r3, r2, r3
 1225              		.loc 1 373 54
 1226 009a 1846     		mov	r0, r3
 1227 009c FFF7FEFF 		bl	__aeabi_ui2d
 1228 00a0 09A3     		adr	r3, .L42
 1229 00a2 D3E90023 		ldrd	r2, [r3]
 1230 00a6 FFF7FEFF 		bl	__aeabi_ddiv
 1231 00aa 0246     		mov	r2, r0
 1232 00ac 0B46     		mov	r3, r1
 1233 00ae 1046     		mov	r0, r2
 1234 00b0 1946     		mov	r1, r3
 1235 00b2 FFF7FEFF 		bl	__aeabi_d2f
 1236 00b6 0346     		mov	r3, r0
 1237              		.loc 1 373 10
 1238 00b8 074A     		ldr	r2, .L42+16
 1239 00ba 1360     		str	r3, [r2]	@ float
 374:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** }
 1240              		.loc 1 376 1
 1241 00bc 00BF     		nop
 1242 00be 1837     		adds	r7, r7, #24
 1243              	.LCFI25:
 1244              		.cfi_def_cfa_offset 8
 1245 00c0 BD46     		mov	sp, r7
 1246              	.LCFI26:
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 00c2 80BD     		pop	{r7, pc}
 1250              	.L43:
 1251 00c4 AFF30080 		.align	3
 1252              	.L42:
 1253 00c8 00000000 		.word	0
 1254 00cc 882A9141 		.word	1100032648
 1255 00d0 00000000 		.word	htim4
 1256 00d4 00080040 		.word	1073743872
 1257 00d8 00000000 		.word	tim4ms
 1258              		.cfi_endproc
 1259              	.LFE71:
 1261              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1262              		.align	1
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu softvfp
 1268              	MX_GPIO_Init:
 1269              	.LFB72:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****   * @brief GPIO Initialization Function
 380:Core/Src/main.c ****   * @param None
 381:Core/Src/main.c ****   * @retval None
 382:Core/Src/main.c ****   */
 383:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 29


 384:Core/Src/main.c **** {
 1270              		.loc 1 384 1
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 32
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274 0000 80B5     		push	{r7, lr}
 1275              	.LCFI27:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 88B0     		sub	sp, sp, #32
 1280              	.LCFI28:
 1281              		.cfi_def_cfa_offset 40
 1282 0004 00AF     		add	r7, sp, #0
 1283              	.LCFI29:
 1284              		.cfi_def_cfa_register 7
 385:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1285              		.loc 1 385 20
 1286 0006 07F11003 		add	r3, r7, #16
 1287 000a 0022     		movs	r2, #0
 1288 000c 1A60     		str	r2, [r3]
 1289 000e 5A60     		str	r2, [r3, #4]
 1290 0010 9A60     		str	r2, [r3, #8]
 1291 0012 DA60     		str	r2, [r3, #12]
 1292              	.LBB4:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 388:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1293              		.loc 1 388 3
 1294 0014 244B     		ldr	r3, .L45
 1295 0016 9B69     		ldr	r3, [r3, #24]
 1296 0018 234A     		ldr	r2, .L45
 1297 001a 43F01003 		orr	r3, r3, #16
 1298 001e 9361     		str	r3, [r2, #24]
 1299 0020 214B     		ldr	r3, .L45
 1300 0022 9B69     		ldr	r3, [r3, #24]
 1301 0024 03F01003 		and	r3, r3, #16
 1302 0028 FB60     		str	r3, [r7, #12]
 1303 002a FB68     		ldr	r3, [r7, #12]
 1304              	.LBE4:
 1305              	.LBB5:
 389:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1306              		.loc 1 389 3
 1307 002c 1E4B     		ldr	r3, .L45
 1308 002e 9B69     		ldr	r3, [r3, #24]
 1309 0030 1D4A     		ldr	r2, .L45
 1310 0032 43F02003 		orr	r3, r3, #32
 1311 0036 9361     		str	r3, [r2, #24]
 1312 0038 1B4B     		ldr	r3, .L45
 1313 003a 9B69     		ldr	r3, [r3, #24]
 1314 003c 03F02003 		and	r3, r3, #32
 1315 0040 BB60     		str	r3, [r7, #8]
 1316 0042 BB68     		ldr	r3, [r7, #8]
 1317              	.LBE5:
 1318              	.LBB6:
 390:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1319              		.loc 1 390 3
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 30


 1320 0044 184B     		ldr	r3, .L45
 1321 0046 9B69     		ldr	r3, [r3, #24]
 1322 0048 174A     		ldr	r2, .L45
 1323 004a 43F00403 		orr	r3, r3, #4
 1324 004e 9361     		str	r3, [r2, #24]
 1325 0050 154B     		ldr	r3, .L45
 1326 0052 9B69     		ldr	r3, [r3, #24]
 1327 0054 03F00403 		and	r3, r3, #4
 1328 0058 7B60     		str	r3, [r7, #4]
 1329 005a 7B68     		ldr	r3, [r7, #4]
 1330              	.LBE6:
 1331              	.LBB7:
 391:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1332              		.loc 1 391 3
 1333 005c 124B     		ldr	r3, .L45
 1334 005e 9B69     		ldr	r3, [r3, #24]
 1335 0060 114A     		ldr	r2, .L45
 1336 0062 43F00803 		orr	r3, r3, #8
 1337 0066 9361     		str	r3, [r2, #24]
 1338 0068 0F4B     		ldr	r3, .L45
 1339 006a 9B69     		ldr	r3, [r3, #24]
 1340 006c 03F00803 		and	r3, r3, #8
 1341 0070 3B60     		str	r3, [r7]
 1342 0072 3B68     		ldr	r3, [r7]
 1343              	.LBE7:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 394:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1344              		.loc 1 394 3
 1345 0074 0022     		movs	r2, #0
 1346 0076 4FF40051 		mov	r1, #8192
 1347 007a 0C48     		ldr	r0, .L45+4
 1348 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 397:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 1349              		.loc 1 397 23
 1350 0080 4FF40053 		mov	r3, #8192
 1351 0084 3B61     		str	r3, [r7, #16]
 398:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1352              		.loc 1 398 24
 1353 0086 0123     		movs	r3, #1
 1354 0088 7B61     		str	r3, [r7, #20]
 399:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1355              		.loc 1 399 24
 1356 008a 0023     		movs	r3, #0
 1357 008c BB61     		str	r3, [r7, #24]
 400:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1358              		.loc 1 400 25
 1359 008e 0223     		movs	r3, #2
 1360 0090 FB61     		str	r3, [r7, #28]
 401:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1361              		.loc 1 401 3
 1362 0092 07F11003 		add	r3, r7, #16
 1363 0096 1946     		mov	r1, r3
 1364 0098 0448     		ldr	r0, .L45+4
 1365 009a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 31


 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** }
 1366              		.loc 1 403 1
 1367 009e 00BF     		nop
 1368 00a0 2037     		adds	r7, r7, #32
 1369              	.LCFI30:
 1370              		.cfi_def_cfa_offset 8
 1371 00a2 BD46     		mov	sp, r7
 1372              	.LCFI31:
 1373              		.cfi_def_cfa_register 13
 1374              		@ sp needed
 1375 00a4 80BD     		pop	{r7, pc}
 1376              	.L46:
 1377 00a6 00BF     		.align	2
 1378              	.L45:
 1379 00a8 00100240 		.word	1073876992
 1380 00ac 00100140 		.word	1073811456
 1381              		.cfi_endproc
 1382              	.LFE72:
 1384              		.section	.text.Error_Handler,"ax",%progbits
 1385              		.align	1
 1386              		.global	Error_Handler
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1390              		.fpu softvfp
 1392              	Error_Handler:
 1393              	.LFB73:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /* USER CODE END 4 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 411:Core/Src/main.c ****   * @retval None
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c **** void Error_Handler(void)
 414:Core/Src/main.c **** {
 1394              		.loc 1 414 1
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399 0000 80B4     		push	{r7}
 1400              	.LCFI32:
 1401              		.cfi_def_cfa_offset 4
 1402              		.cfi_offset 7, -4
 1403 0002 00AF     		add	r7, sp, #0
 1404              	.LCFI33:
 1405              		.cfi_def_cfa_register 7
 1406              	.LBB8:
 1407              	.LBB9:
 1408              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 32


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 33


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 34


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1409              		.loc 2 142 3
 1410              		.syntax unified
 1411              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1412 0004 72B6     		cpsid i
 1413              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1414              		.loc 2 143 1
 1415              		.thumb
 1416              		.syntax unified
 1417 0006 00BF     		nop
 1418              	.L48:
 1419              	.LBE9:
 1420              	.LBE8:
 415:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 416:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 417:Core/Src/main.c ****   __disable_irq();
 418:Core/Src/main.c ****   while (1)
 1421              		.loc 1 418 9 discriminator 1
 1422 0008 FEE7     		b	.L48
 1423              		.cfi_endproc
 1424              	.LFE73:
 1426              		.text
 1427              	.Letext0:
 1428              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 1429              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 1430              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1431              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1432              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1433              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1434              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1435              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1436              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 35


 1437              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:20     .bss.hi2c1:00000000 hi2c1
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:17     .bss.hi2c1:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:27     .bss.htim2:00000000 htim2
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:24     .bss.htim2:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:34     .bss.htim4:00000000 htim4
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:31     .bss.htim4:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:41     .bss.TempCelsiusTemporaria:00000000 TempCelsiusTemporaria
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:38     .bss.TempCelsiusTemporaria:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:48     .bss.TempCelsius:00000000 TempCelsius
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:45     .bss.TempCelsius:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:55     .bss.TempCelsiusUser:00000000 TempCelsiusUser
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:52     .bss.TempCelsiusUser:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:62     .bss.TempCelsiusMed:00000000 TempCelsiusMed
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:59     .bss.TempCelsiusMed:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:69     .bss.TempSoma:00000000 TempSoma
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:66     .bss.TempSoma:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:76     .bss.setpoint:00000000 setpoint
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:73     .bss.setpoint:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:83     .bss.setpointUser:00000000 setpointUser
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:80     .bss.setpointUser:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:90     .bss.kp:00000000 kp
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:87     .bss.kp:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:97     .bss.ki:00000000 ki
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:94     .bss.ki:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:104    .bss.kd:00000000 kd
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:101    .bss.kd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:111    .bss.erroAtual:00000000 erroAtual
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:108    .bss.erroAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:118    .bss.erroInt:00000000 erroInt
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:115    .bss.erroInt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:125    .bss.erroAnt:00000000 erroAnt
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:122    .bss.erroAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:132    .bss.Ts:00000000 Ts
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:129    .bss.Ts:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:139    .bss.yiAnt:00000000 yiAnt
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:136    .bss.yiAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:146    .bss.ydAnt:00000000 ydAnt
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:143    .bss.ydAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:153    .bss.Nd:00000000 Nd
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:150    .bss.Nd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:160    .bss.tim4ms:00000000 tim4ms
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:157    .bss.tim4ms:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:167    .bss.y:00000000 y
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:164    .bss.y:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:174    .bss.yPWM:00000000 yPWM
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:171    .bss.yPWM:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:181    .data.yPWMint:00000000 yPWMint
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:178    .data.yPWMint:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:188    .bss.yp:00000000 yp
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:185    .bss.yp:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:195    .bss.yi:00000000 yi
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:192    .bss.yi:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:202    .bss.yd:00000000 yd
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:199    .bss.yd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:216    .text.calcPid:00000000 $t
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s 			page 37


C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:224    .text.calcPid:00000000 calcPid
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:486    .text.calcPid:000001d4 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:510    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:517    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:555    .text.HAL_TIM_PeriodElapsedCallback:0000001c $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:561    .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:568    .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:762    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1268   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:872    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:950    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1119   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:730    .text.main:0000010c $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:755    .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1392   .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:866    .text.MX_I2C1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:938    .text.MX_I2C1_Init:00000054 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:944    .text.MX_TIM2_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1107   .text.MX_TIM2_Init:000000ec $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1113   .text.MX_TIM4_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1253   .text.MX_TIM4_Init:000000c8 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1262   .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1379   .text.MX_GPIO_Init:000000a8 $d
C:\Users\danie\AppData\Local\Temp\ccRSOkyS.s:1385   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
__aeabi_f2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fdiv
__aeabi_f2uiz
HAL_Init
HAL_TIM_PWM_Start
memcpy
TMP117_Initialization_DEFAULT
HAL_GPIO_WritePin
TMP117_get_Temperature
HAL_TIM_Base_Start_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
__aeabi_ui2d
HAL_GPIO_Init
