ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	hadc1
  16              		.section	.bss.hadc1,"aw",%nobits
  17              		.align	2
  20              	hadc1:
  21 0000 00000000 		.space	48
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.global	hi2c1
  23              		.section	.bss.hi2c1,"aw",%nobits
  24              		.align	2
  27              	hi2c1:
  28 0000 00000000 		.space	84
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.global	htim2
  30              		.section	.bss.htim2,"aw",%nobits
  31              		.align	2
  34              	htim2:
  35 0000 00000000 		.space	72
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	htim4
  37              		.section	.bss.htim4,"aw",%nobits
  38              		.align	2
  41              	htim4:
  42 0000 00000000 		.space	72
  42      00000000 
  42      00000000 
  42      00000000 
  42      00000000 
  43              		.global	MenuAtual
  44              		.section	.bss.MenuAtual,"aw",%nobits
  45              		.align	2
  48              	MenuAtual:
  49 0000 00000000 		.space	4
  50              		.global	counterOpcao
  51              		.section	.bss.counterOpcao,"aw",%nobits
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 2


  52              		.align	2
  55              	counterOpcao:
  56 0000 00000000 		.space	4
  57              		.global	counterPrev
  58              		.section	.bss.counterPrev,"aw",%nobits
  59              		.align	2
  62              	counterPrev:
  63 0000 00000000 		.space	4
  64              		.global	txtCounter
  65              		.section	.bss.txtCounter,"aw",%nobits
  66              		.align	2
  69              	txtCounter:
  70 0000 00000000 		.space	10
  70      00000000 
  70      0000
  71              		.global	ligarMotor
  72              		.section	.bss.ligarMotor,"aw",%nobits
  75              	ligarMotor:
  76 0000 00       		.space	1
  77              		.global	StepAlta
  78              		.section	.data.StepAlta,"aw"
  81              	StepAlta:
  82 0000 01       		.byte	1
  83              		.global	TempVolts
  84              		.section	.bss.TempVolts,"aw",%nobits
  85              		.align	2
  88              	TempVolts:
  89 0000 00000000 		.space	4
  90              		.global	TempCelsius
  91              		.section	.bss.TempCelsius,"aw",%nobits
  92              		.align	2
  95              	TempCelsius:
  96 0000 00000000 		.space	4
  97              		.global	setpoint
  98              		.section	.bss.setpoint,"aw",%nobits
  99              		.align	2
 102              	setpoint:
 103 0000 00000000 		.space	4
 104              		.global	kp
 105              		.section	.bss.kp,"aw",%nobits
 106              		.align	2
 109              	kp:
 110 0000 00000000 		.space	4
 111              		.global	ki
 112              		.section	.bss.ki,"aw",%nobits
 113              		.align	2
 116              	ki:
 117 0000 00000000 		.space	4
 118              		.global	kd
 119              		.section	.bss.kd,"aw",%nobits
 120              		.align	2
 123              	kd:
 124 0000 00000000 		.space	4
 125              		.global	y
 126              		.section	.bss.y,"aw",%nobits
 127              		.align	2
 130              	y:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 3


 131 0000 00000000 		.space	4
 132              		.global	erroInt
 133              		.section	.bss.erroInt,"aw",%nobits
 134              		.align	2
 137              	erroInt:
 138 0000 00000000 		.space	4
 139              		.global	erroAnt
 140              		.section	.bss.erroAnt,"aw",%nobits
 141              		.align	2
 144              	erroAnt:
 145 0000 00000000 		.space	4
 146              		.global	Ts
 147              		.section	.bss.Ts,"aw",%nobits
 148              		.align	2
 151              	Ts:
 152 0000 00000000 		.space	4
 153              		.global	yiAnt
 154              		.section	.bss.yiAnt,"aw",%nobits
 155              		.align	2
 158              	yiAnt:
 159 0000 00000000 		.space	4
 160              		.global	ydAnt
 161              		.section	.bss.ydAnt,"aw",%nobits
 162              		.align	2
 165              	ydAnt:
 166 0000 00000000 		.space	4
 167              		.global	Nd
 168              		.section	.bss.Nd,"aw",%nobits
 169              		.align	2
 172              	Nd:
 173 0000 00000000 		.space	4
 174              		.global	yPWM
 175              		.section	.bss.yPWM,"aw",%nobits
 176              		.align	2
 179              	yPWM:
 180 0000 00000000 		.space	4
 181              		.global	tim4ms
 182              		.section	.bss.tim4ms,"aw",%nobits
 183              		.align	2
 186              	tim4ms:
 187 0000 00000000 		.space	4
 188              		.global	__aeabi_fsub
 189              		.global	__aeabi_fmul
 190              		.global	__aeabi_fadd
 191              		.global	__aeabi_f2d
 192              		.global	__aeabi_ddiv
 193              		.global	__aeabi_dadd
 194              		.global	__aeabi_d2f
 195              		.global	__aeabi_fcmpgt
 196              		.global	__aeabi_fcmplt
 197              		.global	__aeabi_fcmpeq
 198              		.global	__aeabi_ui2f
 199              		.global	__aeabi_fdiv
 200              		.global	__aeabi_f2uiz
 201              		.section	.text.calcPid,"ax",%progbits
 202              		.align	1
 203              		.global	calcPid
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 4


 204              		.arch armv7-m
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	calcPid:
 211              	.LFB65:
 212              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "ssd1306.h"
  26:Core/Src/main.c **** #include "fonts.h"
  27:Core/Src/main.c **** #include "test.h"
  28:Core/Src/main.c **** #include "stdbool.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 5


  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** uint32_t MenuAtual = 0;
  55:Core/Src/main.c **** uint32_t counterOpcao = 0;
  56:Core/Src/main.c **** uint32_t counterPrev = 0;
  57:Core/Src/main.c **** char txtCounter[10];
  58:Core/Src/main.c **** _Bool ligarMotor = false;
  59:Core/Src/main.c **** _Bool StepAlta = true;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** // LM35
  62:Core/Src/main.c **** uint32_t TempVolts;
  63:Core/Src/main.c **** float TempCelsius;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** //PID
  66:Core/Src/main.c **** float setpoint, kp, ki, kd, y, erroInt, erroAnt, Ts, yiAnt, ydAnt, Nd, yPWM,tim4ms;
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_I2C1_Init(void);
  73:Core/Src/main.c **** static void MX_TIM4_Init(void);
  74:Core/Src/main.c **** static void MX_ADC1_Init(void);
  75:Core/Src/main.c **** static void MX_TIM2_Init(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** void calcPid(void){
 213              		.loc 1 77 19
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 B0B5     		push	{r4, r5, r7, lr}
 218              	.LCFI0:
 219              		.cfi_def_cfa_offset 16
 220              		.cfi_offset 4, -16
 221              		.cfi_offset 5, -12
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 84B0     		sub	sp, sp, #16
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 32
 227 0004 00AF     		add	r7, sp, #0
 228              	.LCFI2:
 229              		.cfi_def_cfa_register 7
  78:Core/Src/main.c ****     Ts = tim4ms;
 230              		.loc 1 78 8
 231 0006 764B     		ldr	r3, .L15
 232 0008 1B68     		ldr	r3, [r3]	@ float
 233 000a 764A     		ldr	r2, .L15+4
 234 000c 1360     		str	r3, [r2]	@ float
  79:Core/Src/main.c ****     float erroAtual, yp, yi, yd;
  80:Core/Src/main.c ****     erroAtual = setpoint - TempCelsius;
 235              		.loc 1 80 26
 236 000e 764B     		ldr	r3, .L15+8
 237 0010 1B68     		ldr	r3, [r3]	@ float
 238 0012 764A     		ldr	r2, .L15+12
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 6


 239 0014 1268     		ldr	r2, [r2]	@ float
 240              		.loc 1 80 15
 241 0016 1146     		mov	r1, r2
 242 0018 1846     		mov	r0, r3
 243 001a FFF7FEFF 		bl	__aeabi_fsub
 244 001e 0346     		mov	r3, r0
 245 0020 FB60     		str	r3, [r7, #12]	@ float
  81:Core/Src/main.c ****     yp = kp*erroAtual;
 246              		.loc 1 81 12
 247 0022 734B     		ldr	r3, .L15+16
 248 0024 1B68     		ldr	r3, [r3]	@ float
 249              		.loc 1 81 8
 250 0026 1946     		mov	r1, r3
 251 0028 F868     		ldr	r0, [r7, #12]	@ float
 252 002a FFF7FEFF 		bl	__aeabi_fmul
 253 002e 0346     		mov	r3, r0
 254 0030 BB60     		str	r3, [r7, #8]	@ float
  82:Core/Src/main.c ****     yi = ki*Ts*(erroAtual+erroAnt)/2.0 + yiAnt;
 255              		.loc 1 82 12
 256 0032 704B     		ldr	r3, .L15+20
 257 0034 1B68     		ldr	r3, [r3]	@ float
 258 0036 6B4A     		ldr	r2, .L15+4
 259 0038 1268     		ldr	r2, [r2]	@ float
 260 003a 1146     		mov	r1, r2
 261 003c 1846     		mov	r0, r3
 262 003e FFF7FEFF 		bl	__aeabi_fmul
 263 0042 0346     		mov	r3, r0
 264 0044 1C46     		mov	r4, r3
 265              		.loc 1 82 26
 266 0046 6C4B     		ldr	r3, .L15+24
 267 0048 1B68     		ldr	r3, [r3]	@ float
 268 004a F968     		ldr	r1, [r7, #12]	@ float
 269 004c 1846     		mov	r0, r3
 270 004e FFF7FEFF 		bl	__aeabi_fadd
 271 0052 0346     		mov	r3, r0
 272              		.loc 1 82 15
 273 0054 1946     		mov	r1, r3
 274 0056 2046     		mov	r0, r4
 275 0058 FFF7FEFF 		bl	__aeabi_fmul
 276 005c 0346     		mov	r3, r0
 277 005e 1846     		mov	r0, r3
 278 0060 FFF7FEFF 		bl	__aeabi_f2d
 279              		.loc 1 82 35
 280 0064 4FF00002 		mov	r2, #0
 281 0068 4FF08043 		mov	r3, #1073741824
 282 006c FFF7FEFF 		bl	__aeabi_ddiv
 283 0070 0246     		mov	r2, r0
 284 0072 0B46     		mov	r3, r1
 285 0074 1446     		mov	r4, r2
 286 0076 1D46     		mov	r5, r3
 287              		.loc 1 82 40
 288 0078 604B     		ldr	r3, .L15+28
 289 007a 1B68     		ldr	r3, [r3]	@ float
 290 007c 1846     		mov	r0, r3
 291 007e FFF7FEFF 		bl	__aeabi_f2d
 292 0082 0246     		mov	r2, r0
 293 0084 0B46     		mov	r3, r1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 7


 294 0086 2046     		mov	r0, r4
 295 0088 2946     		mov	r1, r5
 296 008a FFF7FEFF 		bl	__aeabi_dadd
 297 008e 0246     		mov	r2, r0
 298 0090 0B46     		mov	r3, r1
 299              		.loc 1 82 8
 300 0092 1046     		mov	r0, r2
 301 0094 1946     		mov	r1, r3
 302 0096 FFF7FEFF 		bl	__aeabi_d2f
 303 009a 0346     		mov	r3, r0
 304 009c 7B60     		str	r3, [r7, #4]	@ float
  83:Core/Src/main.c ****     yd = kd*Nd*(erroAtual-erroAnt) + (1+Nd*Ts)*ydAnt;
 305              		.loc 1 83 12
 306 009e 584B     		ldr	r3, .L15+32
 307 00a0 1B68     		ldr	r3, [r3]	@ float
 308 00a2 584A     		ldr	r2, .L15+36
 309 00a4 1268     		ldr	r2, [r2]	@ float
 310 00a6 1146     		mov	r1, r2
 311 00a8 1846     		mov	r0, r3
 312 00aa FFF7FEFF 		bl	__aeabi_fmul
 313 00ae 0346     		mov	r3, r0
 314 00b0 1C46     		mov	r4, r3
 315              		.loc 1 83 26
 316 00b2 514B     		ldr	r3, .L15+24
 317 00b4 1B68     		ldr	r3, [r3]	@ float
 318 00b6 1946     		mov	r1, r3
 319 00b8 F868     		ldr	r0, [r7, #12]	@ float
 320 00ba FFF7FEFF 		bl	__aeabi_fsub
 321 00be 0346     		mov	r3, r0
 322              		.loc 1 83 15
 323 00c0 1946     		mov	r1, r3
 324 00c2 2046     		mov	r0, r4
 325 00c4 FFF7FEFF 		bl	__aeabi_fmul
 326 00c8 0346     		mov	r3, r0
 327 00ca 1C46     		mov	r4, r3
 328              		.loc 1 83 43
 329 00cc 4D4B     		ldr	r3, .L15+36
 330 00ce 1B68     		ldr	r3, [r3]	@ float
 331 00d0 444A     		ldr	r2, .L15+4
 332 00d2 1268     		ldr	r2, [r2]	@ float
 333 00d4 1146     		mov	r1, r2
 334 00d6 1846     		mov	r0, r3
 335 00d8 FFF7FEFF 		bl	__aeabi_fmul
 336 00dc 0346     		mov	r3, r0
 337              		.loc 1 83 40
 338 00de 4FF07E51 		mov	r1, #1065353216
 339 00e2 1846     		mov	r0, r3
 340 00e4 FFF7FEFF 		bl	__aeabi_fadd
 341 00e8 0346     		mov	r3, r0
 342 00ea 1A46     		mov	r2, r3
 343              		.loc 1 83 47
 344 00ec 464B     		ldr	r3, .L15+40
 345 00ee 1B68     		ldr	r3, [r3]	@ float
 346 00f0 1946     		mov	r1, r3
 347 00f2 1046     		mov	r0, r2
 348 00f4 FFF7FEFF 		bl	__aeabi_fmul
 349 00f8 0346     		mov	r3, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 8


 350              		.loc 1 83 8
 351 00fa 1946     		mov	r1, r3
 352 00fc 2046     		mov	r0, r4
 353 00fe FFF7FEFF 		bl	__aeabi_fadd
 354 0102 0346     		mov	r3, r0
 355 0104 3B60     		str	r3, [r7]	@ float
  84:Core/Src/main.c ****     y = yp+yi+yd;
 356              		.loc 1 84 11
 357 0106 7968     		ldr	r1, [r7, #4]	@ float
 358 0108 B868     		ldr	r0, [r7, #8]	@ float
 359 010a FFF7FEFF 		bl	__aeabi_fadd
 360 010e 0346     		mov	r3, r0
 361              		.loc 1 84 14
 362 0110 3968     		ldr	r1, [r7]	@ float
 363 0112 1846     		mov	r0, r3
 364 0114 FFF7FEFF 		bl	__aeabi_fadd
 365 0118 0346     		mov	r3, r0
 366 011a 1A46     		mov	r2, r3
 367              		.loc 1 84 7
 368 011c 3B4B     		ldr	r3, .L15+44
 369 011e 1A60     		str	r2, [r3]	@ float
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     yiAnt = yi;
 370              		.loc 1 86 11
 371 0120 364A     		ldr	r2, .L15+28
 372 0122 7B68     		ldr	r3, [r7, #4]	@ float
 373 0124 1360     		str	r3, [r2]	@ float
  87:Core/Src/main.c ****     ydAnt = yd;
 374              		.loc 1 87 11
 375 0126 384A     		ldr	r2, .L15+40
 376 0128 3B68     		ldr	r3, [r7]	@ float
 377 012a 1360     		str	r3, [r2]	@ float
  88:Core/Src/main.c ****     erroAnt = erroAtual;
 378              		.loc 1 88 13
 379 012c 324A     		ldr	r2, .L15+24
 380 012e FB68     		ldr	r3, [r7, #12]	@ float
 381 0130 1360     		str	r3, [r2]	@ float
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     if (y>100)
 382              		.loc 1 90 10
 383 0132 364B     		ldr	r3, .L15+44
 384 0134 1B68     		ldr	r3, [r3]	@ float
 385              		.loc 1 90 8
 386 0136 3649     		ldr	r1, .L15+48
 387 0138 1846     		mov	r0, r3
 388 013a FFF7FEFF 		bl	__aeabi_fcmpgt
 389 013e 0346     		mov	r3, r0
 390 0140 002B     		cmp	r3, #0
 391 0142 03D0     		beq	.L12
  91:Core/Src/main.c ****     {
  92:Core/Src/main.c ****       y = 100;
 392              		.loc 1 92 9
 393 0144 314B     		ldr	r3, .L15+44
 394 0146 324A     		ldr	r2, .L15+48
 395 0148 1A60     		str	r2, [r3]	@ float
 396 014a 0DE0     		b	.L4
 397              	.L12:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 9


  93:Core/Src/main.c ****     }
  94:Core/Src/main.c ****     else if (y<0)
 398              		.loc 1 94 15
 399 014c 2F4B     		ldr	r3, .L15+44
 400 014e 1B68     		ldr	r3, [r3]	@ float
 401              		.loc 1 94 13
 402 0150 4FF00001 		mov	r1, #0
 403 0154 1846     		mov	r0, r3
 404 0156 FFF7FEFF 		bl	__aeabi_fcmplt
 405 015a 0346     		mov	r3, r0
 406 015c 002B     		cmp	r3, #0
 407 015e 03D0     		beq	.L4
  95:Core/Src/main.c ****     {
  96:Core/Src/main.c ****       y = 0;
 408              		.loc 1 96 9
 409 0160 2A4B     		ldr	r3, .L15+44
 410 0162 4FF00002 		mov	r2, #0
 411 0166 1A60     		str	r2, [r3]	@ float
 412              	.L4:
  97:Core/Src/main.c ****     }
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     if (y==0)
 413              		.loc 1 101 10
 414 0168 284B     		ldr	r3, .L15+44
 415 016a 1B68     		ldr	r3, [r3]	@ float
 416              		.loc 1 101 8
 417 016c 4FF00001 		mov	r1, #0
 418 0170 1846     		mov	r0, r3
 419 0172 FFF7FEFF 		bl	__aeabi_fcmpeq
 420 0176 0346     		mov	r3, r0
 421 0178 002B     		cmp	r3, #0
 422 017a 04D0     		beq	.L13
 102:Core/Src/main.c ****     {
 103:Core/Src/main.c ****       HAL_TIM_PWM_Stop_IT(&htim2, TIM_CHANNEL_2);
 423              		.loc 1 103 7
 424 017c 0421     		movs	r1, #4
 425 017e 2548     		ldr	r0, .L15+52
 426 0180 FFF7FEFF 		bl	HAL_TIM_PWM_Stop_IT
 104:Core/Src/main.c ****     }
 105:Core/Src/main.c ****     else
 106:Core/Src/main.c ****     {
 107:Core/Src/main.c ****       HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 108:Core/Src/main.c ****       yPWM = htim2.Instance->ARR*(100-y)/100;
 109:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 110:Core/Src/main.c ****     }
 111:Core/Src/main.c **** }
 427              		.loc 1 111 1
 428 0184 27E0     		b	.L14
 429              	.L13:
 107:Core/Src/main.c ****       yPWM = htim2.Instance->ARR*(100-y)/100;
 430              		.loc 1 107 7
 431 0186 0421     		movs	r1, #4
 432 0188 2248     		ldr	r0, .L15+52
 433 018a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 10


 434              		.loc 1 108 19
 435 018e 214B     		ldr	r3, .L15+52
 436 0190 1B68     		ldr	r3, [r3]
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 437              		.loc 1 108 28
 438 0192 DB6A     		ldr	r3, [r3, #44]
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 439              		.loc 1 108 33
 440 0194 1846     		mov	r0, r3
 441 0196 FFF7FEFF 		bl	__aeabi_ui2f
 442 019a 0446     		mov	r4, r0
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 443              		.loc 1 108 38
 444 019c 1B4B     		ldr	r3, .L15+44
 445 019e 1B68     		ldr	r3, [r3]	@ float
 446 01a0 1946     		mov	r1, r3
 447 01a2 1B48     		ldr	r0, .L15+48
 448 01a4 FFF7FEFF 		bl	__aeabi_fsub
 449 01a8 0346     		mov	r3, r0
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 450              		.loc 1 108 33
 451 01aa 1946     		mov	r1, r3
 452 01ac 2046     		mov	r0, r4
 453 01ae FFF7FEFF 		bl	__aeabi_fmul
 454 01b2 0346     		mov	r3, r0
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 455              		.loc 1 108 41
 456 01b4 1649     		ldr	r1, .L15+48
 457 01b6 1846     		mov	r0, r3
 458 01b8 FFF7FEFF 		bl	__aeabi_fdiv
 459 01bc 0346     		mov	r3, r0
 460 01be 1A46     		mov	r2, r3
 108:Core/Src/main.c ****       htim2.Instance->CCR1 = yPWM;
 461              		.loc 1 108 12
 462 01c0 154B     		ldr	r3, .L15+56
 463 01c2 1A60     		str	r2, [r3]	@ float
 109:Core/Src/main.c ****     }
 464              		.loc 1 109 28
 465 01c4 144B     		ldr	r3, .L15+56
 466 01c6 1B68     		ldr	r3, [r3]	@ float
 109:Core/Src/main.c ****     }
 467              		.loc 1 109 12
 468 01c8 124A     		ldr	r2, .L15+52
 469 01ca 1468     		ldr	r4, [r2]
 109:Core/Src/main.c ****     }
 470              		.loc 1 109 28
 471 01cc 1846     		mov	r0, r3
 472 01ce FFF7FEFF 		bl	__aeabi_f2uiz
 473 01d2 0346     		mov	r3, r0
 474 01d4 6363     		str	r3, [r4, #52]
 475              	.L14:
 476              		.loc 1 111 1
 477 01d6 00BF     		nop
 478 01d8 1037     		adds	r7, r7, #16
 479              	.LCFI3:
 480              		.cfi_def_cfa_offset 16
 481 01da BD46     		mov	sp, r7
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 11


 482              	.LCFI4:
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 01dc B0BD     		pop	{r4, r5, r7, pc}
 486              	.L16:
 487 01de 00BF     		.align	2
 488              	.L15:
 489 01e0 00000000 		.word	tim4ms
 490 01e4 00000000 		.word	Ts
 491 01e8 00000000 		.word	setpoint
 492 01ec 00000000 		.word	TempCelsius
 493 01f0 00000000 		.word	kp
 494 01f4 00000000 		.word	ki
 495 01f8 00000000 		.word	erroAnt
 496 01fc 00000000 		.word	yiAnt
 497 0200 00000000 		.word	kd
 498 0204 00000000 		.word	Nd
 499 0208 00000000 		.word	ydAnt
 500 020c 00000000 		.word	y
 501 0210 0000C842 		.word	1120403456
 502 0214 00000000 		.word	htim2
 503 0218 00000000 		.word	yPWM
 504              		.cfi_endproc
 505              	.LFE65:
 507              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_TIM_PeriodElapsedCallback
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu softvfp
 515              	HAL_TIM_PeriodElapsedCallback:
 516              	.LFB66:
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim) // Interrupt do passo do motor
 114:Core/Src/main.c **** {
 517              		.loc 1 114 1
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              	.LCFI5:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 82B0     		sub	sp, sp, #8
 527              	.LCFI6:
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI7:
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 115:Core/Src/main.c ****   if(StepAlta)
 533              		.loc 1 115 6
 534 0008 104B     		ldr	r3, .L20
 535 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536              		.loc 1 115 5
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 12


 537 000c 002B     		cmp	r3, #0
 538 000e 0ED0     		beq	.L18
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1); // Pino Step
 539              		.loc 1 117 5
 540 0010 0122     		movs	r2, #1
 541 0012 0821     		movs	r1, #8
 542 0014 0E48     		ldr	r0, .L20+4
 543 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 118:Core/Src/main.c ****     StepAlta = false;
 544              		.loc 1 118 14
 545 001a 0C4B     		ldr	r3, .L20
 546 001c 0022     		movs	r2, #0
 547 001e 1A70     		strb	r2, [r3]
 119:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 548              		.loc 1 119 5
 549 0020 0122     		movs	r2, #1
 550 0022 4FF48071 		mov	r1, #256
 551 0026 0B48     		ldr	r0, .L20+8
 552 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 553 002c 07E0     		b	.L19
 554              	.L18:
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   else
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0); // Pino Step
 555              		.loc 1 123 5
 556 002e 0022     		movs	r2, #0
 557 0030 0821     		movs	r1, #8
 558 0032 0748     		ldr	r0, .L20+4
 559 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Core/Src/main.c ****     StepAlta = true;
 560              		.loc 1 124 14
 561 0038 044B     		ldr	r3, .L20
 562 003a 0122     		movs	r2, #1
 563 003c 1A70     		strb	r2, [r3]
 564              	.L19:
 125:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /*
 129:Core/Src/main.c ****   static uint32_t millis = 0;
 130:Core/Src/main.c ****   millis++;
 131:Core/Src/main.c ****   if (millis % 1000 == 0) {
 132:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, MotorSTEP_Pin, 0);
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   calcPid();
 565              		.loc 1 135 3
 566 003e FFF7FEFF 		bl	calcPid
 136:Core/Src/main.c ****   
 137:Core/Src/main.c **** }
 567              		.loc 1 137 1
 568 0042 00BF     		nop
 569 0044 0837     		adds	r7, r7, #8
 570              	.LCFI8:
 571              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 13


 572 0046 BD46     		mov	sp, r7
 573              	.LCFI9:
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 0048 80BD     		pop	{r7, pc}
 577              	.L21:
 578 004a 00BF     		.align	2
 579              	.L20:
 580 004c 00000000 		.word	StepAlta
 581 0050 000C0140 		.word	1073810432
 582 0054 00080140 		.word	1073809408
 583              		.cfi_endproc
 584              	.LFE66:
 586              		.section	.rodata
 587              		.align	2
 588              	.LC0:
 589 0000 31204F75 		.ascii	"1 Outro Menu\000"
 589      74726F20 
 589      4D656E75 
 589      00
 590              		.global	__aeabi_f2iz
 591 000d 000000   		.align	2
 592              	.LC1:
 593 0010 2C00     		.ascii	",\000"
 594              		.global	__aeabi_i2f
 595 0012 0000     		.align	2
 596              	.LC2:
 597 0014 3020566F 		.ascii	"0 Voltar\000"
 597      6C746172 
 597      00
 598 001d 000000   		.align	2
 599              	.LC3:
 600 0020 31204C69 		.ascii	"1 Ligar Motor\000"
 600      67617220 
 600      4D6F746F 
 600      7200
 601 002e 0000     		.align	2
 602              	.LC4:
 603 0030 32204465 		.ascii	"2 Desligar Motor\000"
 603      736C6967 
 603      6172204D 
 603      6F746F72 
 603      00
 604              		.section	.text.MenuHandler,"ax",%progbits
 605              		.align	1
 606              		.global	MenuHandler
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu softvfp
 612              	MenuHandler:
 613              	.LFB67:
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** void MenuHandler(void)
 141:Core/Src/main.c **** {
 614              		.loc 1 141 1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 14


 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 98B5     		push	{r3, r4, r7, lr}
 619              	.LCFI10:
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 00AF     		add	r7, sp, #0
 626              	.LCFI11:
 627              		.cfi_def_cfa_register 7
 142:Core/Src/main.c ****   if(MenuAtual==0)
 628              		.loc 1 142 15
 629 0004 5D4B     		ldr	r3, .L26
 630 0006 1B68     		ldr	r3, [r3]
 631              		.loc 1 142 5
 632 0008 002B     		cmp	r3, #0
 633 000a 78D1     		bne	.L23
 143:Core/Src/main.c ****     {
 144:Core/Src/main.c ****       
 145:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter
 634              		.loc 1 145 7
 635 000c 5C4B     		ldr	r3, .L26+4
 636 000e 1B68     		ldr	r3, [r3]
 637 0010 0A22     		movs	r2, #10
 638 0012 5C49     		ldr	r1, .L26+8
 639 0014 1846     		mov	r0, r3
 640 0016 FFF7FEFF 		bl	itoa
 146:Core/Src/main.c ****       //if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 147:Core/Src/main.c ****       //{
 148:Core/Src/main.c ****         //SSD1306_Clear();
 149:Core/Src/main.c ****         counterPrev = counterOpcao;
 641              		.loc 1 149 21
 642 001a 594B     		ldr	r3, .L26+4
 643 001c 1B68     		ldr	r3, [r3]
 644 001e 5A4A     		ldr	r2, .L26+12
 645 0020 1360     		str	r3, [r2]
 150:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 646              		.loc 1 150 9
 647 0022 0221     		movs	r1, #2
 648 0024 0220     		movs	r0, #2
 649 0026 FFF7FEFF 		bl	SSD1306_GotoXY
 151:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 650              		.loc 1 151 9
 651 002a 0122     		movs	r2, #1
 652 002c 5749     		ldr	r1, .L26+16
 653 002e 5548     		ldr	r0, .L26+8
 654 0030 FFF7FEFF 		bl	SSD1306_Puts
 152:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 655              		.loc 1 152 9
 656 0034 0C21     		movs	r1, #12
 657 0036 0220     		movs	r0, #2
 658 0038 FFF7FEFF 		bl	SSD1306_GotoXY
 153:Core/Src/main.c ****         SSD1306_Puts("1 Outro Menu", &Font_7x10, 1);
 659              		.loc 1 153 9
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 15


 660 003c 0122     		movs	r2, #1
 661 003e 5349     		ldr	r1, .L26+16
 662 0040 5348     		ldr	r0, .L26+20
 663 0042 FFF7FEFF 		bl	SSD1306_Puts
 154:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 664              		.loc 1 154 9
 665 0046 1621     		movs	r1, #22
 666 0048 0220     		movs	r0, #2
 667 004a FFF7FEFF 		bl	SSD1306_GotoXY
 155:Core/Src/main.c ****         itoa(TempCelsius, txtCounter, 10);
 668              		.loc 1 155 9
 669 004e 514B     		ldr	r3, .L26+24
 670 0050 1B68     		ldr	r3, [r3]	@ float
 671 0052 1846     		mov	r0, r3
 672 0054 FFF7FEFF 		bl	__aeabi_f2iz
 673 0058 0346     		mov	r3, r0
 674 005a 0A22     		movs	r2, #10
 675 005c 4949     		ldr	r1, .L26+8
 676 005e 1846     		mov	r0, r3
 677 0060 FFF7FEFF 		bl	itoa
 156:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 678              		.loc 1 156 9
 679 0064 0122     		movs	r2, #1
 680 0066 4949     		ldr	r1, .L26+16
 681 0068 4648     		ldr	r0, .L26+8
 682 006a FFF7FEFF 		bl	SSD1306_Puts
 157:Core/Src/main.c ****         SSD1306_GotoXY(16, 22);
 683              		.loc 1 157 9
 684 006e 1621     		movs	r1, #22
 685 0070 1020     		movs	r0, #16
 686 0072 FFF7FEFF 		bl	SSD1306_GotoXY
 158:Core/Src/main.c ****         SSD1306_Puts(",", &Font_7x10, 1);
 687              		.loc 1 158 9
 688 0076 0122     		movs	r2, #1
 689 0078 4449     		ldr	r1, .L26+16
 690 007a 4748     		ldr	r0, .L26+28
 691 007c FFF7FEFF 		bl	SSD1306_Puts
 159:Core/Src/main.c ****         SSD1306_GotoXY(23, 22);
 692              		.loc 1 159 9
 693 0080 1621     		movs	r1, #22
 694 0082 1720     		movs	r0, #23
 695 0084 FFF7FEFF 		bl	SSD1306_GotoXY
 160:Core/Src/main.c ****         itoa(100*(TempCelsius-(int)TempCelsius), txtCounter, 10);  
 696              		.loc 1 160 30
 697 0088 424B     		ldr	r3, .L26+24
 698 008a 1C68     		ldr	r4, [r3]	@ float
 699              		.loc 1 160 31
 700 008c 414B     		ldr	r3, .L26+24
 701 008e 1B68     		ldr	r3, [r3]	@ float
 702 0090 1846     		mov	r0, r3
 703 0092 FFF7FEFF 		bl	__aeabi_f2iz
 704 0096 0346     		mov	r3, r0
 705              		.loc 1 160 30
 706 0098 1846     		mov	r0, r3
 707 009a FFF7FEFF 		bl	__aeabi_i2f
 708 009e 0346     		mov	r3, r0
 709 00a0 1946     		mov	r1, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 16


 710 00a2 2046     		mov	r0, r4
 711 00a4 FFF7FEFF 		bl	__aeabi_fsub
 712 00a8 0346     		mov	r3, r0
 713              		.loc 1 160 17
 714 00aa 3C49     		ldr	r1, .L26+32
 715 00ac 1846     		mov	r0, r3
 716 00ae FFF7FEFF 		bl	__aeabi_fmul
 717 00b2 0346     		mov	r3, r0
 718              		.loc 1 160 9
 719 00b4 1846     		mov	r0, r3
 720 00b6 FFF7FEFF 		bl	__aeabi_f2iz
 721 00ba 0346     		mov	r3, r0
 722 00bc 0A22     		movs	r2, #10
 723 00be 3149     		ldr	r1, .L26+8
 724 00c0 1846     		mov	r0, r3
 725 00c2 FFF7FEFF 		bl	itoa
 161:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 726              		.loc 1 161 9
 727 00c6 0122     		movs	r2, #1
 728 00c8 3049     		ldr	r1, .L26+16
 729 00ca 2E48     		ldr	r0, .L26+8
 730 00cc FFF7FEFF 		bl	SSD1306_Puts
 162:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 731              		.loc 1 162 9
 732 00d0 2021     		movs	r1, #32
 733 00d2 0220     		movs	r0, #2
 734 00d4 FFF7FEFF 		bl	SSD1306_GotoXY
 163:Core/Src/main.c ****         itoa(y, txtCounter, 10);
 735              		.loc 1 163 9
 736 00d8 314B     		ldr	r3, .L26+36
 737 00da 1B68     		ldr	r3, [r3]	@ float
 738 00dc 1846     		mov	r0, r3
 739 00de FFF7FEFF 		bl	__aeabi_f2iz
 740 00e2 0346     		mov	r3, r0
 741 00e4 0A22     		movs	r2, #10
 742 00e6 2749     		ldr	r1, .L26+8
 743 00e8 1846     		mov	r0, r3
 744 00ea FFF7FEFF 		bl	itoa
 164:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 745              		.loc 1 164 9
 746 00ee 0122     		movs	r2, #1
 747 00f0 2649     		ldr	r1, .L26+16
 748 00f2 2448     		ldr	r0, .L26+8
 749 00f4 FFF7FEFF 		bl	SSD1306_Puts
 165:Core/Src/main.c ****         
 166:Core/Src/main.c ****         SSD1306_UpdateScreen();
 750              		.loc 1 166 9
 751 00f8 FFF7FEFF 		bl	SSD1306_UpdateScreen
 167:Core/Src/main.c ****       //}
 168:Core/Src/main.c ****     }
 169:Core/Src/main.c ****     else if (MenuAtual==1)
 170:Core/Src/main.c ****     {
 171:Core/Src/main.c ****       
 172:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter
 173:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 174:Core/Src/main.c ****       {
 175:Core/Src/main.c ****         SSD1306_Clear();
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 17


 176:Core/Src/main.c ****         counterPrev = counterOpcao;
 177:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 178:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 179:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 180:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 181:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 182:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 183:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 184:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 185:Core/Src/main.c ****         
 186:Core/Src/main.c ****         SSD1306_UpdateScreen();
 187:Core/Src/main.c ****       }
 188:Core/Src/main.c ****     }
 189:Core/Src/main.c ****     
 190:Core/Src/main.c **** }
 752              		.loc 1 190 1
 753 00fc 3CE0     		b	.L25
 754              	.L23:
 169:Core/Src/main.c ****     {
 755              		.loc 1 169 23
 756 00fe 1F4B     		ldr	r3, .L26
 757 0100 1B68     		ldr	r3, [r3]
 169:Core/Src/main.c ****     {
 758              		.loc 1 169 13
 759 0102 012B     		cmp	r3, #1
 760 0104 38D1     		bne	.L25
 172:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 761              		.loc 1 172 7
 762 0106 1E4B     		ldr	r3, .L26+4
 763 0108 1B68     		ldr	r3, [r3]
 764 010a 0A22     		movs	r2, #10
 765 010c 1D49     		ldr	r1, .L26+8
 766 010e 1846     		mov	r0, r3
 767 0110 FFF7FEFF 		bl	itoa
 173:Core/Src/main.c ****       {
 768              		.loc 1 173 23
 769 0114 1C4B     		ldr	r3, .L26+12
 770 0116 1A68     		ldr	r2, [r3]
 771 0118 194B     		ldr	r3, .L26+4
 772 011a 1B68     		ldr	r3, [r3]
 173:Core/Src/main.c ****       {
 773              		.loc 1 173 10
 774 011c 9A42     		cmp	r2, r3
 775 011e 2BD0     		beq	.L25
 175:Core/Src/main.c ****         counterPrev = counterOpcao;
 776              		.loc 1 175 9
 777 0120 FFF7FEFF 		bl	SSD1306_Clear
 176:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 778              		.loc 1 176 21
 779 0124 164B     		ldr	r3, .L26+4
 780 0126 1B68     		ldr	r3, [r3]
 781 0128 174A     		ldr	r2, .L26+12
 782 012a 1360     		str	r3, [r2]
 177:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 783              		.loc 1 177 9
 784 012c 0221     		movs	r1, #2
 785 012e 0220     		movs	r0, #2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 18


 786 0130 FFF7FEFF 		bl	SSD1306_GotoXY
 178:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 787              		.loc 1 178 9
 788 0134 0122     		movs	r2, #1
 789 0136 1549     		ldr	r1, .L26+16
 790 0138 1248     		ldr	r0, .L26+8
 791 013a FFF7FEFF 		bl	SSD1306_Puts
 179:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 792              		.loc 1 179 9
 793 013e 0C21     		movs	r1, #12
 794 0140 0220     		movs	r0, #2
 795 0142 FFF7FEFF 		bl	SSD1306_GotoXY
 180:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 796              		.loc 1 180 9
 797 0146 0122     		movs	r2, #1
 798 0148 1049     		ldr	r1, .L26+16
 799 014a 1648     		ldr	r0, .L26+40
 800 014c FFF7FEFF 		bl	SSD1306_Puts
 181:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 801              		.loc 1 181 9
 802 0150 1621     		movs	r1, #22
 803 0152 0220     		movs	r0, #2
 804 0154 FFF7FEFF 		bl	SSD1306_GotoXY
 182:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 805              		.loc 1 182 9
 806 0158 0122     		movs	r2, #1
 807 015a 0C49     		ldr	r1, .L26+16
 808 015c 1248     		ldr	r0, .L26+44
 809 015e FFF7FEFF 		bl	SSD1306_Puts
 183:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 810              		.loc 1 183 9
 811 0162 2021     		movs	r1, #32
 812 0164 0220     		movs	r0, #2
 813 0166 FFF7FEFF 		bl	SSD1306_GotoXY
 184:Core/Src/main.c ****         
 814              		.loc 1 184 9
 815 016a 0122     		movs	r2, #1
 816 016c 0749     		ldr	r1, .L26+16
 817 016e 0F48     		ldr	r0, .L26+48
 818 0170 FFF7FEFF 		bl	SSD1306_Puts
 186:Core/Src/main.c ****       }
 819              		.loc 1 186 9
 820 0174 FFF7FEFF 		bl	SSD1306_UpdateScreen
 821              	.L25:
 822              		.loc 1 190 1
 823 0178 00BF     		nop
 824 017a 98BD     		pop	{r3, r4, r7, pc}
 825              	.L27:
 826              		.align	2
 827              	.L26:
 828 017c 00000000 		.word	MenuAtual
 829 0180 00000000 		.word	counterOpcao
 830 0184 00000000 		.word	txtCounter
 831 0188 00000000 		.word	counterPrev
 832 018c 00000000 		.word	Font_7x10
 833 0190 00000000 		.word	.LC0
 834 0194 00000000 		.word	TempCelsius
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 19


 835 0198 10000000 		.word	.LC1
 836 019c 0000C842 		.word	1120403456
 837 01a0 00000000 		.word	y
 838 01a4 14000000 		.word	.LC2
 839 01a8 20000000 		.word	.LC3
 840 01ac 30000000 		.word	.LC4
 841              		.cfi_endproc
 842              	.LFE67:
 844              		.section	.text.ClickHandler,"ax",%progbits
 845              		.align	1
 846              		.global	ClickHandler
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 852              	ClickHandler:
 853              	.LFB68:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** void ClickHandler(void)
 193:Core/Src/main.c **** {
 854              		.loc 1 193 1
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858 0000 80B5     		push	{r7, lr}
 859              	.LCFI12:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863 0002 00AF     		add	r7, sp, #0
 864              	.LCFI13:
 865              		.cfi_def_cfa_register 7
 194:Core/Src/main.c ****   //SSD1306_Clear();
 195:Core/Src/main.c ****   if(MenuAtual == 0)
 866              		.loc 1 195 16
 867 0004 184B     		ldr	r3, .L33
 868 0006 1B68     		ldr	r3, [r3]
 869              		.loc 1 195 5
 870 0008 002B     		cmp	r3, #0
 871 000a 06D1     		bne	.L29
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     if(counterOpcao == 1)
 872              		.loc 1 197 21
 873 000c 174B     		ldr	r3, .L33+4
 874 000e 1B68     		ldr	r3, [r3]
 875              		.loc 1 197 7
 876 0010 012B     		cmp	r3, #1
 877 0012 02D1     		bne	.L29
 198:Core/Src/main.c ****     {
 199:Core/Src/main.c ****       MenuAtual = 1;
 878              		.loc 1 199 17
 879 0014 144B     		ldr	r3, .L33
 880 0016 0122     		movs	r2, #1
 881 0018 1A60     		str	r2, [r3]
 882              	.L29:
 200:Core/Src/main.c ****     }
 201:Core/Src/main.c ****   }
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 20


 202:Core/Src/main.c ****   if(MenuAtual == 1)
 883              		.loc 1 202 16
 884 001a 134B     		ldr	r3, .L33
 885 001c 1B68     		ldr	r3, [r3]
 886              		.loc 1 202 5
 887 001e 012B     		cmp	r3, #1
 888 0020 1CD1     		bne	.L30
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     if(counterOpcao == 1) //Ligar Interrupt
 889              		.loc 1 204 21
 890 0022 124B     		ldr	r3, .L33+4
 891 0024 1B68     		ldr	r3, [r3]
 892              		.loc 1 204 7
 893 0026 012B     		cmp	r3, #1
 894 0028 03D1     		bne	.L31
 205:Core/Src/main.c ****     {
 206:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim4);
 895              		.loc 1 206 7
 896 002a 1148     		ldr	r0, .L33+8
 897 002c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 898 0030 14E0     		b	.L30
 899              	.L31:
 207:Core/Src/main.c ****     }
 208:Core/Src/main.c ****     else if (counterOpcao == 2) // Desligar Interrupt
 900              		.loc 1 208 27
 901 0032 0E4B     		ldr	r3, .L33+4
 902 0034 1B68     		ldr	r3, [r3]
 903              		.loc 1 208 13
 904 0036 022B     		cmp	r3, #2
 905 0038 09D1     		bne	.L32
 209:Core/Src/main.c ****     {
 210:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 906              		.loc 1 210 7
 907 003a 0D48     		ldr	r0, .L33+8
 908 003c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 211:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 909              		.loc 1 211 7
 910 0040 0022     		movs	r2, #0
 911 0042 4FF48071 		mov	r1, #256
 912 0046 0B48     		ldr	r0, .L33+12
 913 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 914 004c 06E0     		b	.L30
 915              	.L32:
 212:Core/Src/main.c ****     }
 213:Core/Src/main.c ****     else if(counterOpcao == 0)
 916              		.loc 1 213 26
 917 004e 074B     		ldr	r3, .L33+4
 918 0050 1B68     		ldr	r3, [r3]
 919              		.loc 1 213 12
 920 0052 002B     		cmp	r3, #0
 921 0054 02D1     		bne	.L30
 214:Core/Src/main.c ****     {
 215:Core/Src/main.c ****       MenuAtual = 0;
 922              		.loc 1 215 17
 923 0056 044B     		ldr	r3, .L33
 924 0058 0022     		movs	r2, #0
 925 005a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 21


 926              	.L30:
 216:Core/Src/main.c ****     }
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   
 219:Core/Src/main.c ****   
 220:Core/Src/main.c ****   counterPrev = 99; // Forca a atualizar a tela
 927              		.loc 1 220 15
 928 005c 064B     		ldr	r3, .L33+16
 929 005e 6322     		movs	r2, #99
 930 0060 1A60     		str	r2, [r3]
 221:Core/Src/main.c ****   
 222:Core/Src/main.c ****   
 223:Core/Src/main.c **** }
 931              		.loc 1 223 1
 932 0062 00BF     		nop
 933 0064 80BD     		pop	{r7, pc}
 934              	.L34:
 935 0066 00BF     		.align	2
 936              	.L33:
 937 0068 00000000 		.word	MenuAtual
 938 006c 00000000 		.word	counterOpcao
 939 0070 00000000 		.word	htim4
 940 0074 00080140 		.word	1073809408
 941 0078 00000000 		.word	counterPrev
 942              		.cfi_endproc
 943              	.LFE68:
 945              		.global	__aeabi_ui2d
 946              		.global	__aeabi_dmul
 947              		.section	.text.main,"ax",%progbits
 948              		.align	1
 949              		.global	main
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu softvfp
 955              	main:
 956              	.LFB69:
 224:Core/Src/main.c **** /* USER CODE END PFP */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 227:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE END 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief  The application entry point.
 233:Core/Src/main.c ****   * @retval int
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c **** int main(void)
 236:Core/Src/main.c **** {
 957              		.loc 1 236 1
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 16
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961 0000 80B5     		push	{r7, lr}
 962              	.LCFI14:
 963              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 22


 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 84B0     		sub	sp, sp, #16
 967              	.LCFI15:
 968              		.cfi_def_cfa_offset 24
 969 0004 00AF     		add	r7, sp, #0
 970              	.LCFI16:
 971              		.cfi_def_cfa_register 7
 237:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 238:Core/Src/main.c ****   /*uint32_t i;
 239:Core/Src/main.c ****   float Temp;
 240:Core/Src/main.c ****   uint32_t counter = 0;*/
 241:Core/Src/main.c ****   GPIO_PinState aState;
 242:Core/Src/main.c ****   GPIO_PinState aLastState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 972              		.loc 1 242 30
 973 0006 4021     		movs	r1, #64
 974 0008 6948     		ldr	r0, .L47+24
 975 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 976 000e 0346     		mov	r3, r0
 977 0010 FB73     		strb	r3, [r7, #15]
 243:Core/Src/main.c ****   uint32_t counter = 0;
 978              		.loc 1 243 12
 979 0012 0023     		movs	r3, #0
 980 0014 BB60     		str	r3, [r7, #8]
 244:Core/Src/main.c ****   
 245:Core/Src/main.c ****   
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END 1 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 252:Core/Src/main.c ****   HAL_Init();
 981              		.loc 1 252 3
 982 0016 FFF7FEFF 		bl	HAL_Init
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END Init */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* Configure the system clock */
 259:Core/Src/main.c ****   SystemClock_Config();
 983              		.loc 1 259 3
 984 001a FFF7FEFF 		bl	SystemClock_Config
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END SysInit */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* Initialize all configured peripherals */
 266:Core/Src/main.c ****   MX_GPIO_Init();
 985              		.loc 1 266 3
 986 001e FFF7FEFF 		bl	MX_GPIO_Init
 267:Core/Src/main.c ****   MX_I2C1_Init();
 987              		.loc 1 267 3
 988 0022 FFF7FEFF 		bl	MX_I2C1_Init
 268:Core/Src/main.c ****   MX_TIM4_Init();
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 23


 989              		.loc 1 268 3
 990 0026 FFF7FEFF 		bl	MX_TIM4_Init
 269:Core/Src/main.c ****   MX_ADC1_Init();
 991              		.loc 1 269 3
 992 002a FFF7FEFF 		bl	MX_ADC1_Init
 270:Core/Src/main.c ****   MX_TIM2_Init();
 993              		.loc 1 270 3
 994 002e FFF7FEFF 		bl	MX_TIM2_Init
 271:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   
 274:Core/Src/main.c ****   /* USER CODE END 2 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* Infinite loop */
 277:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 278:Core/Src/main.c ****   SSD1306_Init();
 995              		.loc 1 278 3
 996 0032 FFF7FEFF 		bl	SSD1306_Init
 279:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 997              		.loc 1 279 3
 998 0036 0122     		movs	r2, #1
 999 0038 1021     		movs	r1, #16
 1000 003a 5E48     		ldr	r0, .L47+28
 1001 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   //PID
 282:Core/Src/main.c ****   setpoint = 20.0;
 1002              		.loc 1 282 12
 1003 0040 5D4B     		ldr	r3, .L47+32
 1004 0042 5E4A     		ldr	r2, .L47+36
 1005 0044 1A60     		str	r2, [r3]	@ float
 283:Core/Src/main.c ****   TempCelsius = 25.0;
 1006              		.loc 1 283 15
 1007 0046 5E4B     		ldr	r3, .L47+40
 1008 0048 5E4A     		ldr	r2, .L47+44
 1009 004a 1A60     		str	r2, [r3]	@ float
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   kp = 1.0; //Calibrar depois
 1010              		.loc 1 285 6
 1011 004c 5E4B     		ldr	r3, .L47+48
 1012 004e 4FF07E52 		mov	r2, #1065353216
 1013 0052 1A60     		str	r2, [r3]	@ float
 286:Core/Src/main.c ****   ki = 0.1;
 1014              		.loc 1 286 6
 1015 0054 5D4B     		ldr	r3, .L47+52
 1016 0056 5E4A     		ldr	r2, .L47+56
 1017 0058 1A60     		str	r2, [r3]	@ float
 287:Core/Src/main.c ****   kd = 0.01;
 1018              		.loc 1 287 6
 1019 005a 5E4B     		ldr	r3, .L47+60
 1020 005c 5E4A     		ldr	r2, .L47+64
 1021 005e 1A60     		str	r2, [r3]	@ float
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   erroAnt = 0.0; //Qual o valor inicial?
 1022              		.loc 1 289 11
 1023 0060 5E4B     		ldr	r3, .L47+68
 1024 0062 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 24


 1025 0066 1A60     		str	r2, [r3]	@ float
 290:Core/Src/main.c ****   yiAnt = 0.0;
 1026              		.loc 1 290 9
 1027 0068 5D4B     		ldr	r3, .L47+72
 1028 006a 4FF00002 		mov	r2, #0
 1029 006e 1A60     		str	r2, [r3]	@ float
 291:Core/Src/main.c ****   ydAnt = 0.0;
 1030              		.loc 1 291 9
 1031 0070 5C4B     		ldr	r3, .L47+76
 1032 0072 4FF00002 		mov	r2, #0
 1033 0076 1A60     		str	r2, [r3]	@ float
 292:Core/Src/main.c ****   Nd = 1;
 1034              		.loc 1 292 6
 1035 0078 5B4B     		ldr	r3, .L47+80
 1036 007a 4FF07E52 		mov	r2, #1065353216
 1037 007e 1A60     		str	r2, [r3]	@ float
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 1038              		.loc 1 294 3
 1039 0080 0421     		movs	r1, #4
 1040 0082 5A48     		ldr	r0, .L47+84
 1041 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 295:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1042              		.loc 1 295 3
 1043 0088 5948     		ldr	r0, .L47+88
 1044 008a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1045              	.L44:
 296:Core/Src/main.c ****   
 297:Core/Src/main.c ****   
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   while (1)
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     
 302:Core/Src/main.c ****     /*if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_RESET)
 303:Core/Src/main.c ****     {
 304:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 305:Core/Src/main.c ****     }
 306:Core/Src/main.c ****     else
 307:Core/Src/main.c ****     {
 308:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 309:Core/Src/main.c ****     }*/
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****     // Contador Rot Button
 312:Core/Src/main.c ****     aState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 1046              		.loc 1 312 14
 1047 008e 4021     		movs	r1, #64
 1048 0090 4748     		ldr	r0, .L47+24
 1049 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1050 0096 0346     		mov	r3, r0
 1051 0098 FB71     		strb	r3, [r7, #7]
 313:Core/Src/main.c ****     if (aState != aLastState)
 1052              		.loc 1 313 8
 1053 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1054 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1055 009e 9A42     		cmp	r2, r3
 1056 00a0 1DD0     		beq	.L36
 314:Core/Src/main.c ****     {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 25


 315:Core/Src/main.c ****       if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7) != aState)
 1057              		.loc 1 315 11
 1058 00a2 8021     		movs	r1, #128
 1059 00a4 4248     		ldr	r0, .L47+24
 1060 00a6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1061 00aa 0346     		mov	r3, r0
 1062 00ac 1A46     		mov	r2, r3
 1063              		.loc 1 315 10
 1064 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1065 00b0 9342     		cmp	r3, r2
 1066 00b2 03D0     		beq	.L37
 316:Core/Src/main.c ****       {
 317:Core/Src/main.c ****         counter--; // Sentido Horario
 1067              		.loc 1 317 16
 1068 00b4 BB68     		ldr	r3, [r7, #8]
 1069 00b6 013B     		subs	r3, r3, #1
 1070 00b8 BB60     		str	r3, [r7, #8]
 1071 00ba 02E0     		b	.L38
 1072              	.L37:
 318:Core/Src/main.c ****       }
 319:Core/Src/main.c ****       else
 320:Core/Src/main.c ****       {
 321:Core/Src/main.c ****         counter++; // Sentido Anti Horario
 1073              		.loc 1 321 16
 1074 00bc BB68     		ldr	r3, [r7, #8]
 1075 00be 0133     		adds	r3, r3, #1
 1076 00c0 BB60     		str	r3, [r7, #8]
 1077              	.L38:
 322:Core/Src/main.c ****       }
 323:Core/Src/main.c ****       if (counter % 2 == 0)
 1078              		.loc 1 323 19
 1079 00c2 BB68     		ldr	r3, [r7, #8]
 1080 00c4 03F00103 		and	r3, r3, #1
 1081              		.loc 1 323 10
 1082 00c8 002B     		cmp	r3, #0
 1083 00ca 03D1     		bne	.L39
 324:Core/Src/main.c ****       {
 325:Core/Src/main.c ****         counterOpcao = counter/2;
 1084              		.loc 1 325 31
 1085 00cc BB68     		ldr	r3, [r7, #8]
 1086 00ce 5B08     		lsrs	r3, r3, #1
 1087              		.loc 1 325 22
 1088 00d0 484A     		ldr	r2, .L47+92
 1089 00d2 1360     		str	r3, [r2]
 1090              	.L39:
 326:Core/Src/main.c ****       }
 327:Core/Src/main.c ****       if(counter>100)
 1091              		.loc 1 327 9
 1092 00d4 BB68     		ldr	r3, [r7, #8]
 1093 00d6 642B     		cmp	r3, #100
 1094 00d8 01D9     		bls	.L36
 328:Core/Src/main.c ****       {
 329:Core/Src/main.c ****         counter = 0;
 1095              		.loc 1 329 17
 1096 00da 0023     		movs	r3, #0
 1097 00dc BB60     		str	r3, [r7, #8]
 1098              	.L36:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 26


 330:Core/Src/main.c ****       }
 331:Core/Src/main.c ****     }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     aLastState = aState;
 1099              		.loc 1 333 16
 1100 00de FB79     		ldrb	r3, [r7, #7]
 1101 00e0 FB73     		strb	r3, [r7, #15]
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****     // OLED
 337:Core/Src/main.c ****     /*
 338:Core/Src/main.c ****     MenuHandler();
 339:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10))
 340:Core/Src/main.c ****     {
 341:Core/Src/main.c ****       ClickHandler();
 342:Core/Src/main.c ****     }
 343:Core/Src/main.c ****     */
 344:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 1102              		.loc 1 344 5
 1103 00e2 4548     		ldr	r0, .L47+96
 1104 00e4 FFF7FEFF 		bl	HAL_ADC_Start
 345:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1,100);
 1105              		.loc 1 345 5
 1106 00e8 6421     		movs	r1, #100
 1107 00ea 4348     		ldr	r0, .L47+96
 1108 00ec FFF7FEFF 		bl	HAL_ADC_PollForConversion
 346:Core/Src/main.c ****     TempVolts = HAL_ADC_GetValue(&hadc1);
 1109              		.loc 1 346 17
 1110 00f0 4148     		ldr	r0, .L47+96
 1111 00f2 FFF7FEFF 		bl	HAL_ADC_GetValue
 1112 00f6 0346     		mov	r3, r0
 1113              		.loc 1 346 15
 1114 00f8 404A     		ldr	r2, .L47+100
 1115 00fa 1360     		str	r3, [r2]
 347:Core/Src/main.c ****     TempCelsius = ((TempVolts * 1.1 / (4095)) / 0.01);
 1116              		.loc 1 347 31
 1117 00fc 3F4B     		ldr	r3, .L47+100
 1118 00fe 1B68     		ldr	r3, [r3]
 1119 0100 1846     		mov	r0, r3
 1120 0102 FFF7FEFF 		bl	__aeabi_ui2d
 1121 0106 24A3     		adr	r3, .L47
 1122 0108 D3E90023 		ldrd	r2, [r3]
 1123 010c FFF7FEFF 		bl	__aeabi_dmul
 1124 0110 0246     		mov	r2, r0
 1125 0112 0B46     		mov	r3, r1
 1126 0114 1046     		mov	r0, r2
 1127 0116 1946     		mov	r1, r3
 1128              		.loc 1 347 37
 1129 0118 21A3     		adr	r3, .L47+8
 1130 011a D3E90023 		ldrd	r2, [r3]
 1131 011e FFF7FEFF 		bl	__aeabi_ddiv
 1132 0122 0246     		mov	r2, r0
 1133 0124 0B46     		mov	r3, r1
 1134 0126 1046     		mov	r0, r2
 1135 0128 1946     		mov	r1, r3
 1136              		.loc 1 347 47
 1137 012a 1FA3     		adr	r3, .L47+16
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 27


 1138 012c D3E90023 		ldrd	r2, [r3]
 1139 0130 FFF7FEFF 		bl	__aeabi_ddiv
 1140 0134 0246     		mov	r2, r0
 1141 0136 0B46     		mov	r3, r1
 1142 0138 1046     		mov	r0, r2
 1143 013a 1946     		mov	r1, r3
 1144 013c FFF7FEFF 		bl	__aeabi_d2f
 1145 0140 0346     		mov	r3, r0
 1146              		.loc 1 347 17
 1147 0142 1F4A     		ldr	r2, .L47+40
 1148 0144 1360     		str	r3, [r2]	@ float
 348:Core/Src/main.c ****     MenuHandler();
 1149              		.loc 1 348 5
 1150 0146 FFF7FEFF 		bl	MenuHandler
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****     //calcPid();
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****     if(TempCelsius<20.0)
 1151              		.loc 1 352 19
 1152 014a 1D4B     		ldr	r3, .L47+40
 1153 014c 1B68     		ldr	r3, [r3]	@ float
 1154              		.loc 1 352 7
 1155 014e 1B49     		ldr	r1, .L47+36
 1156 0150 1846     		mov	r0, r3
 1157 0152 FFF7FEFF 		bl	__aeabi_fcmplt
 1158 0156 0346     		mov	r3, r0
 1159 0158 002B     		cmp	r3, #0
 1160 015a 06D0     		beq	.L46
 353:Core/Src/main.c ****     {
 354:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 1);
 355:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 1161              		.loc 1 355 7
 1162 015c 0122     		movs	r2, #1
 1163 015e 4FF40051 		mov	r1, #8192
 1164 0162 2748     		ldr	r0, .L47+104
 1165 0164 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1166 0168 0AE0     		b	.L42
 1167              	.L46:
 356:Core/Src/main.c ****     }
 357:Core/Src/main.c ****     else
 358:Core/Src/main.c ****     {
 359:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 0);
 1168              		.loc 1 359 7
 1169 016a 0022     		movs	r2, #0
 1170 016c 0221     		movs	r1, #2
 1171 016e 1048     		ldr	r0, .L47+24
 1172 0170 FFF7FEFF 		bl	HAL_GPIO_WritePin
 360:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 1173              		.loc 1 360 7
 1174 0174 0022     		movs	r2, #0
 1175 0176 4FF40051 		mov	r1, #8192
 1176 017a 2148     		ldr	r0, .L47+104
 1177 017c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1178              	.L42:
 361:Core/Src/main.c ****     }
 362:Core/Src/main.c ****     
 363:Core/Src/main.c ****   
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 28


 364:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10))
 1179              		.loc 1 364 8
 1180 0180 4FF48061 		mov	r1, #1024
 1181 0184 0B48     		ldr	r0, .L47+28
 1182 0186 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1183 018a 0346     		mov	r3, r0
 1184              		.loc 1 364 7
 1185 018c 002B     		cmp	r3, #0
 1186 018e 3FF47EAF 		beq	.L44
 365:Core/Src/main.c ****     {
 366:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 367:Core/Src/main.c ****       ClickHandler();
 1187              		.loc 1 367 7
 1188 0192 FFF7FEFF 		bl	ClickHandler
 312:Core/Src/main.c ****     if (aState != aLastState)
 1189              		.loc 1 312 12
 1190 0196 7AE7     		b	.L44
 1191              	.L48:
 1192              		.align	3
 1193              	.L47:
 1194 0198 9A999999 		.word	-1717986918
 1195 019c 9999F13F 		.word	1072798105
 1196 01a0 00000000 		.word	0
 1197 01a4 00FEAF40 		.word	1085275648
 1198 01a8 7B14AE47 		.word	1202590843
 1199 01ac E17A843F 		.word	1065646817
 1200 01b0 00080140 		.word	1073809408
 1201 01b4 000C0140 		.word	1073810432
 1202 01b8 00000000 		.word	setpoint
 1203 01bc 0000A041 		.word	1101004800
 1204 01c0 00000000 		.word	TempCelsius
 1205 01c4 0000C841 		.word	1103626240
 1206 01c8 00000000 		.word	kp
 1207 01cc 00000000 		.word	ki
 1208 01d0 CDCCCC3D 		.word	1036831949
 1209 01d4 00000000 		.word	kd
 1210 01d8 0AD7233C 		.word	1008981770
 1211 01dc 00000000 		.word	erroAnt
 1212 01e0 00000000 		.word	yiAnt
 1213 01e4 00000000 		.word	ydAnt
 1214 01e8 00000000 		.word	Nd
 1215 01ec 00000000 		.word	htim2
 1216 01f0 00000000 		.word	htim4
 1217 01f4 00000000 		.word	counterOpcao
 1218 01f8 00000000 		.word	hadc1
 1219 01fc 00000000 		.word	TempVolts
 1220 0200 00100140 		.word	1073811456
 1221              		.cfi_endproc
 1222              	.LFE69:
 1224              		.section	.text.SystemClock_Config,"ax",%progbits
 1225              		.align	1
 1226              		.global	SystemClock_Config
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu softvfp
 1232              	SystemClock_Config:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 29


 1233              	.LFB70:
 368:Core/Src/main.c ****     }
 369:Core/Src/main.c ****     else
 370:Core/Src/main.c ****     {
 371:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 372:Core/Src/main.c ****     }
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1);
 375:Core/Src/main.c ****     //HAL_Delay(1);
 376:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0);
 377:Core/Src/main.c ****     //HAL_Delay(1);
 378:Core/Src/main.c ****     
 379:Core/Src/main.c ****     
 380:Core/Src/main.c ****     // update screen
 381:Core/Src/main.c ****     /*for (i = 0; i < 8; i++)
 382:Core/Src/main.c ****     {
 383:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 384:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 385:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 1);
 386:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 1);
 387:Core/Src/main.c ****       HAL_Delay(2500);
 388:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 389:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 390:Core/Src/main.c ****       //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 0);
 391:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 0);
 392:Core/Src/main.c ****       HAL_Delay(2500);
 393:Core/Src/main.c ****     }*/
 394:Core/Src/main.c ****     //HAL_Delay(800);
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****     /*Temp = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5);
 397:Core/Src/main.c ****     Temp = ((Temp * 1.1 / (1023)) / 0.01);
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****     if (Temp < 25)
 400:Core/Src/main.c ****     {
 401:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 1);
 402:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 403:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 0);
 404:Core/Src/main.c ****     }
 405:Core/Src/main.c ****     else if (Temp >= 25 && Temp < 30)
 406:Core/Src/main.c ****     {
 407:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 408:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 0);
 409:Core/Src/main.c ****     }
 410:Core/Src/main.c ****     else if (Temp >= 30 && Temp < 35)
 411:Core/Src/main.c ****     {
 412:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 0);
 413:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 414:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 1);
 415:Core/Src/main.c ****     }
 416:Core/Src/main.c ****     else if (Temp >= 35 && Temp < 40)
 417:Core/Src/main.c ****     {
 418:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 0);
 419:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 420:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 1);
 421:Core/Src/main.c ****     }
 422:Core/Src/main.c ****     else
 423:Core/Src/main.c ****     {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 30


 424:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, 0);
 425:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 426:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, 0);
 427:Core/Src/main.c ****     }*/
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     /* USER CODE END WHILE */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   /* USER CODE END 3 */
 434:Core/Src/main.c **** }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** /**
 437:Core/Src/main.c ****   * @brief System Clock Configuration
 438:Core/Src/main.c ****   * @retval None
 439:Core/Src/main.c ****   */
 440:Core/Src/main.c **** void SystemClock_Config(void)
 441:Core/Src/main.c **** {
 1234              		.loc 1 441 1
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 80
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              	.LCFI17:
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 94B0     		sub	sp, sp, #80
 1244              	.LCFI18:
 1245              		.cfi_def_cfa_offset 88
 1246 0004 00AF     		add	r7, sp, #0
 1247              	.LCFI19:
 1248              		.cfi_def_cfa_register 7
 442:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1249              		.loc 1 442 22
 1250 0006 07F12803 		add	r3, r7, #40
 1251 000a 2822     		movs	r2, #40
 1252 000c 0021     		movs	r1, #0
 1253 000e 1846     		mov	r0, r3
 1254 0010 FFF7FEFF 		bl	memset
 443:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1255              		.loc 1 443 22
 1256 0014 07F11403 		add	r3, r7, #20
 1257 0018 0022     		movs	r2, #0
 1258 001a 1A60     		str	r2, [r3]
 1259 001c 5A60     		str	r2, [r3, #4]
 1260 001e 9A60     		str	r2, [r3, #8]
 1261 0020 DA60     		str	r2, [r3, #12]
 1262 0022 1A61     		str	r2, [r3, #16]
 444:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1263              		.loc 1 444 28
 1264 0024 3B1D     		adds	r3, r7, #4
 1265 0026 0022     		movs	r2, #0
 1266 0028 1A60     		str	r2, [r3]
 1267 002a 5A60     		str	r2, [r3, #4]
 1268 002c 9A60     		str	r2, [r3, #8]
 1269 002e DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 31


 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 447:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 1270              		.loc 1 449 36
 1271 0030 0123     		movs	r3, #1
 1272 0032 BB62     		str	r3, [r7, #40]
 450:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1273              		.loc 1 450 30
 1274 0034 4FF48033 		mov	r3, #65536
 1275 0038 FB62     		str	r3, [r7, #44]
 451:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1276              		.loc 1 451 36
 1277 003a 0023     		movs	r3, #0
 1278 003c 3B63     		str	r3, [r7, #48]
 452:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1279              		.loc 1 452 30
 1280 003e 0123     		movs	r3, #1
 1281 0040 BB63     		str	r3, [r7, #56]
 453:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1282              		.loc 1 453 34
 1283 0042 0223     		movs	r3, #2
 1284 0044 7B64     		str	r3, [r7, #68]
 454:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1285              		.loc 1 454 35
 1286 0046 4FF48033 		mov	r3, #65536
 1287 004a BB64     		str	r3, [r7, #72]
 455:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1288              		.loc 1 455 32
 1289 004c 4FF4E013 		mov	r3, #1835008
 1290 0050 FB64     		str	r3, [r7, #76]
 456:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1291              		.loc 1 456 7
 1292 0052 07F12803 		add	r3, r7, #40
 1293 0056 1846     		mov	r0, r3
 1294 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1295 005c 0346     		mov	r3, r0
 1296              		.loc 1 456 6
 1297 005e 002B     		cmp	r3, #0
 1298 0060 01D0     		beq	.L50
 457:Core/Src/main.c ****   {
 458:Core/Src/main.c ****     Error_Handler();
 1299              		.loc 1 458 5
 1300 0062 FFF7FEFF 		bl	Error_Handler
 1301              	.L50:
 459:Core/Src/main.c ****   }
 460:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 461:Core/Src/main.c ****   */
 462:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1302              		.loc 1 462 31
 1303 0066 0F23     		movs	r3, #15
 1304 0068 7B61     		str	r3, [r7, #20]
 463:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 464:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1305              		.loc 1 464 34
 1306 006a 0223     		movs	r3, #2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 32


 1307 006c BB61     		str	r3, [r7, #24]
 465:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1308              		.loc 1 465 35
 1309 006e 0023     		movs	r3, #0
 1310 0070 FB61     		str	r3, [r7, #28]
 466:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1311              		.loc 1 466 36
 1312 0072 4FF48063 		mov	r3, #1024
 1313 0076 3B62     		str	r3, [r7, #32]
 467:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1314              		.loc 1 467 36
 1315 0078 0023     		movs	r3, #0
 1316 007a 7B62     		str	r3, [r7, #36]
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 1317              		.loc 1 469 7
 1318 007c 07F11403 		add	r3, r7, #20
 1319 0080 0221     		movs	r1, #2
 1320 0082 1846     		mov	r0, r3
 1321 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1322 0088 0346     		mov	r3, r0
 1323              		.loc 1 469 6
 1324 008a 002B     		cmp	r3, #0
 1325 008c 01D0     		beq	.L51
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 1326              		.loc 1 471 5
 1327 008e FFF7FEFF 		bl	Error_Handler
 1328              	.L51:
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 1329              		.loc 1 473 38
 1330 0092 0223     		movs	r3, #2
 1331 0094 7B60     		str	r3, [r7, #4]
 474:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1332              		.loc 1 474 35
 1333 0096 4FF40043 		mov	r3, #32768
 1334 009a FB60     		str	r3, [r7, #12]
 475:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1335              		.loc 1 475 7
 1336 009c 3B1D     		adds	r3, r7, #4
 1337 009e 1846     		mov	r0, r3
 1338 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1339 00a4 0346     		mov	r3, r0
 1340              		.loc 1 475 6
 1341 00a6 002B     		cmp	r3, #0
 1342 00a8 01D0     		beq	.L53
 476:Core/Src/main.c ****   {
 477:Core/Src/main.c ****     Error_Handler();
 1343              		.loc 1 477 5
 1344 00aa FFF7FEFF 		bl	Error_Handler
 1345              	.L53:
 478:Core/Src/main.c ****   }
 479:Core/Src/main.c **** }
 1346              		.loc 1 479 1
 1347 00ae 00BF     		nop
 1348 00b0 5037     		adds	r7, r7, #80
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 33


 1349              	.LCFI20:
 1350              		.cfi_def_cfa_offset 8
 1351 00b2 BD46     		mov	sp, r7
 1352              	.LCFI21:
 1353              		.cfi_def_cfa_register 13
 1354              		@ sp needed
 1355 00b4 80BD     		pop	{r7, pc}
 1356              		.cfi_endproc
 1357              	.LFE70:
 1359              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1360              		.align	1
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu softvfp
 1366              	MX_ADC1_Init:
 1367              	.LFB71:
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** /**
 482:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 483:Core/Src/main.c ****   * @param None
 484:Core/Src/main.c ****   * @retval None
 485:Core/Src/main.c ****   */
 486:Core/Src/main.c **** static void MX_ADC1_Init(void)
 487:Core/Src/main.c **** {
 1368              		.loc 1 487 1
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 16
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              	.LCFI22:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 84B0     		sub	sp, sp, #16
 1378              	.LCFI23:
 1379              		.cfi_def_cfa_offset 24
 1380 0004 00AF     		add	r7, sp, #0
 1381              	.LCFI24:
 1382              		.cfi_def_cfa_register 7
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1383              		.loc 1 493 26
 1384 0006 3B1D     		adds	r3, r7, #4
 1385 0008 0022     		movs	r2, #0
 1386 000a 1A60     		str	r2, [r3]
 1387 000c 5A60     		str	r2, [r3, #4]
 1388 000e 9A60     		str	r2, [r3, #8]
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 498:Core/Src/main.c ****   /** Common config
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 34


 499:Core/Src/main.c ****   */
 500:Core/Src/main.c ****   hadc1.Instance = ADC1;
 1389              		.loc 1 500 18
 1390 0010 184B     		ldr	r3, .L58
 1391 0012 194A     		ldr	r2, .L58+4
 1392 0014 1A60     		str	r2, [r3]
 501:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1393              		.loc 1 501 27
 1394 0016 174B     		ldr	r3, .L58
 1395 0018 0022     		movs	r2, #0
 1396 001a 9A60     		str	r2, [r3, #8]
 502:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1397              		.loc 1 502 33
 1398 001c 154B     		ldr	r3, .L58
 1399 001e 0022     		movs	r2, #0
 1400 0020 1A73     		strb	r2, [r3, #12]
 503:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1401              		.loc 1 503 36
 1402 0022 144B     		ldr	r3, .L58
 1403 0024 0022     		movs	r2, #0
 1404 0026 1A75     		strb	r2, [r3, #20]
 504:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1405              		.loc 1 504 31
 1406 0028 124B     		ldr	r3, .L58
 1407 002a 4FF46022 		mov	r2, #917504
 1408 002e DA61     		str	r2, [r3, #28]
 505:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1409              		.loc 1 505 24
 1410 0030 104B     		ldr	r3, .L58
 1411 0032 0022     		movs	r2, #0
 1412 0034 5A60     		str	r2, [r3, #4]
 506:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1413              		.loc 1 506 30
 1414 0036 0F4B     		ldr	r3, .L58
 1415 0038 0122     		movs	r2, #1
 1416 003a 1A61     		str	r2, [r3, #16]
 507:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1417              		.loc 1 507 7
 1418 003c 0D48     		ldr	r0, .L58
 1419 003e FFF7FEFF 		bl	HAL_ADC_Init
 1420 0042 0346     		mov	r3, r0
 1421              		.loc 1 507 6
 1422 0044 002B     		cmp	r3, #0
 1423 0046 01D0     		beq	.L55
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 1424              		.loc 1 509 5
 1425 0048 FFF7FEFF 		bl	Error_Handler
 1426              	.L55:
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c ****   /** Configure Regular Channel
 512:Core/Src/main.c ****   */
 513:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 1427              		.loc 1 513 19
 1428 004c 0323     		movs	r3, #3
 1429 004e 7B60     		str	r3, [r7, #4]
 514:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 35


 1430              		.loc 1 514 16
 1431 0050 0123     		movs	r3, #1
 1432 0052 BB60     		str	r3, [r7, #8]
 515:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 1433              		.loc 1 515 24
 1434 0054 0023     		movs	r3, #0
 1435 0056 FB60     		str	r3, [r7, #12]
 516:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1436              		.loc 1 516 7
 1437 0058 3B1D     		adds	r3, r7, #4
 1438 005a 1946     		mov	r1, r3
 1439 005c 0548     		ldr	r0, .L58
 1440 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1441 0062 0346     		mov	r3, r0
 1442              		.loc 1 516 6
 1443 0064 002B     		cmp	r3, #0
 1444 0066 01D0     		beq	.L57
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
 1445              		.loc 1 518 5
 1446 0068 FFF7FEFF 		bl	Error_Handler
 1447              	.L57:
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** }
 1448              		.loc 1 524 1
 1449 006c 00BF     		nop
 1450 006e 1037     		adds	r7, r7, #16
 1451              	.LCFI25:
 1452              		.cfi_def_cfa_offset 8
 1453 0070 BD46     		mov	sp, r7
 1454              	.LCFI26:
 1455              		.cfi_def_cfa_register 13
 1456              		@ sp needed
 1457 0072 80BD     		pop	{r7, pc}
 1458              	.L59:
 1459              		.align	2
 1460              	.L58:
 1461 0074 00000000 		.word	hadc1
 1462 0078 00240140 		.word	1073816576
 1463              		.cfi_endproc
 1464              	.LFE71:
 1466              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1467              		.align	1
 1468              		.syntax unified
 1469              		.thumb
 1470              		.thumb_func
 1471              		.fpu softvfp
 1473              	MX_I2C1_Init:
 1474              	.LFB72:
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** /**
 527:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 528:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 36


 529:Core/Src/main.c ****   * @retval None
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c **** static void MX_I2C1_Init(void)
 532:Core/Src/main.c **** {
 1475              		.loc 1 532 1
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 80B5     		push	{r7, lr}
 1480              	.LCFI27:
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 00AF     		add	r7, sp, #0
 1485              	.LCFI28:
 1486              		.cfi_def_cfa_register 7
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 541:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 1487              		.loc 1 541 18
 1488 0004 124B     		ldr	r3, .L63
 1489 0006 134A     		ldr	r2, .L63+4
 1490 0008 1A60     		str	r2, [r3]
 542:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1491              		.loc 1 542 25
 1492 000a 114B     		ldr	r3, .L63
 1493 000c 124A     		ldr	r2, .L63+8
 1494 000e 5A60     		str	r2, [r3, #4]
 543:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1495              		.loc 1 543 24
 1496 0010 0F4B     		ldr	r3, .L63
 1497 0012 0022     		movs	r2, #0
 1498 0014 9A60     		str	r2, [r3, #8]
 544:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1499              		.loc 1 544 26
 1500 0016 0E4B     		ldr	r3, .L63
 1501 0018 0022     		movs	r2, #0
 1502 001a DA60     		str	r2, [r3, #12]
 545:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1503              		.loc 1 545 29
 1504 001c 0C4B     		ldr	r3, .L63
 1505 001e 4FF48042 		mov	r2, #16384
 1506 0022 1A61     		str	r2, [r3, #16]
 546:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1507              		.loc 1 546 30
 1508 0024 0A4B     		ldr	r3, .L63
 1509 0026 0022     		movs	r2, #0
 1510 0028 5A61     		str	r2, [r3, #20]
 547:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1511              		.loc 1 547 26
 1512 002a 094B     		ldr	r3, .L63
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 37


 1513 002c 0022     		movs	r2, #0
 1514 002e 9A61     		str	r2, [r3, #24]
 548:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1515              		.loc 1 548 30
 1516 0030 074B     		ldr	r3, .L63
 1517 0032 0022     		movs	r2, #0
 1518 0034 DA61     		str	r2, [r3, #28]
 549:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1519              		.loc 1 549 28
 1520 0036 064B     		ldr	r3, .L63
 1521 0038 0022     		movs	r2, #0
 1522 003a 1A62     		str	r2, [r3, #32]
 550:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1523              		.loc 1 550 7
 1524 003c 0448     		ldr	r0, .L63
 1525 003e FFF7FEFF 		bl	HAL_I2C_Init
 1526 0042 0346     		mov	r3, r0
 1527              		.loc 1 550 6
 1528 0044 002B     		cmp	r3, #0
 1529 0046 01D0     		beq	.L62
 551:Core/Src/main.c ****   {
 552:Core/Src/main.c ****     Error_Handler();
 1530              		.loc 1 552 5
 1531 0048 FFF7FEFF 		bl	Error_Handler
 1532              	.L62:
 553:Core/Src/main.c ****   }
 554:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** }
 1533              		.loc 1 558 1
 1534 004c 00BF     		nop
 1535 004e 80BD     		pop	{r7, pc}
 1536              	.L64:
 1537              		.align	2
 1538              	.L63:
 1539 0050 00000000 		.word	hi2c1
 1540 0054 00540040 		.word	1073763328
 1541 0058 801A0600 		.word	400000
 1542              		.cfi_endproc
 1543              	.LFE72:
 1545              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1546              		.align	1
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu softvfp
 1552              	MX_TIM2_Init:
 1553              	.LFB73:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** /**
 561:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 562:Core/Src/main.c ****   * @param None
 563:Core/Src/main.c ****   * @retval None
 564:Core/Src/main.c ****   */
 565:Core/Src/main.c **** static void MX_TIM2_Init(void)
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 38


 566:Core/Src/main.c **** {
 1554              		.loc 1 566 1
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 56
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 0000 80B5     		push	{r7, lr}
 1559              	.LCFI29:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 8EB0     		sub	sp, sp, #56
 1564              	.LCFI30:
 1565              		.cfi_def_cfa_offset 64
 1566 0004 00AF     		add	r7, sp, #0
 1567              	.LCFI31:
 1568              		.cfi_def_cfa_register 7
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1569              		.loc 1 572 26
 1570 0006 07F12803 		add	r3, r7, #40
 1571 000a 0022     		movs	r2, #0
 1572 000c 1A60     		str	r2, [r3]
 1573 000e 5A60     		str	r2, [r3, #4]
 1574 0010 9A60     		str	r2, [r3, #8]
 1575 0012 DA60     		str	r2, [r3, #12]
 573:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1576              		.loc 1 573 27
 1577 0014 07F12003 		add	r3, r7, #32
 1578 0018 0022     		movs	r2, #0
 1579 001a 1A60     		str	r2, [r3]
 1580 001c 5A60     		str	r2, [r3, #4]
 574:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1581              		.loc 1 574 22
 1582 001e 3B1D     		adds	r3, r7, #4
 1583 0020 0022     		movs	r2, #0
 1584 0022 1A60     		str	r2, [r3]
 1585 0024 5A60     		str	r2, [r3, #4]
 1586 0026 9A60     		str	r2, [r3, #8]
 1587 0028 DA60     		str	r2, [r3, #12]
 1588 002a 1A61     		str	r2, [r3, #16]
 1589 002c 5A61     		str	r2, [r3, #20]
 1590 002e 9A61     		str	r2, [r3, #24]
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 579:Core/Src/main.c ****   htim2.Instance = TIM2;
 1591              		.loc 1 579 18
 1592 0030 354B     		ldr	r3, .L72
 1593 0032 4FF08042 		mov	r2, #1073741824
 1594 0036 1A60     		str	r2, [r3]
 580:Core/Src/main.c ****   htim2.Init.Prescaler = 7200-1;
 1595              		.loc 1 580 24
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 39


 1596 0038 334B     		ldr	r3, .L72
 1597 003a 41F61F42 		movw	r2, #7199
 1598 003e 5A60     		str	r2, [r3, #4]
 581:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1599              		.loc 1 581 26
 1600 0040 314B     		ldr	r3, .L72
 1601 0042 0022     		movs	r2, #0
 1602 0044 9A60     		str	r2, [r3, #8]
 582:Core/Src/main.c ****   htim2.Init.Period = 10000;
 1603              		.loc 1 582 21
 1604 0046 304B     		ldr	r3, .L72
 1605 0048 42F21072 		movw	r2, #10000
 1606 004c DA60     		str	r2, [r3, #12]
 583:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1607              		.loc 1 583 28
 1608 004e 2E4B     		ldr	r3, .L72
 1609 0050 0022     		movs	r2, #0
 1610 0052 1A61     		str	r2, [r3, #16]
 584:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1611              		.loc 1 584 32
 1612 0054 2C4B     		ldr	r3, .L72
 1613 0056 0022     		movs	r2, #0
 1614 0058 9A61     		str	r2, [r3, #24]
 585:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1615              		.loc 1 585 7
 1616 005a 2B48     		ldr	r0, .L72
 1617 005c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1618 0060 0346     		mov	r3, r0
 1619              		.loc 1 585 6
 1620 0062 002B     		cmp	r3, #0
 1621 0064 01D0     		beq	.L66
 586:Core/Src/main.c ****   {
 587:Core/Src/main.c ****     Error_Handler();
 1622              		.loc 1 587 5
 1623 0066 FFF7FEFF 		bl	Error_Handler
 1624              	.L66:
 588:Core/Src/main.c ****   }
 589:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1625              		.loc 1 589 34
 1626 006a 4FF48053 		mov	r3, #4096
 1627 006e BB62     		str	r3, [r7, #40]
 590:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1628              		.loc 1 590 7
 1629 0070 07F12803 		add	r3, r7, #40
 1630 0074 1946     		mov	r1, r3
 1631 0076 2448     		ldr	r0, .L72
 1632 0078 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1633 007c 0346     		mov	r3, r0
 1634              		.loc 1 590 6
 1635 007e 002B     		cmp	r3, #0
 1636 0080 01D0     		beq	.L67
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****     Error_Handler();
 1637              		.loc 1 592 5
 1638 0082 FFF7FEFF 		bl	Error_Handler
 1639              	.L67:
 593:Core/Src/main.c ****   }
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 40


 594:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1640              		.loc 1 594 7
 1641 0086 2048     		ldr	r0, .L72
 1642 0088 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1643 008c 0346     		mov	r3, r0
 1644              		.loc 1 594 6
 1645 008e 002B     		cmp	r3, #0
 1646 0090 01D0     		beq	.L68
 595:Core/Src/main.c ****   {
 596:Core/Src/main.c ****     Error_Handler();
 1647              		.loc 1 596 5
 1648 0092 FFF7FEFF 		bl	Error_Handler
 1649              	.L68:
 597:Core/Src/main.c ****   }
 598:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1650              		.loc 1 598 37
 1651 0096 0023     		movs	r3, #0
 1652 0098 3B62     		str	r3, [r7, #32]
 599:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1653              		.loc 1 599 33
 1654 009a 0023     		movs	r3, #0
 1655 009c 7B62     		str	r3, [r7, #36]
 600:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1656              		.loc 1 600 7
 1657 009e 07F12003 		add	r3, r7, #32
 1658 00a2 1946     		mov	r1, r3
 1659 00a4 1848     		ldr	r0, .L72
 1660 00a6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1661 00aa 0346     		mov	r3, r0
 1662              		.loc 1 600 6
 1663 00ac 002B     		cmp	r3, #0
 1664 00ae 01D0     		beq	.L69
 601:Core/Src/main.c ****   {
 602:Core/Src/main.c ****     Error_Handler();
 1665              		.loc 1 602 5
 1666 00b0 FFF7FEFF 		bl	Error_Handler
 1667              	.L69:
 603:Core/Src/main.c ****   }
 604:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1668              		.loc 1 604 20
 1669 00b4 6023     		movs	r3, #96
 1670 00b6 7B60     		str	r3, [r7, #4]
 605:Core/Src/main.c ****   sConfigOC.Pulse = 5000;
 1671              		.loc 1 605 19
 1672 00b8 41F28833 		movw	r3, #5000
 1673 00bc BB60     		str	r3, [r7, #8]
 606:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1674              		.loc 1 606 24
 1675 00be 0023     		movs	r3, #0
 1676 00c0 FB60     		str	r3, [r7, #12]
 607:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1677              		.loc 1 607 24
 1678 00c2 0023     		movs	r3, #0
 1679 00c4 7B61     		str	r3, [r7, #20]
 608:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1680              		.loc 1 608 7
 1681 00c6 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 41


 1682 00c8 0422     		movs	r2, #4
 1683 00ca 1946     		mov	r1, r3
 1684 00cc 0E48     		ldr	r0, .L72
 1685 00ce FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1686 00d2 0346     		mov	r3, r0
 1687              		.loc 1 608 6
 1688 00d4 002B     		cmp	r3, #0
 1689 00d6 01D0     		beq	.L70
 609:Core/Src/main.c ****   {
 610:Core/Src/main.c ****     Error_Handler();
 1690              		.loc 1 610 5
 1691 00d8 FFF7FEFF 		bl	Error_Handler
 1692              	.L70:
 611:Core/Src/main.c ****   }
 612:Core/Src/main.c ****   sConfigOC.Pulse = 10000;
 1693              		.loc 1 612 19
 1694 00dc 42F21073 		movw	r3, #10000
 1695 00e0 BB60     		str	r3, [r7, #8]
 613:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1696              		.loc 1 613 7
 1697 00e2 3B1D     		adds	r3, r7, #4
 1698 00e4 0822     		movs	r2, #8
 1699 00e6 1946     		mov	r1, r3
 1700 00e8 0748     		ldr	r0, .L72
 1701 00ea FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1702 00ee 0346     		mov	r3, r0
 1703              		.loc 1 613 6
 1704 00f0 002B     		cmp	r3, #0
 1705 00f2 01D0     		beq	.L71
 614:Core/Src/main.c ****   {
 615:Core/Src/main.c ****     Error_Handler();
 1706              		.loc 1 615 5
 1707 00f4 FFF7FEFF 		bl	Error_Handler
 1708              	.L71:
 616:Core/Src/main.c ****   }
 617:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 620:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 1709              		.loc 1 620 3
 1710 00f8 0348     		ldr	r0, .L72
 1711 00fa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** }
 1712              		.loc 1 622 1
 1713 00fe 00BF     		nop
 1714 0100 3837     		adds	r7, r7, #56
 1715              	.LCFI32:
 1716              		.cfi_def_cfa_offset 8
 1717 0102 BD46     		mov	sp, r7
 1718              	.LCFI33:
 1719              		.cfi_def_cfa_register 13
 1720              		@ sp needed
 1721 0104 80BD     		pop	{r7, pc}
 1722              	.L73:
 1723 0106 00BF     		.align	2
 1724              	.L72:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 42


 1725 0108 00000000 		.word	htim2
 1726              		.cfi_endproc
 1727              	.LFE73:
 1729              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1730              		.align	1
 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1734              		.fpu softvfp
 1736              	MX_TIM4_Init:
 1737              	.LFB74:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** /**
 625:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 626:Core/Src/main.c ****   * @param None
 627:Core/Src/main.c ****   * @retval None
 628:Core/Src/main.c ****   */
 629:Core/Src/main.c **** static void MX_TIM4_Init(void)
 630:Core/Src/main.c **** {
 1738              		.loc 1 630 1
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 24
 1741              		@ frame_needed = 1, uses_anonymous_args = 0
 1742 0000 80B5     		push	{r7, lr}
 1743              	.LCFI34:
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 7, -8
 1746              		.cfi_offset 14, -4
 1747 0002 86B0     		sub	sp, sp, #24
 1748              	.LCFI35:
 1749              		.cfi_def_cfa_offset 32
 1750 0004 00AF     		add	r7, sp, #0
 1751              	.LCFI36:
 1752              		.cfi_def_cfa_register 7
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1753              		.loc 1 636 26
 1754 0006 07F10803 		add	r3, r7, #8
 1755 000a 0022     		movs	r2, #0
 1756 000c 1A60     		str	r2, [r3]
 1757 000e 5A60     		str	r2, [r3, #4]
 1758 0010 9A60     		str	r2, [r3, #8]
 1759 0012 DA60     		str	r2, [r3, #12]
 637:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1760              		.loc 1 637 27
 1761 0014 3B46     		mov	r3, r7
 1762 0016 0022     		movs	r2, #0
 1763 0018 1A60     		str	r2, [r3]
 1764 001a 5A60     		str	r2, [r3, #4]
 638:Core/Src/main.c **** 
 639:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 640:Core/Src/main.c **** 
 641:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 43


 642:Core/Src/main.c ****   htim4.Instance = TIM4;
 1765              		.loc 1 642 18
 1766 001c 2C4B     		ldr	r3, .L78+8
 1767 001e 2D4A     		ldr	r2, .L78+12
 1768 0020 1A60     		str	r2, [r3]
 643:Core/Src/main.c ****   htim4.Init.Prescaler = 7200-1;
 1769              		.loc 1 643 24
 1770 0022 2B4B     		ldr	r3, .L78+8
 1771 0024 41F61F42 		movw	r2, #7199
 1772 0028 5A60     		str	r2, [r3, #4]
 644:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1773              		.loc 1 644 26
 1774 002a 294B     		ldr	r3, .L78+8
 1775 002c 0022     		movs	r2, #0
 1776 002e 9A60     		str	r2, [r3, #8]
 645:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1777              		.loc 1 645 21
 1778 0030 274B     		ldr	r3, .L78+8
 1779 0032 42F21072 		movw	r2, #10000
 1780 0036 DA60     		str	r2, [r3, #12]
 646:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1781              		.loc 1 646 28
 1782 0038 254B     		ldr	r3, .L78+8
 1783 003a 0022     		movs	r2, #0
 1784 003c 1A61     		str	r2, [r3, #16]
 647:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1785              		.loc 1 647 32
 1786 003e 244B     		ldr	r3, .L78+8
 1787 0040 0022     		movs	r2, #0
 1788 0042 9A61     		str	r2, [r3, #24]
 648:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1789              		.loc 1 648 7
 1790 0044 2248     		ldr	r0, .L78+8
 1791 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1792 004a 0346     		mov	r3, r0
 1793              		.loc 1 648 6
 1794 004c 002B     		cmp	r3, #0
 1795 004e 01D0     		beq	.L75
 649:Core/Src/main.c ****   {
 650:Core/Src/main.c ****     Error_Handler();
 1796              		.loc 1 650 5
 1797 0050 FFF7FEFF 		bl	Error_Handler
 1798              	.L75:
 651:Core/Src/main.c ****   }
 652:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1799              		.loc 1 652 34
 1800 0054 4FF48053 		mov	r3, #4096
 1801 0058 BB60     		str	r3, [r7, #8]
 653:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1802              		.loc 1 653 7
 1803 005a 07F10803 		add	r3, r7, #8
 1804 005e 1946     		mov	r1, r3
 1805 0060 1B48     		ldr	r0, .L78+8
 1806 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1807 0066 0346     		mov	r3, r0
 1808              		.loc 1 653 6
 1809 0068 002B     		cmp	r3, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 44


 1810 006a 01D0     		beq	.L76
 654:Core/Src/main.c ****   {
 655:Core/Src/main.c ****     Error_Handler();
 1811              		.loc 1 655 5
 1812 006c FFF7FEFF 		bl	Error_Handler
 1813              	.L76:
 656:Core/Src/main.c ****   }
 657:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1814              		.loc 1 657 37
 1815 0070 0023     		movs	r3, #0
 1816 0072 3B60     		str	r3, [r7]
 658:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1817              		.loc 1 658 33
 1818 0074 0023     		movs	r3, #0
 1819 0076 7B60     		str	r3, [r7, #4]
 659:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1820              		.loc 1 659 7
 1821 0078 3B46     		mov	r3, r7
 1822 007a 1946     		mov	r1, r3
 1823 007c 1448     		ldr	r0, .L78+8
 1824 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1825 0082 0346     		mov	r3, r0
 1826              		.loc 1 659 6
 1827 0084 002B     		cmp	r3, #0
 1828 0086 01D0     		beq	.L77
 660:Core/Src/main.c ****   {
 661:Core/Src/main.c ****     Error_Handler();
 1829              		.loc 1 661 5
 1830 0088 FFF7FEFF 		bl	Error_Handler
 1831              	.L77:
 662:Core/Src/main.c ****   }
 663:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 664:Core/Src/main.c ****   tim4ms = (htim4.Init.Prescaler+1)*htim4.Init.Period/72000000.0;
 1832              		.loc 1 664 23
 1833 008c 104B     		ldr	r3, .L78+8
 1834 008e 5B68     		ldr	r3, [r3, #4]
 1835              		.loc 1 664 33
 1836 0090 0133     		adds	r3, r3, #1
 1837              		.loc 1 664 47
 1838 0092 0F4A     		ldr	r2, .L78+8
 1839 0094 D268     		ldr	r2, [r2, #12]
 1840              		.loc 1 664 36
 1841 0096 02FB03F3 		mul	r3, r2, r3
 1842              		.loc 1 664 54
 1843 009a 1846     		mov	r0, r3
 1844 009c FFF7FEFF 		bl	__aeabi_ui2d
 1845 00a0 09A3     		adr	r3, .L78
 1846 00a2 D3E90023 		ldrd	r2, [r3]
 1847 00a6 FFF7FEFF 		bl	__aeabi_ddiv
 1848 00aa 0246     		mov	r2, r0
 1849 00ac 0B46     		mov	r3, r1
 1850 00ae 1046     		mov	r0, r2
 1851 00b0 1946     		mov	r1, r3
 1852 00b2 FFF7FEFF 		bl	__aeabi_d2f
 1853 00b6 0346     		mov	r3, r0
 1854              		.loc 1 664 10
 1855 00b8 074A     		ldr	r2, .L78+16
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 45


 1856 00ba 1360     		str	r3, [r2]	@ float
 665:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** }
 1857              		.loc 1 667 1
 1858 00bc 00BF     		nop
 1859 00be 1837     		adds	r7, r7, #24
 1860              	.LCFI37:
 1861              		.cfi_def_cfa_offset 8
 1862 00c0 BD46     		mov	sp, r7
 1863              	.LCFI38:
 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 00c2 80BD     		pop	{r7, pc}
 1867              	.L79:
 1868 00c4 AFF30080 		.align	3
 1869              	.L78:
 1870 00c8 00000000 		.word	0
 1871 00cc 882A9141 		.word	1100032648
 1872 00d0 00000000 		.word	htim4
 1873 00d4 00080040 		.word	1073743872
 1874 00d8 00000000 		.word	tim4ms
 1875              		.cfi_endproc
 1876              	.LFE74:
 1878              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1879              		.align	1
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu softvfp
 1885              	MX_GPIO_Init:
 1886              	.LFB75:
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** /**
 670:Core/Src/main.c ****   * @brief GPIO Initialization Function
 671:Core/Src/main.c ****   * @param None
 672:Core/Src/main.c ****   * @retval None
 673:Core/Src/main.c ****   */
 674:Core/Src/main.c **** static void MX_GPIO_Init(void)
 675:Core/Src/main.c **** {
 1887              		.loc 1 675 1
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 32
 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891 0000 80B5     		push	{r7, lr}
 1892              	.LCFI39:
 1893              		.cfi_def_cfa_offset 8
 1894              		.cfi_offset 7, -8
 1895              		.cfi_offset 14, -4
 1896 0002 88B0     		sub	sp, sp, #32
 1897              	.LCFI40:
 1898              		.cfi_def_cfa_offset 40
 1899 0004 00AF     		add	r7, sp, #0
 1900              	.LCFI41:
 1901              		.cfi_def_cfa_register 7
 676:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1902              		.loc 1 676 20
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 46


 1903 0006 07F11003 		add	r3, r7, #16
 1904 000a 0022     		movs	r2, #0
 1905 000c 1A60     		str	r2, [r3]
 1906 000e 5A60     		str	r2, [r3, #4]
 1907 0010 9A60     		str	r2, [r3, #8]
 1908 0012 DA60     		str	r2, [r3, #12]
 1909              	.LBB4:
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 679:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1910              		.loc 1 679 3
 1911 0014 444B     		ldr	r3, .L81
 1912 0016 9B69     		ldr	r3, [r3, #24]
 1913 0018 434A     		ldr	r2, .L81
 1914 001a 43F01003 		orr	r3, r3, #16
 1915 001e 9361     		str	r3, [r2, #24]
 1916 0020 414B     		ldr	r3, .L81
 1917 0022 9B69     		ldr	r3, [r3, #24]
 1918 0024 03F01003 		and	r3, r3, #16
 1919 0028 FB60     		str	r3, [r7, #12]
 1920 002a FB68     		ldr	r3, [r7, #12]
 1921              	.LBE4:
 1922              	.LBB5:
 680:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1923              		.loc 1 680 3
 1924 002c 3E4B     		ldr	r3, .L81
 1925 002e 9B69     		ldr	r3, [r3, #24]
 1926 0030 3D4A     		ldr	r2, .L81
 1927 0032 43F02003 		orr	r3, r3, #32
 1928 0036 9361     		str	r3, [r2, #24]
 1929 0038 3B4B     		ldr	r3, .L81
 1930 003a 9B69     		ldr	r3, [r3, #24]
 1931 003c 03F02003 		and	r3, r3, #32
 1932 0040 BB60     		str	r3, [r7, #8]
 1933 0042 BB68     		ldr	r3, [r7, #8]
 1934              	.LBE5:
 1935              	.LBB6:
 681:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1936              		.loc 1 681 3
 1937 0044 384B     		ldr	r3, .L81
 1938 0046 9B69     		ldr	r3, [r3, #24]
 1939 0048 374A     		ldr	r2, .L81
 1940 004a 43F00403 		orr	r3, r3, #4
 1941 004e 9361     		str	r3, [r2, #24]
 1942 0050 354B     		ldr	r3, .L81
 1943 0052 9B69     		ldr	r3, [r3, #24]
 1944 0054 03F00403 		and	r3, r3, #4
 1945 0058 7B60     		str	r3, [r7, #4]
 1946 005a 7B68     		ldr	r3, [r7, #4]
 1947              	.LBE6:
 1948              	.LBB7:
 682:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1949              		.loc 1 682 3
 1950 005c 324B     		ldr	r3, .L81
 1951 005e 9B69     		ldr	r3, [r3, #24]
 1952 0060 314A     		ldr	r2, .L81
 1953 0062 43F00803 		orr	r3, r3, #8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 47


 1954 0066 9361     		str	r3, [r2, #24]
 1955 0068 2F4B     		ldr	r3, .L81
 1956 006a 9B69     		ldr	r3, [r3, #24]
 1957 006c 03F00803 		and	r3, r3, #8
 1958 0070 3B60     		str	r3, [r7]
 1959 0072 3B68     		ldr	r3, [r7]
 1960              	.LBE7:
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 685:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1961              		.loc 1 685 3
 1962 0074 0022     		movs	r2, #0
 1963 0076 4FF40051 		mov	r1, #8192
 1964 007a 2C48     		ldr	r0, .L81+4
 1965 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 688:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8|GPIO_PIN_10, GPIO_PIN_RESET);
 1966              		.loc 1 688 3
 1967 0080 0022     		movs	r2, #0
 1968 0082 4FF4A061 		mov	r1, #1280
 1969 0086 2A48     		ldr	r0, .L81+8
 1970 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 691:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
 1971              		.loc 1 691 3
 1972 008c 0022     		movs	r2, #0
 1973 008e 1821     		movs	r1, #24
 1974 0090 2848     		ldr	r0, .L81+12
 1975 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 694:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 1976              		.loc 1 694 23
 1977 0096 4FF40053 		mov	r3, #8192
 1978 009a 3B61     		str	r3, [r7, #16]
 695:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1979              		.loc 1 695 24
 1980 009c 0123     		movs	r3, #1
 1981 009e 7B61     		str	r3, [r7, #20]
 696:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1982              		.loc 1 696 24
 1983 00a0 0023     		movs	r3, #0
 1984 00a2 BB61     		str	r3, [r7, #24]
 697:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1985              		.loc 1 697 25
 1986 00a4 0223     		movs	r3, #2
 1987 00a6 FB61     		str	r3, [r7, #28]
 698:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1988              		.loc 1 698 3
 1989 00a8 07F11003 		add	r3, r7, #16
 1990 00ac 1946     		mov	r1, r3
 1991 00ae 1F48     		ldr	r0, .L81+4
 1992 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 48


 701:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 1993              		.loc 1 701 23
 1994 00b4 C023     		movs	r3, #192
 1995 00b6 3B61     		str	r3, [r7, #16]
 702:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1996              		.loc 1 702 24
 1997 00b8 0023     		movs	r3, #0
 1998 00ba 7B61     		str	r3, [r7, #20]
 703:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1999              		.loc 1 703 24
 2000 00bc 0123     		movs	r3, #1
 2001 00be BB61     		str	r3, [r7, #24]
 704:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2002              		.loc 1 704 3
 2003 00c0 07F11003 		add	r3, r7, #16
 2004 00c4 1946     		mov	r1, r3
 2005 00c6 1A48     		ldr	r0, .L81+8
 2006 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /*Configure GPIO pin : PB10 */
 707:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 2007              		.loc 1 707 23
 2008 00cc 4FF48063 		mov	r3, #1024
 2009 00d0 3B61     		str	r3, [r7, #16]
 708:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2010              		.loc 1 708 24
 2011 00d2 0023     		movs	r3, #0
 2012 00d4 7B61     		str	r3, [r7, #20]
 709:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 2013              		.loc 1 709 24
 2014 00d6 0223     		movs	r3, #2
 2015 00d8 BB61     		str	r3, [r7, #24]
 710:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2016              		.loc 1 710 3
 2017 00da 07F11003 		add	r3, r7, #16
 2018 00de 1946     		mov	r1, r3
 2019 00e0 1448     		ldr	r0, .L81+12
 2020 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /*Configure GPIO pins : PA8 PA10 */
 713:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_10;
 2021              		.loc 1 713 23
 2022 00e6 4FF4A063 		mov	r3, #1280
 2023 00ea 3B61     		str	r3, [r7, #16]
 714:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2024              		.loc 1 714 24
 2025 00ec 0123     		movs	r3, #1
 2026 00ee 7B61     		str	r3, [r7, #20]
 715:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2027              		.loc 1 715 24
 2028 00f0 0023     		movs	r3, #0
 2029 00f2 BB61     		str	r3, [r7, #24]
 716:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2030              		.loc 1 716 25
 2031 00f4 0223     		movs	r3, #2
 2032 00f6 FB61     		str	r3, [r7, #28]
 717:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 49


 2033              		.loc 1 717 3
 2034 00f8 07F11003 		add	r3, r7, #16
 2035 00fc 1946     		mov	r1, r3
 2036 00fe 0C48     		ldr	r0, .L81+8
 2037 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 */
 720:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 2038              		.loc 1 720 23
 2039 0104 1823     		movs	r3, #24
 2040 0106 3B61     		str	r3, [r7, #16]
 721:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2041              		.loc 1 721 24
 2042 0108 0123     		movs	r3, #1
 2043 010a 7B61     		str	r3, [r7, #20]
 722:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2044              		.loc 1 722 24
 2045 010c 0023     		movs	r3, #0
 2046 010e BB61     		str	r3, [r7, #24]
 723:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2047              		.loc 1 723 25
 2048 0110 0223     		movs	r3, #2
 2049 0112 FB61     		str	r3, [r7, #28]
 724:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2050              		.loc 1 724 3
 2051 0114 07F11003 		add	r3, r7, #16
 2052 0118 1946     		mov	r1, r3
 2053 011a 0648     		ldr	r0, .L81+12
 2054 011c FFF7FEFF 		bl	HAL_GPIO_Init
 725:Core/Src/main.c **** 
 726:Core/Src/main.c **** }
 2055              		.loc 1 726 1
 2056 0120 00BF     		nop
 2057 0122 2037     		adds	r7, r7, #32
 2058              	.LCFI42:
 2059              		.cfi_def_cfa_offset 8
 2060 0124 BD46     		mov	sp, r7
 2061              	.LCFI43:
 2062              		.cfi_def_cfa_register 13
 2063              		@ sp needed
 2064 0126 80BD     		pop	{r7, pc}
 2065              	.L82:
 2066              		.align	2
 2067              	.L81:
 2068 0128 00100240 		.word	1073876992
 2069 012c 00100140 		.word	1073811456
 2070 0130 00080140 		.word	1073809408
 2071 0134 000C0140 		.word	1073810432
 2072              		.cfi_endproc
 2073              	.LFE75:
 2075              		.section	.text.Error_Handler,"ax",%progbits
 2076              		.align	1
 2077              		.global	Error_Handler
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu softvfp
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 50


 2083              	Error_Handler:
 2084              	.LFB76:
 727:Core/Src/main.c **** 
 728:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 729:Core/Src/main.c **** 
 730:Core/Src/main.c **** /* USER CODE END 4 */
 731:Core/Src/main.c **** 
 732:Core/Src/main.c **** /**
 733:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 734:Core/Src/main.c ****   * @retval None
 735:Core/Src/main.c ****   */
 736:Core/Src/main.c **** void Error_Handler(void)
 737:Core/Src/main.c **** {
 2085              		.loc 1 737 1
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 1, uses_anonymous_args = 0
 2089              		@ link register save eliminated.
 2090 0000 80B4     		push	{r7}
 2091              	.LCFI44:
 2092              		.cfi_def_cfa_offset 4
 2093              		.cfi_offset 7, -4
 2094 0002 00AF     		add	r7, sp, #0
 2095              	.LCFI45:
 2096              		.cfi_def_cfa_register 7
 2097              	.LBB8:
 2098              	.LBB9:
 2099              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 51


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 52


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2100              		.loc 2 142 3
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 53


 2101              		.syntax unified
 2102              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2103 0004 72B6     		cpsid i
 2104              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2105              		.loc 2 143 1
 2106              		.thumb
 2107              		.syntax unified
 2108 0006 00BF     		nop
 2109              	.L84:
 2110              	.LBE9:
 2111              	.LBE8:
 738:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 739:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 740:Core/Src/main.c ****   __disable_irq();
 741:Core/Src/main.c ****   while (1)
 2112              		.loc 1 741 9 discriminator 1
 2113 0008 FEE7     		b	.L84
 2114              		.cfi_endproc
 2115              	.LFE76:
 2117              		.text
 2118              	.Letext0:
 2119              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 2120              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 2121              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2122              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2123              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2124              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2125              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2126              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2127              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2128              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2129              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 2130              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2131              		.file 15 "Core/Inc/fonts.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:20     .bss.hadc1:00000000 hadc1
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:17     .bss.hadc1:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:27     .bss.hi2c1:00000000 hi2c1
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:24     .bss.hi2c1:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:34     .bss.htim2:00000000 htim2
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:31     .bss.htim2:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:41     .bss.htim4:00000000 htim4
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:38     .bss.htim4:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:48     .bss.MenuAtual:00000000 MenuAtual
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:45     .bss.MenuAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:55     .bss.counterOpcao:00000000 counterOpcao
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:52     .bss.counterOpcao:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:62     .bss.counterPrev:00000000 counterPrev
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:59     .bss.counterPrev:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:69     .bss.txtCounter:00000000 txtCounter
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:66     .bss.txtCounter:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:75     .bss.ligarMotor:00000000 ligarMotor
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:76     .bss.ligarMotor:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:81     .data.StepAlta:00000000 StepAlta
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:88     .bss.TempVolts:00000000 TempVolts
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:85     .bss.TempVolts:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:95     .bss.TempCelsius:00000000 TempCelsius
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:92     .bss.TempCelsius:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:102    .bss.setpoint:00000000 setpoint
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:99     .bss.setpoint:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:109    .bss.kp:00000000 kp
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:106    .bss.kp:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:116    .bss.ki:00000000 ki
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:113    .bss.ki:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:123    .bss.kd:00000000 kd
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:120    .bss.kd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:130    .bss.y:00000000 y
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:127    .bss.y:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:137    .bss.erroInt:00000000 erroInt
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:134    .bss.erroInt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:144    .bss.erroAnt:00000000 erroAnt
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:141    .bss.erroAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:151    .bss.Ts:00000000 Ts
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:148    .bss.Ts:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:158    .bss.yiAnt:00000000 yiAnt
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:155    .bss.yiAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:165    .bss.ydAnt:00000000 ydAnt
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:162    .bss.ydAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:172    .bss.Nd:00000000 Nd
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:169    .bss.Nd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:179    .bss.yPWM:00000000 yPWM
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:176    .bss.yPWM:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:186    .bss.tim4ms:00000000 tim4ms
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:183    .bss.tim4ms:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:202    .text.calcPid:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:210    .text.calcPid:00000000 calcPid
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:489    .text.calcPid:000001e0 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:508    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:515    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:580    .text.HAL_TIM_PeriodElapsedCallback:0000004c $d
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 55


C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:587    .rodata:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:605    .text.MenuHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:612    .text.MenuHandler:00000000 MenuHandler
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:828    .text.MenuHandler:0000017c $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:845    .text.ClickHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:852    .text.ClickHandler:00000000 ClickHandler
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:937    .text.ClickHandler:00000068 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:948    .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:955    .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1232   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1885   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1473   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1736   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1366   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1552   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1194   .text.main:00000198 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1225   .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:2083   .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1360   .text.MX_ADC1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1461   .text.MX_ADC1_Init:00000074 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1467   .text.MX_I2C1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1539   .text.MX_I2C1_Init:00000050 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1546   .text.MX_TIM2_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1725   .text.MX_TIM2_Init:00000108 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1730   .text.MX_TIM4_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1870   .text.MX_TIM4_Init:000000c8 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:1879   .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:2068   .text.MX_GPIO_Init:00000128 $d
C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s:2076   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
__aeabi_f2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fcmpeq
__aeabi_ui2f
__aeabi_fdiv
__aeabi_f2uiz
HAL_TIM_PWM_Stop_IT
HAL_TIM_PWM_Start
HAL_GPIO_WritePin
__aeabi_f2iz
__aeabi_i2f
itoa
SSD1306_GotoXY
SSD1306_Puts
SSD1306_UpdateScreen
SSD1306_Clear
Font_7x10
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Stop_IT
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccKRQ4Gv.s 			page 56


__aeabi_ui2d
__aeabi_dmul
HAL_GPIO_ReadPin
HAL_Init
SSD1306_Init
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_GPIO_Init
