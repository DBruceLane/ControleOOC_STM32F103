ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	hadc1
  16              		.section	.bss.hadc1,"aw",%nobits
  17              		.align	2
  20              	hadc1:
  21 0000 00000000 		.space	48
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.global	hi2c1
  23              		.section	.bss.hi2c1,"aw",%nobits
  24              		.align	2
  27              	hi2c1:
  28 0000 00000000 		.space	84
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.global	htim2
  30              		.section	.bss.htim2,"aw",%nobits
  31              		.align	2
  34              	htim2:
  35 0000 00000000 		.space	72
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	htim4
  37              		.section	.bss.htim4,"aw",%nobits
  38              		.align	2
  41              	htim4:
  42 0000 00000000 		.space	72
  42      00000000 
  42      00000000 
  42      00000000 
  42      00000000 
  43              		.global	MenuAtual
  44              		.section	.bss.MenuAtual,"aw",%nobits
  45              		.align	2
  48              	MenuAtual:
  49 0000 00000000 		.space	4
  50              		.global	counterOpcao
  51              		.section	.bss.counterOpcao,"aw",%nobits
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 2


  52              		.align	2
  55              	counterOpcao:
  56 0000 00000000 		.space	4
  57              		.global	counterPrev
  58              		.section	.bss.counterPrev,"aw",%nobits
  59              		.align	2
  62              	counterPrev:
  63 0000 00000000 		.space	4
  64              		.global	txtCounter
  65              		.section	.bss.txtCounter,"aw",%nobits
  66              		.align	2
  69              	txtCounter:
  70 0000 00000000 		.space	10
  70      00000000 
  70      0000
  71              		.global	ligarMotor
  72              		.section	.bss.ligarMotor,"aw",%nobits
  75              	ligarMotor:
  76 0000 00       		.space	1
  77              		.global	StepAlta
  78              		.section	.data.StepAlta,"aw"
  81              	StepAlta:
  82 0000 01       		.byte	1
  83              		.global	TempVolts
  84              		.section	.bss.TempVolts,"aw",%nobits
  85              		.align	2
  88              	TempVolts:
  89 0000 00000000 		.space	4
  90              		.global	TempCelsius
  91              		.section	.bss.TempCelsius,"aw",%nobits
  92              		.align	2
  95              	TempCelsius:
  96 0000 00000000 		.space	4
  97              		.global	TempCelsiusUser
  98              		.section	.bss.TempCelsiusUser,"aw",%nobits
  99              		.align	2
 102              	TempCelsiusUser:
 103 0000 00000000 		.space	4
 104              		.global	TempCelsiusMed
 105              		.section	.bss.TempCelsiusMed,"aw",%nobits
 106              		.align	2
 109              	TempCelsiusMed:
 110 0000 00000000 		.space	4
 111              		.global	TempSoma
 112              		.section	.bss.TempSoma,"aw",%nobits
 113              		.align	2
 116              	TempSoma:
 117 0000 00000000 		.space	4
 118              		.global	setpoint
 119              		.section	.bss.setpoint,"aw",%nobits
 120              		.align	2
 123              	setpoint:
 124 0000 00000000 		.space	4
 125              		.global	setpointUser
 126              		.section	.bss.setpointUser,"aw",%nobits
 127              		.align	2
 130              	setpointUser:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 3


 131 0000 00000000 		.space	4
 132              		.global	kp
 133              		.section	.bss.kp,"aw",%nobits
 134              		.align	2
 137              	kp:
 138 0000 00000000 		.space	4
 139              		.global	ki
 140              		.section	.bss.ki,"aw",%nobits
 141              		.align	2
 144              	ki:
 145 0000 00000000 		.space	4
 146              		.global	kd
 147              		.section	.bss.kd,"aw",%nobits
 148              		.align	2
 151              	kd:
 152 0000 00000000 		.space	4
 153              		.global	erroAtual
 154              		.section	.bss.erroAtual,"aw",%nobits
 155              		.align	2
 158              	erroAtual:
 159 0000 00000000 		.space	4
 160              		.global	erroInt
 161              		.section	.bss.erroInt,"aw",%nobits
 162              		.align	2
 165              	erroInt:
 166 0000 00000000 		.space	4
 167              		.global	erroAnt
 168              		.section	.bss.erroAnt,"aw",%nobits
 169              		.align	2
 172              	erroAnt:
 173 0000 00000000 		.space	4
 174              		.global	Ts
 175              		.section	.bss.Ts,"aw",%nobits
 176              		.align	2
 179              	Ts:
 180 0000 00000000 		.space	4
 181              		.global	yiAnt
 182              		.section	.bss.yiAnt,"aw",%nobits
 183              		.align	2
 186              	yiAnt:
 187 0000 00000000 		.space	4
 188              		.global	ydAnt
 189              		.section	.bss.ydAnt,"aw",%nobits
 190              		.align	2
 193              	ydAnt:
 194 0000 00000000 		.space	4
 195              		.global	Nd
 196              		.section	.bss.Nd,"aw",%nobits
 197              		.align	2
 200              	Nd:
 201 0000 00000000 		.space	4
 202              		.global	tim4ms
 203              		.section	.bss.tim4ms,"aw",%nobits
 204              		.align	2
 207              	tim4ms:
 208 0000 00000000 		.space	4
 209              		.global	y
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 4


 210              		.section	.bss.y,"aw",%nobits
 211              		.align	2
 214              	y:
 215 0000 00000000 		.space	4
 216              		.global	yPWM
 217              		.section	.bss.yPWM,"aw",%nobits
 218              		.align	2
 221              	yPWM:
 222 0000 00000000 		.space	4
 223              		.global	yPWMint
 224              		.section	.data.yPWMint,"aw"
 225              		.align	2
 228              	yPWMint:
 229 0000 10270000 		.word	10000
 230              		.global	yp
 231              		.section	.bss.yp,"aw",%nobits
 232              		.align	2
 235              	yp:
 236 0000 00000000 		.space	4
 237              		.global	yi
 238              		.section	.bss.yi,"aw",%nobits
 239              		.align	2
 242              	yi:
 243 0000 00000000 		.space	4
 244              		.global	yd
 245              		.section	.bss.yd,"aw",%nobits
 246              		.align	2
 249              	yd:
 250 0000 00000000 		.space	4
 251              		.global	__aeabi_f2d
 252              		.global	__aeabi_dsub
 253              		.global	__aeabi_ddiv
 254              		.global	__aeabi_d2f
 255              		.global	__aeabi_fsub
 256              		.global	__aeabi_fmul
 257              		.global	__aeabi_fadd
 258              		.global	__aeabi_dadd
 259              		.global	__aeabi_fcmpgt
 260              		.global	__aeabi_fcmplt
 261              		.global	__aeabi_fdiv
 262              		.global	__aeabi_f2uiz
 263              		.section	.text.calcPid,"ax",%progbits
 264              		.align	1
 265              		.global	calcPid
 266              		.arch armv7-m
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu softvfp
 272              	calcPid:
 273              	.LFB65:
 274              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 5


   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "ssd1306.h"
  26:Core/Src/main.c **** #include "fonts.h"
  27:Core/Src/main.c **** #include "test.h"
  28:Core/Src/main.c **** #include "stdbool.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** // Display OLED
  55:Core/Src/main.c **** uint32_t MenuAtual = 0;
  56:Core/Src/main.c **** uint32_t counterOpcao = 0;
  57:Core/Src/main.c **** uint32_t counterPrev = 0;
  58:Core/Src/main.c **** char txtCounter[10];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** // Motor
  61:Core/Src/main.c **** _Bool ligarMotor = false;
  62:Core/Src/main.c **** _Bool StepAlta = true;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 6


  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** // LM35
  65:Core/Src/main.c **** uint32_t TempVolts;
  66:Core/Src/main.c **** float TempCelsius, TempCelsiusUser;
  67:Core/Src/main.c **** float TempCelsiusMed, TempSoma = 0.0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** //PID
  70:Core/Src/main.c **** float setpoint, setpointUser, kp, ki, kd, erroAtual, erroInt, erroAnt, Ts, yiAnt, ydAnt, Nd,tim4ms,
  71:Core/Src/main.c **** uint32_t yPWMint = 10000;
  72:Core/Src/main.c **** float yp, yi, yd;
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** static void MX_GPIO_Init(void);
  78:Core/Src/main.c **** static void MX_I2C1_Init(void);
  79:Core/Src/main.c **** static void MX_TIM4_Init(void);
  80:Core/Src/main.c **** static void MX_ADC1_Init(void);
  81:Core/Src/main.c **** static void MX_TIM2_Init(void);
  82:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** void calcPid(void){
 275              		.loc 1 84 19
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 B0B5     		push	{r4, r5, r7, lr}
 280              	.LCFI0:
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 4, -16
 283              		.cfi_offset 5, -12
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 00AF     		add	r7, sp, #0
 287              	.LCFI1:
 288              		.cfi_def_cfa_register 7
  85:Core/Src/main.c ****     Ts = tim4ms;
 289              		.loc 1 85 8
 290 0004 864B     		ldr	r3, .L9+16
 291 0006 1B68     		ldr	r3, [r3]	@ float
 292 0008 864A     		ldr	r2, .L9+20
 293 000a 1360     		str	r3, [r2]	@ float
  86:Core/Src/main.c ****     TempCelsiusUser = (TempCelsiusMed-7.34)/0.269;
 294              		.loc 1 86 38
 295 000c 864B     		ldr	r3, .L9+24
 296 000e 1B68     		ldr	r3, [r3]	@ float
 297 0010 1846     		mov	r0, r3
 298 0012 FFF7FEFF 		bl	__aeabi_f2d
 299 0016 7EA3     		adr	r3, .L9
 300 0018 D3E90023 		ldrd	r2, [r3]
 301 001c FFF7FEFF 		bl	__aeabi_dsub
 302 0020 0246     		mov	r2, r0
 303 0022 0B46     		mov	r3, r1
 304 0024 1046     		mov	r0, r2
 305 0026 1946     		mov	r1, r3
 306              		.loc 1 86 44
 307 0028 7BA3     		adr	r3, .L9+8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 7


 308 002a D3E90023 		ldrd	r2, [r3]
 309 002e FFF7FEFF 		bl	__aeabi_ddiv
 310 0032 0246     		mov	r2, r0
 311 0034 0B46     		mov	r3, r1
 312 0036 1046     		mov	r0, r2
 313 0038 1946     		mov	r1, r3
 314 003a FFF7FEFF 		bl	__aeabi_d2f
 315 003e 0346     		mov	r3, r0
 316              		.loc 1 86 21
 317 0040 7A4A     		ldr	r2, .L9+28
 318 0042 1360     		str	r3, [r2]	@ float
  87:Core/Src/main.c ****     
  88:Core/Src/main.c ****     erroAtual = setpoint - TempCelsiusMed;
 319              		.loc 1 88 26
 320 0044 7A4B     		ldr	r3, .L9+32
 321 0046 1B68     		ldr	r3, [r3]	@ float
 322 0048 774A     		ldr	r2, .L9+24
 323 004a 1268     		ldr	r2, [r2]	@ float
 324 004c 1146     		mov	r1, r2
 325 004e 1846     		mov	r0, r3
 326 0050 FFF7FEFF 		bl	__aeabi_fsub
 327 0054 0346     		mov	r3, r0
 328 0056 1A46     		mov	r2, r3
 329              		.loc 1 88 15
 330 0058 764B     		ldr	r3, .L9+36
 331 005a 1A60     		str	r2, [r3]	@ float
  89:Core/Src/main.c ****     yp = kp*erroAtual;
 332              		.loc 1 89 12
 333 005c 764B     		ldr	r3, .L9+40
 334 005e 1B68     		ldr	r3, [r3]	@ float
 335 0060 744A     		ldr	r2, .L9+36
 336 0062 1268     		ldr	r2, [r2]	@ float
 337 0064 1146     		mov	r1, r2
 338 0066 1846     		mov	r0, r3
 339 0068 FFF7FEFF 		bl	__aeabi_fmul
 340 006c 0346     		mov	r3, r0
 341 006e 1A46     		mov	r2, r3
 342              		.loc 1 89 8
 343 0070 724B     		ldr	r3, .L9+44
 344 0072 1A60     		str	r2, [r3]	@ float
  90:Core/Src/main.c ****     yi = ki*Ts*(erroAtual+erroAnt)/2.0 + yiAnt;
 345              		.loc 1 90 12
 346 0074 724B     		ldr	r3, .L9+48
 347 0076 1B68     		ldr	r3, [r3]	@ float
 348 0078 6A4A     		ldr	r2, .L9+20
 349 007a 1268     		ldr	r2, [r2]	@ float
 350 007c 1146     		mov	r1, r2
 351 007e 1846     		mov	r0, r3
 352 0080 FFF7FEFF 		bl	__aeabi_fmul
 353 0084 0346     		mov	r3, r0
 354 0086 1C46     		mov	r4, r3
 355              		.loc 1 90 26
 356 0088 6A4B     		ldr	r3, .L9+36
 357 008a 1B68     		ldr	r3, [r3]	@ float
 358 008c 6D4A     		ldr	r2, .L9+52
 359 008e 1268     		ldr	r2, [r2]	@ float
 360 0090 1146     		mov	r1, r2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 8


 361 0092 1846     		mov	r0, r3
 362 0094 FFF7FEFF 		bl	__aeabi_fadd
 363 0098 0346     		mov	r3, r0
 364              		.loc 1 90 15
 365 009a 1946     		mov	r1, r3
 366 009c 2046     		mov	r0, r4
 367 009e FFF7FEFF 		bl	__aeabi_fmul
 368 00a2 0346     		mov	r3, r0
 369 00a4 1846     		mov	r0, r3
 370 00a6 FFF7FEFF 		bl	__aeabi_f2d
 371              		.loc 1 90 35
 372 00aa 4FF00002 		mov	r2, #0
 373 00ae 4FF08043 		mov	r3, #1073741824
 374 00b2 FFF7FEFF 		bl	__aeabi_ddiv
 375 00b6 0246     		mov	r2, r0
 376 00b8 0B46     		mov	r3, r1
 377 00ba 1446     		mov	r4, r2
 378 00bc 1D46     		mov	r5, r3
 379              		.loc 1 90 40
 380 00be 624B     		ldr	r3, .L9+56
 381 00c0 1B68     		ldr	r3, [r3]	@ float
 382 00c2 1846     		mov	r0, r3
 383 00c4 FFF7FEFF 		bl	__aeabi_f2d
 384 00c8 0246     		mov	r2, r0
 385 00ca 0B46     		mov	r3, r1
 386 00cc 2046     		mov	r0, r4
 387 00ce 2946     		mov	r1, r5
 388 00d0 FFF7FEFF 		bl	__aeabi_dadd
 389 00d4 0246     		mov	r2, r0
 390 00d6 0B46     		mov	r3, r1
 391 00d8 1046     		mov	r0, r2
 392 00da 1946     		mov	r1, r3
 393 00dc FFF7FEFF 		bl	__aeabi_d2f
 394 00e0 0346     		mov	r3, r0
 395              		.loc 1 90 8
 396 00e2 5A4A     		ldr	r2, .L9+60
 397 00e4 1360     		str	r3, [r2]	@ float
  91:Core/Src/main.c ****     yd = kd*Nd*(erroAtual-erroAnt) + (1-Nd*Ts)*ydAnt;
 398              		.loc 1 91 12
 399 00e6 5A4B     		ldr	r3, .L9+64
 400 00e8 1B68     		ldr	r3, [r3]	@ float
 401 00ea 5A4A     		ldr	r2, .L9+68
 402 00ec 1268     		ldr	r2, [r2]	@ float
 403 00ee 1146     		mov	r1, r2
 404 00f0 1846     		mov	r0, r3
 405 00f2 FFF7FEFF 		bl	__aeabi_fmul
 406 00f6 0346     		mov	r3, r0
 407 00f8 1C46     		mov	r4, r3
 408              		.loc 1 91 26
 409 00fa 4E4B     		ldr	r3, .L9+36
 410 00fc 1B68     		ldr	r3, [r3]	@ float
 411 00fe 514A     		ldr	r2, .L9+52
 412 0100 1268     		ldr	r2, [r2]	@ float
 413 0102 1146     		mov	r1, r2
 414 0104 1846     		mov	r0, r3
 415 0106 FFF7FEFF 		bl	__aeabi_fsub
 416 010a 0346     		mov	r3, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 9


 417              		.loc 1 91 15
 418 010c 1946     		mov	r1, r3
 419 010e 2046     		mov	r0, r4
 420 0110 FFF7FEFF 		bl	__aeabi_fmul
 421 0114 0346     		mov	r3, r0
 422 0116 1C46     		mov	r4, r3
 423              		.loc 1 91 43
 424 0118 4E4B     		ldr	r3, .L9+68
 425 011a 1B68     		ldr	r3, [r3]	@ float
 426 011c 414A     		ldr	r2, .L9+20
 427 011e 1268     		ldr	r2, [r2]	@ float
 428 0120 1146     		mov	r1, r2
 429 0122 1846     		mov	r0, r3
 430 0124 FFF7FEFF 		bl	__aeabi_fmul
 431 0128 0346     		mov	r3, r0
 432              		.loc 1 91 40
 433 012a 1946     		mov	r1, r3
 434 012c 4FF07E50 		mov	r0, #1065353216
 435 0130 FFF7FEFF 		bl	__aeabi_fsub
 436 0134 0346     		mov	r3, r0
 437 0136 1A46     		mov	r2, r3
 438              		.loc 1 91 47
 439 0138 474B     		ldr	r3, .L9+72
 440 013a 1B68     		ldr	r3, [r3]	@ float
 441 013c 1946     		mov	r1, r3
 442 013e 1046     		mov	r0, r2
 443 0140 FFF7FEFF 		bl	__aeabi_fmul
 444 0144 0346     		mov	r3, r0
 445              		.loc 1 91 36
 446 0146 1946     		mov	r1, r3
 447 0148 2046     		mov	r0, r4
 448 014a FFF7FEFF 		bl	__aeabi_fadd
 449 014e 0346     		mov	r3, r0
 450 0150 1A46     		mov	r2, r3
 451              		.loc 1 91 8
 452 0152 424B     		ldr	r3, .L9+76
 453 0154 1A60     		str	r2, [r3]	@ float
  92:Core/Src/main.c ****     y = yp+yi+yd;
 454              		.loc 1 92 11
 455 0156 394B     		ldr	r3, .L9+44
 456 0158 1B68     		ldr	r3, [r3]	@ float
 457 015a 3C4A     		ldr	r2, .L9+60
 458 015c 1268     		ldr	r2, [r2]	@ float
 459 015e 1146     		mov	r1, r2
 460 0160 1846     		mov	r0, r3
 461 0162 FFF7FEFF 		bl	__aeabi_fadd
 462 0166 0346     		mov	r3, r0
 463 0168 1A46     		mov	r2, r3
 464              		.loc 1 92 14
 465 016a 3C4B     		ldr	r3, .L9+76
 466 016c 1B68     		ldr	r3, [r3]	@ float
 467 016e 1946     		mov	r1, r3
 468 0170 1046     		mov	r0, r2
 469 0172 FFF7FEFF 		bl	__aeabi_fadd
 470 0176 0346     		mov	r3, r0
 471 0178 1A46     		mov	r2, r3
 472              		.loc 1 92 7
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 10


 473 017a 394B     		ldr	r3, .L9+80
 474 017c 1A60     		str	r2, [r3]	@ float
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     yiAnt = yi;
 475              		.loc 1 94 11
 476 017e 334B     		ldr	r3, .L9+60
 477 0180 1B68     		ldr	r3, [r3]	@ float
 478 0182 314A     		ldr	r2, .L9+56
 479 0184 1360     		str	r3, [r2]	@ float
  95:Core/Src/main.c ****     ydAnt = yd;
 480              		.loc 1 95 11
 481 0186 354B     		ldr	r3, .L9+76
 482 0188 1B68     		ldr	r3, [r3]	@ float
 483 018a 334A     		ldr	r2, .L9+72
 484 018c 1360     		str	r3, [r2]	@ float
  96:Core/Src/main.c ****     erroAnt = erroAtual;
 485              		.loc 1 96 13
 486 018e 294B     		ldr	r3, .L9+36
 487 0190 1B68     		ldr	r3, [r3]	@ float
 488 0192 2C4A     		ldr	r2, .L9+52
 489 0194 1360     		str	r3, [r2]	@ float
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     if (y>100)
 490              		.loc 1 98 10
 491 0196 324B     		ldr	r3, .L9+80
 492 0198 1B68     		ldr	r3, [r3]	@ float
 493              		.loc 1 98 8
 494 019a 3249     		ldr	r1, .L9+84
 495 019c 1846     		mov	r0, r3
 496 019e FFF7FEFF 		bl	__aeabi_fcmpgt
 497 01a2 0346     		mov	r3, r0
 498 01a4 002B     		cmp	r3, #0
 499 01a6 03D0     		beq	.L8
  99:Core/Src/main.c ****     {
 100:Core/Src/main.c ****       y = 100;
 500              		.loc 1 100 9
 501 01a8 2D4B     		ldr	r3, .L9+80
 502 01aa 2E4A     		ldr	r2, .L9+84
 503 01ac 1A60     		str	r2, [r3]	@ float
 504 01ae 0DE0     		b	.L4
 505              	.L8:
 101:Core/Src/main.c ****     }
 102:Core/Src/main.c ****     else if (y<0)
 506              		.loc 1 102 15
 507 01b0 2B4B     		ldr	r3, .L9+80
 508 01b2 1B68     		ldr	r3, [r3]	@ float
 509              		.loc 1 102 13
 510 01b4 4FF00001 		mov	r1, #0
 511 01b8 1846     		mov	r0, r3
 512 01ba FFF7FEFF 		bl	__aeabi_fcmplt
 513 01be 0346     		mov	r3, r0
 514 01c0 002B     		cmp	r3, #0
 515 01c2 03D0     		beq	.L4
 103:Core/Src/main.c ****     {
 104:Core/Src/main.c ****       y = 0;
 516              		.loc 1 104 9
 517 01c4 264B     		ldr	r3, .L9+80
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 11


 518 01c6 4FF00002 		mov	r2, #0
 519 01ca 1A60     		str	r2, [r3]	@ float
 520              	.L4:
 105:Core/Src/main.c ****     }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     yPWM = 10000*(100-y)/100;
 521              		.loc 1 107 22
 522 01cc 244B     		ldr	r3, .L9+80
 523 01ce 1B68     		ldr	r3, [r3]	@ float
 524 01d0 1946     		mov	r1, r3
 525 01d2 2448     		ldr	r0, .L9+84
 526 01d4 FFF7FEFF 		bl	__aeabi_fsub
 527 01d8 0346     		mov	r3, r0
 528              		.loc 1 107 17
 529 01da 2349     		ldr	r1, .L9+88
 530 01dc 1846     		mov	r0, r3
 531 01de FFF7FEFF 		bl	__aeabi_fmul
 532 01e2 0346     		mov	r3, r0
 533              		.loc 1 107 25
 534 01e4 1F49     		ldr	r1, .L9+84
 535 01e6 1846     		mov	r0, r3
 536 01e8 FFF7FEFF 		bl	__aeabi_fdiv
 537 01ec 0346     		mov	r3, r0
 538 01ee 1A46     		mov	r2, r3
 539              		.loc 1 107 10
 540 01f0 1E4B     		ldr	r3, .L9+92
 541 01f2 1A60     		str	r2, [r3]	@ float
 108:Core/Src/main.c ****     //yPWM = htim2.Instance->ARR*(100)/100;
 109:Core/Src/main.c ****     htim2.Instance->CCR2 = yPWM;
 542              		.loc 1 109 26
 543 01f4 1D4B     		ldr	r3, .L9+92
 544 01f6 1B68     		ldr	r3, [r3]	@ float
 545              		.loc 1 109 10
 546 01f8 1D4A     		ldr	r2, .L9+96
 547 01fa 1468     		ldr	r4, [r2]
 548              		.loc 1 109 26
 549 01fc 1846     		mov	r0, r3
 550 01fe FFF7FEFF 		bl	__aeabi_f2uiz
 551 0202 0346     		mov	r3, r0
 552 0204 A363     		str	r3, [r4, #56]
 110:Core/Src/main.c ****     
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     
 113:Core/Src/main.c **** }
 553              		.loc 1 113 1
 554 0206 00BF     		nop
 555 0208 B0BD     		pop	{r4, r5, r7, pc}
 556              	.L10:
 557 020a 00BFAFF3 		.align	3
 557      0080
 558              	.L9:
 559 0210 5C8FC2F5 		.word	-171798692
 560 0214 285C1D40 		.word	1075665960
 561 0218 9EEFA7C6 		.word	-962072674
 562 021c 4B37D13F 		.word	1070675787
 563 0220 00000000 		.word	tim4ms
 564 0224 00000000 		.word	Ts
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 12


 565 0228 00000000 		.word	TempCelsiusMed
 566 022c 00000000 		.word	TempCelsiusUser
 567 0230 00000000 		.word	setpoint
 568 0234 00000000 		.word	erroAtual
 569 0238 00000000 		.word	kp
 570 023c 00000000 		.word	yp
 571 0240 00000000 		.word	ki
 572 0244 00000000 		.word	erroAnt
 573 0248 00000000 		.word	yiAnt
 574 024c 00000000 		.word	yi
 575 0250 00000000 		.word	kd
 576 0254 00000000 		.word	Nd
 577 0258 00000000 		.word	ydAnt
 578 025c 00000000 		.word	yd
 579 0260 00000000 		.word	y
 580 0264 0000C842 		.word	1120403456
 581 0268 00401C46 		.word	1176256512
 582 026c 00000000 		.word	yPWM
 583 0270 00000000 		.word	htim2
 584              		.cfi_endproc
 585              	.LFE65:
 587              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_TIM_PeriodElapsedCallback
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu softvfp
 595              	HAL_TIM_PeriodElapsedCallback:
 596              	.LFB66:
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim) // Interrupt do passo do motor
 118:Core/Src/main.c **** {
 597              		.loc 1 118 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI2:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI3:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI4:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 119:Core/Src/main.c ****   if(StepAlta)
 613              		.loc 1 119 6
 614 0008 0D4B     		ldr	r3, .L14
 615 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 616              		.loc 1 119 5
 617 000c 002B     		cmp	r3, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 13


 618 000e 08D0     		beq	.L12
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1); // Pino Step
 619              		.loc 1 121 5
 620 0010 0122     		movs	r2, #1
 621 0012 0821     		movs	r1, #8
 622 0014 0B48     		ldr	r0, .L14+4
 623 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122:Core/Src/main.c ****     StepAlta = false;
 624              		.loc 1 122 14
 625 001a 094B     		ldr	r3, .L14
 626 001c 0022     		movs	r2, #0
 627 001e 1A70     		strb	r2, [r3]
 628 0020 07E0     		b	.L13
 629              	.L12:
 123:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   else
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0); // Pino Step
 630              		.loc 1 127 5
 631 0022 0022     		movs	r2, #0
 632 0024 0821     		movs	r1, #8
 633 0026 0748     		ldr	r0, .L14+4
 634 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128:Core/Src/main.c ****     StepAlta = true;
 635              		.loc 1 128 14
 636 002c 044B     		ldr	r3, .L14
 637 002e 0122     		movs	r2, #1
 638 0030 1A70     		strb	r2, [r3]
 639              	.L13:
 129:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   calcPid(); 
 640              		.loc 1 131 3
 641 0032 FFF7FEFF 		bl	calcPid
 132:Core/Src/main.c **** }
 642              		.loc 1 132 1
 643 0036 00BF     		nop
 644 0038 0837     		adds	r7, r7, #8
 645              	.LCFI5:
 646              		.cfi_def_cfa_offset 8
 647 003a BD46     		mov	sp, r7
 648              	.LCFI6:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 003c 80BD     		pop	{r7, pc}
 652              	.L15:
 653 003e 00BF     		.align	2
 654              	.L14:
 655 0040 00000000 		.word	StepAlta
 656 0044 000C0140 		.word	1073810432
 657              		.cfi_endproc
 658              	.LFE66:
 660              		.section	.text.fastPulse,"ax",%progbits
 661              		.align	1
 662              		.global	fastPulse
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 14


 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu softvfp
 668              	fastPulse:
 669              	.LFB67:
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** void fastPulse(void)
 135:Core/Src/main.c **** {
 670              		.loc 1 135 1
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674 0000 80B5     		push	{r7, lr}
 675              	.LCFI7:
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 00AF     		add	r7, sp, #0
 680              	.LCFI8:
 681              		.cfi_def_cfa_register 7
 136:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1); // Pino Step
 682              		.loc 1 136 3
 683 0004 0122     		movs	r2, #1
 684 0006 0821     		movs	r1, #8
 685 0008 0648     		ldr	r0, .L17
 686 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Core/Src/main.c ****   HAL_Delay(1);
 687              		.loc 1 137 3
 688 000e 0120     		movs	r0, #1
 689 0010 FFF7FEFF 		bl	HAL_Delay
 138:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0); // Pino Step
 690              		.loc 1 138 3
 691 0014 0022     		movs	r2, #0
 692 0016 0821     		movs	r1, #8
 693 0018 0248     		ldr	r0, .L17
 694 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 139:Core/Src/main.c **** }
 695              		.loc 1 139 1
 696 001e 00BF     		nop
 697 0020 80BD     		pop	{r7, pc}
 698              	.L18:
 699 0022 00BF     		.align	2
 700              	.L17:
 701 0024 000C0140 		.word	1073810432
 702              		.cfi_endproc
 703              	.LFE67:
 705              		.section	.rodata
 706              		.align	2
 707              	.LC0:
 708 0000 31204F75 		.ascii	"1 Outro Menu\000"
 708      74726F20 
 708      4D656E75 
 708      00
 709              		.global	__aeabi_f2iz
 710 000d 000000   		.align	2
 711              	.LC1:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 15


 712 0010 2C00     		.ascii	",\000"
 713              		.global	__aeabi_i2f
 714 0012 0000     		.align	2
 715              	.LC2:
 716 0014 3020566F 		.ascii	"0 Voltar\000"
 716      6C746172 
 716      00
 717 001d 000000   		.align	2
 718              	.LC3:
 719 0020 31204C69 		.ascii	"1 Ligar Motor\000"
 719      67617220 
 719      4D6F746F 
 719      7200
 720 002e 0000     		.align	2
 721              	.LC4:
 722 0030 32204465 		.ascii	"2 Desligar Motor\000"
 722      736C6967 
 722      6172204D 
 722      6F746F72 
 722      00
 723              		.section	.text.MenuHandler,"ax",%progbits
 724              		.align	1
 725              		.global	MenuHandler
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu softvfp
 731              	MenuHandler:
 732              	.LFB68:
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** void MenuHandler(void)
 142:Core/Src/main.c **** {
 733              		.loc 1 142 1
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 98B5     		push	{r3, r4, r7, lr}
 738              	.LCFI9:
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 3, -16
 741              		.cfi_offset 4, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 00AF     		add	r7, sp, #0
 745              	.LCFI10:
 746              		.cfi_def_cfa_register 7
 143:Core/Src/main.c ****   if(MenuAtual==0)
 747              		.loc 1 143 15
 748 0004 724B     		ldr	r3, .L23
 749 0006 1B68     		ldr	r3, [r3]
 750              		.loc 1 143 5
 751 0008 002B     		cmp	r3, #0
 752 000a 40F0A180 		bne	.L20
 144:Core/Src/main.c ****     {     
 145:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter     
 753              		.loc 1 145 7
 754 000e 714B     		ldr	r3, .L23+4
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 16


 755 0010 1B68     		ldr	r3, [r3]
 756 0012 0A22     		movs	r2, #10
 757 0014 7049     		ldr	r1, .L23+8
 758 0016 1846     		mov	r0, r3
 759 0018 FFF7FEFF 		bl	itoa
 146:Core/Src/main.c ****       //SSD1306_Clear();
 147:Core/Src/main.c ****       counterPrev = counterOpcao;
 760              		.loc 1 147 19
 761 001c 6D4B     		ldr	r3, .L23+4
 762 001e 1B68     		ldr	r3, [r3]
 763 0020 6E4A     		ldr	r2, .L23+12
 764 0022 1360     		str	r3, [r2]
 148:Core/Src/main.c ****       SSD1306_GotoXY(2, 2);
 765              		.loc 1 148 7
 766 0024 0221     		movs	r1, #2
 767 0026 0220     		movs	r0, #2
 768 0028 FFF7FEFF 		bl	SSD1306_GotoXY
 149:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 769              		.loc 1 149 7
 770 002c 0122     		movs	r2, #1
 771 002e 6C49     		ldr	r1, .L23+16
 772 0030 6948     		ldr	r0, .L23+8
 773 0032 FFF7FEFF 		bl	SSD1306_Puts
 150:Core/Src/main.c ****       SSD1306_GotoXY(2, 12);
 774              		.loc 1 150 7
 775 0036 0C21     		movs	r1, #12
 776 0038 0220     		movs	r0, #2
 777 003a FFF7FEFF 		bl	SSD1306_GotoXY
 151:Core/Src/main.c ****       SSD1306_Puts("1 Outro Menu", &Font_7x10, 1);
 778              		.loc 1 151 7
 779 003e 0122     		movs	r2, #1
 780 0040 6749     		ldr	r1, .L23+16
 781 0042 6848     		ldr	r0, .L23+20
 782 0044 FFF7FEFF 		bl	SSD1306_Puts
 152:Core/Src/main.c ****       SSD1306_GotoXY(2, 22);
 783              		.loc 1 152 7
 784 0048 1621     		movs	r1, #22
 785 004a 0220     		movs	r0, #2
 786 004c FFF7FEFF 		bl	SSD1306_GotoXY
 153:Core/Src/main.c ****       itoa(TempCelsius, txtCounter, 10);
 787              		.loc 1 153 7
 788 0050 654B     		ldr	r3, .L23+24
 789 0052 1B68     		ldr	r3, [r3]	@ float
 790 0054 1846     		mov	r0, r3
 791 0056 FFF7FEFF 		bl	__aeabi_f2iz
 792 005a 0346     		mov	r3, r0
 793 005c 0A22     		movs	r2, #10
 794 005e 5E49     		ldr	r1, .L23+8
 795 0060 1846     		mov	r0, r3
 796 0062 FFF7FEFF 		bl	itoa
 154:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 797              		.loc 1 154 7
 798 0066 0122     		movs	r2, #1
 799 0068 5D49     		ldr	r1, .L23+16
 800 006a 5B48     		ldr	r0, .L23+8
 801 006c FFF7FEFF 		bl	SSD1306_Puts
 155:Core/Src/main.c ****       SSD1306_GotoXY(16, 22);
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 17


 802              		.loc 1 155 7
 803 0070 1621     		movs	r1, #22
 804 0072 1020     		movs	r0, #16
 805 0074 FFF7FEFF 		bl	SSD1306_GotoXY
 156:Core/Src/main.c ****       SSD1306_Puts(",", &Font_7x10, 1);
 806              		.loc 1 156 7
 807 0078 0122     		movs	r2, #1
 808 007a 5949     		ldr	r1, .L23+16
 809 007c 5B48     		ldr	r0, .L23+28
 810 007e FFF7FEFF 		bl	SSD1306_Puts
 157:Core/Src/main.c ****       SSD1306_GotoXY(23, 22);
 811              		.loc 1 157 7
 812 0082 1621     		movs	r1, #22
 813 0084 1720     		movs	r0, #23
 814 0086 FFF7FEFF 		bl	SSD1306_GotoXY
 158:Core/Src/main.c ****       itoa(100*(TempCelsius-(int)TempCelsius), txtCounter, 10);  
 815              		.loc 1 158 28
 816 008a 574B     		ldr	r3, .L23+24
 817 008c 1C68     		ldr	r4, [r3]	@ float
 818              		.loc 1 158 29
 819 008e 564B     		ldr	r3, .L23+24
 820 0090 1B68     		ldr	r3, [r3]	@ float
 821 0092 1846     		mov	r0, r3
 822 0094 FFF7FEFF 		bl	__aeabi_f2iz
 823 0098 0346     		mov	r3, r0
 824              		.loc 1 158 28
 825 009a 1846     		mov	r0, r3
 826 009c FFF7FEFF 		bl	__aeabi_i2f
 827 00a0 0346     		mov	r3, r0
 828 00a2 1946     		mov	r1, r3
 829 00a4 2046     		mov	r0, r4
 830 00a6 FFF7FEFF 		bl	__aeabi_fsub
 831 00aa 0346     		mov	r3, r0
 832              		.loc 1 158 15
 833 00ac 5049     		ldr	r1, .L23+32
 834 00ae 1846     		mov	r0, r3
 835 00b0 FFF7FEFF 		bl	__aeabi_fmul
 836 00b4 0346     		mov	r3, r0
 837              		.loc 1 158 7
 838 00b6 1846     		mov	r0, r3
 839 00b8 FFF7FEFF 		bl	__aeabi_f2iz
 840 00bc 0346     		mov	r3, r0
 841 00be 0A22     		movs	r2, #10
 842 00c0 4549     		ldr	r1, .L23+8
 843 00c2 1846     		mov	r0, r3
 844 00c4 FFF7FEFF 		bl	itoa
 159:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 845              		.loc 1 159 7
 846 00c8 0122     		movs	r2, #1
 847 00ca 4549     		ldr	r1, .L23+16
 848 00cc 4248     		ldr	r0, .L23+8
 849 00ce FFF7FEFF 		bl	SSD1306_Puts
 160:Core/Src/main.c ****       
 161:Core/Src/main.c ****       SSD1306_GotoXY(2, 32);
 850              		.loc 1 161 7
 851 00d2 2021     		movs	r1, #32
 852 00d4 0220     		movs	r0, #2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 18


 853 00d6 FFF7FEFF 		bl	SSD1306_GotoXY
 162:Core/Src/main.c ****       itoa(yp, txtCounter, 10);
 854              		.loc 1 162 7
 855 00da 464B     		ldr	r3, .L23+36
 856 00dc 1B68     		ldr	r3, [r3]	@ float
 857 00de 1846     		mov	r0, r3
 858 00e0 FFF7FEFF 		bl	__aeabi_f2iz
 859 00e4 0346     		mov	r3, r0
 860 00e6 0A22     		movs	r2, #10
 861 00e8 3B49     		ldr	r1, .L23+8
 862 00ea 1846     		mov	r0, r3
 863 00ec FFF7FEFF 		bl	itoa
 163:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 864              		.loc 1 163 7
 865 00f0 0122     		movs	r2, #1
 866 00f2 3B49     		ldr	r1, .L23+16
 867 00f4 3848     		ldr	r0, .L23+8
 868 00f6 FFF7FEFF 		bl	SSD1306_Puts
 164:Core/Src/main.c ****       SSD1306_GotoXY(2, 42);
 869              		.loc 1 164 7
 870 00fa 2A21     		movs	r1, #42
 871 00fc 0220     		movs	r0, #2
 872 00fe FFF7FEFF 		bl	SSD1306_GotoXY
 165:Core/Src/main.c ****       itoa(yi, txtCounter, 10);
 873              		.loc 1 165 7
 874 0102 3D4B     		ldr	r3, .L23+40
 875 0104 1B68     		ldr	r3, [r3]	@ float
 876 0106 1846     		mov	r0, r3
 877 0108 FFF7FEFF 		bl	__aeabi_f2iz
 878 010c 0346     		mov	r3, r0
 879 010e 0A22     		movs	r2, #10
 880 0110 3149     		ldr	r1, .L23+8
 881 0112 1846     		mov	r0, r3
 882 0114 FFF7FEFF 		bl	itoa
 166:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 883              		.loc 1 166 7
 884 0118 0122     		movs	r2, #1
 885 011a 3149     		ldr	r1, .L23+16
 886 011c 2E48     		ldr	r0, .L23+8
 887 011e FFF7FEFF 		bl	SSD1306_Puts
 167:Core/Src/main.c ****       SSD1306_GotoXY(2, 52);
 888              		.loc 1 167 7
 889 0122 3421     		movs	r1, #52
 890 0124 0220     		movs	r0, #2
 891 0126 FFF7FEFF 		bl	SSD1306_GotoXY
 168:Core/Src/main.c ****       itoa(y, txtCounter, 10);
 892              		.loc 1 168 7
 893 012a 344B     		ldr	r3, .L23+44
 894 012c 1B68     		ldr	r3, [r3]	@ float
 895 012e 1846     		mov	r0, r3
 896 0130 FFF7FEFF 		bl	__aeabi_f2iz
 897 0134 0346     		mov	r3, r0
 898 0136 0A22     		movs	r2, #10
 899 0138 2749     		ldr	r1, .L23+8
 900 013a 1846     		mov	r0, r3
 901 013c FFF7FEFF 		bl	itoa
 169:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 19


 902              		.loc 1 169 7
 903 0140 0122     		movs	r2, #1
 904 0142 2749     		ldr	r1, .L23+16
 905 0144 2448     		ldr	r0, .L23+8
 906 0146 FFF7FEFF 		bl	SSD1306_Puts
 170:Core/Src/main.c ****              
 171:Core/Src/main.c ****       SSD1306_UpdateScreen();
 907              		.loc 1 171 7
 908 014a FFF7FEFF 		bl	SSD1306_UpdateScreen
 172:Core/Src/main.c ****       
 173:Core/Src/main.c ****     }
 174:Core/Src/main.c ****     else if (MenuAtual==1)
 175:Core/Src/main.c ****     {      
 176:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter
 177:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 178:Core/Src/main.c ****       {
 179:Core/Src/main.c ****         SSD1306_Clear();
 180:Core/Src/main.c ****         counterPrev = counterOpcao;
 181:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 182:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 183:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 184:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 185:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 186:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 187:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 188:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 189:Core/Src/main.c ****         
 190:Core/Src/main.c ****         SSD1306_UpdateScreen();
 191:Core/Src/main.c ****       }
 192:Core/Src/main.c ****     }   
 193:Core/Src/main.c **** }
 909              		.loc 1 193 1
 910 014e 3CE0     		b	.L22
 911              	.L20:
 174:Core/Src/main.c ****     {      
 912              		.loc 1 174 23
 913 0150 1F4B     		ldr	r3, .L23
 914 0152 1B68     		ldr	r3, [r3]
 174:Core/Src/main.c ****     {      
 915              		.loc 1 174 13
 916 0154 012B     		cmp	r3, #1
 917 0156 38D1     		bne	.L22
 176:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 918              		.loc 1 176 7
 919 0158 1E4B     		ldr	r3, .L23+4
 920 015a 1B68     		ldr	r3, [r3]
 921 015c 0A22     		movs	r2, #10
 922 015e 1E49     		ldr	r1, .L23+8
 923 0160 1846     		mov	r0, r3
 924 0162 FFF7FEFF 		bl	itoa
 177:Core/Src/main.c ****       {
 925              		.loc 1 177 23
 926 0166 1D4B     		ldr	r3, .L23+12
 927 0168 1A68     		ldr	r2, [r3]
 928 016a 1A4B     		ldr	r3, .L23+4
 929 016c 1B68     		ldr	r3, [r3]
 177:Core/Src/main.c ****       {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 20


 930              		.loc 1 177 10
 931 016e 9A42     		cmp	r2, r3
 932 0170 2BD0     		beq	.L22
 179:Core/Src/main.c ****         counterPrev = counterOpcao;
 933              		.loc 1 179 9
 934 0172 FFF7FEFF 		bl	SSD1306_Clear
 180:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 935              		.loc 1 180 21
 936 0176 174B     		ldr	r3, .L23+4
 937 0178 1B68     		ldr	r3, [r3]
 938 017a 184A     		ldr	r2, .L23+12
 939 017c 1360     		str	r3, [r2]
 181:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 940              		.loc 1 181 9
 941 017e 0221     		movs	r1, #2
 942 0180 0220     		movs	r0, #2
 943 0182 FFF7FEFF 		bl	SSD1306_GotoXY
 182:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 944              		.loc 1 182 9
 945 0186 0122     		movs	r2, #1
 946 0188 1549     		ldr	r1, .L23+16
 947 018a 1348     		ldr	r0, .L23+8
 948 018c FFF7FEFF 		bl	SSD1306_Puts
 183:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 949              		.loc 1 183 9
 950 0190 0C21     		movs	r1, #12
 951 0192 0220     		movs	r0, #2
 952 0194 FFF7FEFF 		bl	SSD1306_GotoXY
 184:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 953              		.loc 1 184 9
 954 0198 0122     		movs	r2, #1
 955 019a 1149     		ldr	r1, .L23+16
 956 019c 1848     		ldr	r0, .L23+48
 957 019e FFF7FEFF 		bl	SSD1306_Puts
 185:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 958              		.loc 1 185 9
 959 01a2 1621     		movs	r1, #22
 960 01a4 0220     		movs	r0, #2
 961 01a6 FFF7FEFF 		bl	SSD1306_GotoXY
 186:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 962              		.loc 1 186 9
 963 01aa 0122     		movs	r2, #1
 964 01ac 0C49     		ldr	r1, .L23+16
 965 01ae 1548     		ldr	r0, .L23+52
 966 01b0 FFF7FEFF 		bl	SSD1306_Puts
 187:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 967              		.loc 1 187 9
 968 01b4 2021     		movs	r1, #32
 969 01b6 0220     		movs	r0, #2
 970 01b8 FFF7FEFF 		bl	SSD1306_GotoXY
 188:Core/Src/main.c ****         
 971              		.loc 1 188 9
 972 01bc 0122     		movs	r2, #1
 973 01be 0849     		ldr	r1, .L23+16
 974 01c0 1148     		ldr	r0, .L23+56
 975 01c2 FFF7FEFF 		bl	SSD1306_Puts
 190:Core/Src/main.c ****       }
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 21


 976              		.loc 1 190 9
 977 01c6 FFF7FEFF 		bl	SSD1306_UpdateScreen
 978              	.L22:
 979              		.loc 1 193 1
 980 01ca 00BF     		nop
 981 01cc 98BD     		pop	{r3, r4, r7, pc}
 982              	.L24:
 983 01ce 00BF     		.align	2
 984              	.L23:
 985 01d0 00000000 		.word	MenuAtual
 986 01d4 00000000 		.word	counterOpcao
 987 01d8 00000000 		.word	txtCounter
 988 01dc 00000000 		.word	counterPrev
 989 01e0 00000000 		.word	Font_7x10
 990 01e4 00000000 		.word	.LC0
 991 01e8 00000000 		.word	TempCelsius
 992 01ec 10000000 		.word	.LC1
 993 01f0 0000C842 		.word	1120403456
 994 01f4 00000000 		.word	yp
 995 01f8 00000000 		.word	yi
 996 01fc 00000000 		.word	y
 997 0200 14000000 		.word	.LC2
 998 0204 20000000 		.word	.LC3
 999 0208 30000000 		.word	.LC4
 1000              		.cfi_endproc
 1001              	.LFE68:
 1003              		.section	.text.ClickHandler,"ax",%progbits
 1004              		.align	1
 1005              		.global	ClickHandler
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu softvfp
 1011              	ClickHandler:
 1012              	.LFB69:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** void ClickHandler(void)
 196:Core/Src/main.c **** {
 1013              		.loc 1 196 1
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017 0000 80B5     		push	{r7, lr}
 1018              	.LCFI11:
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 00AF     		add	r7, sp, #0
 1023              	.LCFI12:
 1024              		.cfi_def_cfa_register 7
 197:Core/Src/main.c ****   //SSD1306_Clear();
 198:Core/Src/main.c ****   if(MenuAtual == 0)
 1025              		.loc 1 198 16
 1026 0004 184B     		ldr	r3, .L30
 1027 0006 1B68     		ldr	r3, [r3]
 1028              		.loc 1 198 5
 1029 0008 002B     		cmp	r3, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 22


 1030 000a 06D1     		bne	.L26
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     if(counterOpcao == 1)
 1031              		.loc 1 200 21
 1032 000c 174B     		ldr	r3, .L30+4
 1033 000e 1B68     		ldr	r3, [r3]
 1034              		.loc 1 200 7
 1035 0010 012B     		cmp	r3, #1
 1036 0012 02D1     		bne	.L26
 201:Core/Src/main.c ****     {
 202:Core/Src/main.c ****       MenuAtual = 1;
 1037              		.loc 1 202 17
 1038 0014 144B     		ldr	r3, .L30
 1039 0016 0122     		movs	r2, #1
 1040 0018 1A60     		str	r2, [r3]
 1041              	.L26:
 203:Core/Src/main.c ****     }
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c ****   if(MenuAtual == 1)
 1042              		.loc 1 205 16
 1043 001a 134B     		ldr	r3, .L30
 1044 001c 1B68     		ldr	r3, [r3]
 1045              		.loc 1 205 5
 1046 001e 012B     		cmp	r3, #1
 1047 0020 1CD1     		bne	.L27
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     if(counterOpcao == 1) //Ligar Interrupt
 1048              		.loc 1 207 21
 1049 0022 124B     		ldr	r3, .L30+4
 1050 0024 1B68     		ldr	r3, [r3]
 1051              		.loc 1 207 7
 1052 0026 012B     		cmp	r3, #1
 1053 0028 03D1     		bne	.L28
 208:Core/Src/main.c ****     {
 209:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim4);
 1054              		.loc 1 209 7
 1055 002a 1148     		ldr	r0, .L30+8
 1056 002c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1057 0030 14E0     		b	.L27
 1058              	.L28:
 210:Core/Src/main.c ****     }
 211:Core/Src/main.c ****     else if (counterOpcao == 2) // Desligar Interrupt
 1059              		.loc 1 211 27
 1060 0032 0E4B     		ldr	r3, .L30+4
 1061 0034 1B68     		ldr	r3, [r3]
 1062              		.loc 1 211 13
 1063 0036 022B     		cmp	r3, #2
 1064 0038 09D1     		bne	.L29
 212:Core/Src/main.c ****     {
 213:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 1065              		.loc 1 213 7
 1066 003a 0D48     		ldr	r0, .L30+8
 1067 003c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 214:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 1068              		.loc 1 214 7
 1069 0040 0022     		movs	r2, #0
 1070 0042 4FF48071 		mov	r1, #256
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 23


 1071 0046 0B48     		ldr	r0, .L30+12
 1072 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1073 004c 06E0     		b	.L27
 1074              	.L29:
 215:Core/Src/main.c ****     }
 216:Core/Src/main.c ****     else if(counterOpcao == 0)
 1075              		.loc 1 216 26
 1076 004e 074B     		ldr	r3, .L30+4
 1077 0050 1B68     		ldr	r3, [r3]
 1078              		.loc 1 216 12
 1079 0052 002B     		cmp	r3, #0
 1080 0054 02D1     		bne	.L27
 217:Core/Src/main.c ****     {
 218:Core/Src/main.c ****       MenuAtual = 0;
 1081              		.loc 1 218 17
 1082 0056 044B     		ldr	r3, .L30
 1083 0058 0022     		movs	r2, #0
 1084 005a 1A60     		str	r2, [r3]
 1085              	.L27:
 219:Core/Src/main.c ****     }
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   counterPrev = 99; // Forca a atualizar a tela 
 1086              		.loc 1 221 15
 1087 005c 064B     		ldr	r3, .L30+16
 1088 005e 6322     		movs	r2, #99
 1089 0060 1A60     		str	r2, [r3]
 222:Core/Src/main.c **** }
 1090              		.loc 1 222 1
 1091 0062 00BF     		nop
 1092 0064 80BD     		pop	{r7, pc}
 1093              	.L31:
 1094 0066 00BF     		.align	2
 1095              	.L30:
 1096 0068 00000000 		.word	MenuAtual
 1097 006c 00000000 		.word	counterOpcao
 1098 0070 00000000 		.word	htim4
 1099 0074 00080140 		.word	1073809408
 1100 0078 00000000 		.word	counterPrev
 1101              		.cfi_endproc
 1102              	.LFE69:
 1104              		.global	__aeabi_dmul
 1105              		.global	__aeabi_ui2d
 1106              		.section	.text.main,"ax",%progbits
 1107              		.align	1
 1108              		.global	main
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu softvfp
 1114              	main:
 1115              	.LFB70:
 223:Core/Src/main.c **** /* USER CODE END PFP */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 226:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 24


 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /**
 231:Core/Src/main.c ****   * @brief  The application entry point.
 232:Core/Src/main.c ****   * @retval int
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** int main(void)
 235:Core/Src/main.c **** {
 1116              		.loc 1 235 1
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              	.LCFI13:
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 84B0     		sub	sp, sp, #16
 1126              	.LCFI14:
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              	.LCFI15:
 1130              		.cfi_def_cfa_register 7
 236:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 237:Core/Src/main.c ****   //OLED
 238:Core/Src/main.c ****   GPIO_PinState aState;
 239:Core/Src/main.c ****   GPIO_PinState aLastState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 1131              		.loc 1 239 30
 1132 0006 4021     		movs	r1, #64
 1133 0008 8D48     		ldr	r0, .L46+40
 1134 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1135 000e 0346     		mov	r3, r0
 1136 0010 FB73     		strb	r3, [r7, #15]
 240:Core/Src/main.c ****   uint32_t counter = 0;
 1137              		.loc 1 240 12
 1138 0012 0023     		movs	r3, #0
 1139 0014 BB60     		str	r3, [r7, #8]
 241:Core/Src/main.c ****   uint32_t iMedia = 1;
 1140              		.loc 1 241 12
 1141 0016 0123     		movs	r3, #1
 1142 0018 7B60     		str	r3, [r7, #4]
 242:Core/Src/main.c ****   
 243:Core/Src/main.c ****   
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END 1 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 250:Core/Src/main.c ****   HAL_Init();
 1143              		.loc 1 250 3
 1144 001a FFF7FEFF 		bl	HAL_Init
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END Init */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 25


 257:Core/Src/main.c ****   SystemClock_Config();
 1145              		.loc 1 257 3
 1146 001e FFF7FEFF 		bl	SystemClock_Config
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END SysInit */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* Initialize all configured peripherals */
 264:Core/Src/main.c ****   MX_GPIO_Init();
 1147              		.loc 1 264 3
 1148 0022 FFF7FEFF 		bl	MX_GPIO_Init
 265:Core/Src/main.c ****   MX_I2C1_Init();
 1149              		.loc 1 265 3
 1150 0026 FFF7FEFF 		bl	MX_I2C1_Init
 266:Core/Src/main.c ****   MX_TIM4_Init();
 1151              		.loc 1 266 3
 1152 002a FFF7FEFF 		bl	MX_TIM4_Init
 267:Core/Src/main.c ****   MX_ADC1_Init();
 1153              		.loc 1 267 3
 1154 002e FFF7FEFF 		bl	MX_ADC1_Init
 268:Core/Src/main.c ****   MX_TIM2_Init();
 1155              		.loc 1 268 3
 1156 0032 FFF7FEFF 		bl	MX_TIM2_Init
 269:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   
 272:Core/Src/main.c ****   /* USER CODE END 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* Infinite loop */
 275:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 276:Core/Src/main.c ****   SSD1306_Init();
 1157              		.loc 1 276 3
 1158 0036 FFF7FEFF 		bl	SSD1306_Init
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   // Sentido Motor de Passo
 279:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 1159              		.loc 1 279 3
 1160 003a 0122     		movs	r2, #1
 1161 003c 1021     		movs	r1, #16
 1162 003e 8148     		ldr	r0, .L46+44
 1163 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   //PID
 282:Core/Src/main.c ****   setpointUser = 37;
 1164              		.loc 1 282 16
 1165 0044 804B     		ldr	r3, .L46+48
 1166 0046 814A     		ldr	r2, .L46+52
 1167 0048 1A60     		str	r2, [r3]	@ float
 283:Core/Src/main.c ****   setpoint = setpointUser*0.269+7.34;
 1168              		.loc 1 283 26
 1169 004a 7F4B     		ldr	r3, .L46+48
 1170 004c 1B68     		ldr	r3, [r3]	@ float
 1171 004e 1846     		mov	r0, r3
 1172 0050 FFF7FEFF 		bl	__aeabi_f2d
 1173 0054 70A3     		adr	r3, .L46
 1174 0056 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 26


 1175 005a FFF7FEFF 		bl	__aeabi_dmul
 1176 005e 0246     		mov	r2, r0
 1177 0060 0B46     		mov	r3, r1
 1178 0062 1046     		mov	r0, r2
 1179 0064 1946     		mov	r1, r3
 1180              		.loc 1 283 32
 1181 0066 6EA3     		adr	r3, .L46+8
 1182 0068 D3E90023 		ldrd	r2, [r3]
 1183 006c FFF7FEFF 		bl	__aeabi_dadd
 1184 0070 0246     		mov	r2, r0
 1185 0072 0B46     		mov	r3, r1
 1186 0074 1046     		mov	r0, r2
 1187 0076 1946     		mov	r1, r3
 1188 0078 FFF7FEFF 		bl	__aeabi_d2f
 1189 007c 0346     		mov	r3, r0
 1190              		.loc 1 283 12
 1191 007e 744A     		ldr	r2, .L46+56
 1192 0080 1360     		str	r3, [r2]	@ float
 284:Core/Src/main.c ****   TempCelsius = 13.0;
 1193              		.loc 1 284 15
 1194 0082 744B     		ldr	r3, .L46+60
 1195 0084 744A     		ldr	r2, .L46+64
 1196 0086 1A60     		str	r2, [r3]	@ float
 285:Core/Src/main.c ****   kp = 5.0; //Calibrar depois
 1197              		.loc 1 285 6
 1198 0088 744B     		ldr	r3, .L46+68
 1199 008a 754A     		ldr	r2, .L46+72
 1200 008c 1A60     		str	r2, [r3]	@ float
 286:Core/Src/main.c ****   ki = 0.03;
 1201              		.loc 1 286 6
 1202 008e 754B     		ldr	r3, .L46+76
 1203 0090 754A     		ldr	r2, .L46+80
 1204 0092 1A60     		str	r2, [r3]	@ float
 287:Core/Src/main.c ****   kd = 0.08;
 1205              		.loc 1 287 6
 1206 0094 754B     		ldr	r3, .L46+84
 1207 0096 764A     		ldr	r2, .L46+88
 1208 0098 1A60     		str	r2, [r3]	@ float
 288:Core/Src/main.c ****   erroAnt = 0.0; //Qual o valor inicial?
 1209              		.loc 1 288 11
 1210 009a 764B     		ldr	r3, .L46+92
 1211 009c 4FF00002 		mov	r2, #0
 1212 00a0 1A60     		str	r2, [r3]	@ float
 289:Core/Src/main.c ****   yiAnt = 0.0;
 1213              		.loc 1 289 9
 1214 00a2 754B     		ldr	r3, .L46+96
 1215 00a4 4FF00002 		mov	r2, #0
 1216 00a8 1A60     		str	r2, [r3]	@ float
 290:Core/Src/main.c ****   ydAnt = 0.0;
 1217              		.loc 1 290 9
 1218 00aa 744B     		ldr	r3, .L46+100
 1219 00ac 4FF00002 		mov	r2, #0
 1220 00b0 1A60     		str	r2, [r3]	@ float
 291:Core/Src/main.c ****   Nd = 1; // Filtro
 1221              		.loc 1 291 6
 1222 00b2 734B     		ldr	r3, .L46+104
 1223 00b4 4FF07E52 		mov	r2, #1065353216
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 27


 1224 00b8 1A60     		str	r2, [r3]	@ float
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   // Timer de Aquecimento
 294:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 1225              		.loc 1 294 3
 1226 00ba 0421     		movs	r1, #4
 1227 00bc 7148     		ldr	r0, .L46+108
 1228 00be FFF7FEFF 		bl	HAL_TIM_PWM_Start
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   // Interrupt de passo / PID
 297:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1229              		.loc 1 297 3
 1230 00c2 7148     		ldr	r0, .L46+112
 1231 00c4 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1232              	.L43:
 298:Core/Src/main.c ****   
 299:Core/Src/main.c ****   
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   while (1)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****     // Contador Rot Button
 306:Core/Src/main.c ****     aState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 1233              		.loc 1 306 14
 1234 00c8 4021     		movs	r1, #64
 1235 00ca 5D48     		ldr	r0, .L46+40
 1236 00cc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1237 00d0 0346     		mov	r3, r0
 1238 00d2 FB70     		strb	r3, [r7, #3]
 307:Core/Src/main.c ****     if (aState != aLastState)
 1239              		.loc 1 307 8
 1240 00d4 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1241 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1242 00d8 9A42     		cmp	r2, r3
 1243 00da 1DD0     		beq	.L33
 308:Core/Src/main.c ****     {
 309:Core/Src/main.c ****       if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7) != aState)
 1244              		.loc 1 309 11
 1245 00dc 8021     		movs	r1, #128
 1246 00de 5848     		ldr	r0, .L46+40
 1247 00e0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1248 00e4 0346     		mov	r3, r0
 1249 00e6 1A46     		mov	r2, r3
 1250              		.loc 1 309 10
 1251 00e8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1252 00ea 9342     		cmp	r3, r2
 1253 00ec 03D0     		beq	.L34
 310:Core/Src/main.c ****       {
 311:Core/Src/main.c ****         counter--; // Sentido Horario
 1254              		.loc 1 311 16
 1255 00ee BB68     		ldr	r3, [r7, #8]
 1256 00f0 013B     		subs	r3, r3, #1
 1257 00f2 BB60     		str	r3, [r7, #8]
 1258 00f4 02E0     		b	.L35
 1259              	.L34:
 312:Core/Src/main.c ****       }
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 28


 313:Core/Src/main.c ****       else
 314:Core/Src/main.c ****       {
 315:Core/Src/main.c ****         counter++; // Sentido Anti Horario
 1260              		.loc 1 315 16
 1261 00f6 BB68     		ldr	r3, [r7, #8]
 1262 00f8 0133     		adds	r3, r3, #1
 1263 00fa BB60     		str	r3, [r7, #8]
 1264              	.L35:
 316:Core/Src/main.c ****       }
 317:Core/Src/main.c ****       if (counter % 2 == 0)
 1265              		.loc 1 317 19
 1266 00fc BB68     		ldr	r3, [r7, #8]
 1267 00fe 03F00103 		and	r3, r3, #1
 1268              		.loc 1 317 10
 1269 0102 002B     		cmp	r3, #0
 1270 0104 03D1     		bne	.L36
 318:Core/Src/main.c ****       {
 319:Core/Src/main.c ****         counterOpcao = counter/2;
 1271              		.loc 1 319 31
 1272 0106 BB68     		ldr	r3, [r7, #8]
 1273 0108 5B08     		lsrs	r3, r3, #1
 1274              		.loc 1 319 22
 1275 010a 604A     		ldr	r2, .L46+116
 1276 010c 1360     		str	r3, [r2]
 1277              	.L36:
 320:Core/Src/main.c ****       }
 321:Core/Src/main.c ****       if(counter>100)
 1278              		.loc 1 321 9
 1279 010e BB68     		ldr	r3, [r7, #8]
 1280 0110 642B     		cmp	r3, #100
 1281 0112 01D9     		bls	.L33
 322:Core/Src/main.c ****       {
 323:Core/Src/main.c ****         counter = 0;
 1282              		.loc 1 323 17
 1283 0114 0023     		movs	r3, #0
 1284 0116 BB60     		str	r3, [r7, #8]
 1285              	.L33:
 324:Core/Src/main.c ****       }
 325:Core/Src/main.c ****     }
 326:Core/Src/main.c ****     aLastState = aState;
 1286              		.loc 1 326 16
 1287 0118 FB78     		ldrb	r3, [r7, #3]
 1288 011a FB73     		strb	r3, [r7, #15]
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****     // Sensor Temp
 330:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 1289              		.loc 1 330 5
 1290 011c 5C48     		ldr	r0, .L46+120
 1291 011e FFF7FEFF 		bl	HAL_ADC_Start
 331:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1,100);
 1292              		.loc 1 331 5
 1293 0122 6421     		movs	r1, #100
 1294 0124 5A48     		ldr	r0, .L46+120
 1295 0126 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 332:Core/Src/main.c ****     TempVolts = HAL_ADC_GetValue(&hadc1);
 1296              		.loc 1 332 17
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 29


 1297 012a 5948     		ldr	r0, .L46+120
 1298 012c FFF7FEFF 		bl	HAL_ADC_GetValue
 1299 0130 0346     		mov	r3, r0
 1300              		.loc 1 332 15
 1301 0132 584A     		ldr	r2, .L46+124
 1302 0134 1360     		str	r3, [r2]
 333:Core/Src/main.c ****     TempCelsius = ((TempVolts * 1.1 / (4095)) / 0.01); //Offset experimental 7 do LM35
 1303              		.loc 1 333 31
 1304 0136 574B     		ldr	r3, .L46+124
 1305 0138 1B68     		ldr	r3, [r3]
 1306 013a 1846     		mov	r0, r3
 1307 013c FFF7FEFF 		bl	__aeabi_ui2d
 1308 0140 39A3     		adr	r3, .L46+16
 1309 0142 D3E90023 		ldrd	r2, [r3]
 1310 0146 FFF7FEFF 		bl	__aeabi_dmul
 1311 014a 0246     		mov	r2, r0
 1312 014c 0B46     		mov	r3, r1
 1313 014e 1046     		mov	r0, r2
 1314 0150 1946     		mov	r1, r3
 1315              		.loc 1 333 37
 1316 0152 37A3     		adr	r3, .L46+24
 1317 0154 D3E90023 		ldrd	r2, [r3]
 1318 0158 FFF7FEFF 		bl	__aeabi_ddiv
 1319 015c 0246     		mov	r2, r0
 1320 015e 0B46     		mov	r3, r1
 1321 0160 1046     		mov	r0, r2
 1322 0162 1946     		mov	r1, r3
 1323              		.loc 1 333 47
 1324 0164 34A3     		adr	r3, .L46+32
 1325 0166 D3E90023 		ldrd	r2, [r3]
 1326 016a FFF7FEFF 		bl	__aeabi_ddiv
 1327 016e 0246     		mov	r2, r0
 1328 0170 0B46     		mov	r3, r1
 1329 0172 1046     		mov	r0, r2
 1330 0174 1946     		mov	r1, r3
 1331 0176 FFF7FEFF 		bl	__aeabi_d2f
 1332 017a 0346     		mov	r3, r0
 1333              		.loc 1 333 17
 1334 017c 354A     		ldr	r2, .L46+60
 1335 017e 1360     		str	r3, [r2]	@ float
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     if(iMedia<=10)
 1336              		.loc 1 335 7
 1337 0180 7B68     		ldr	r3, [r7, #4]
 1338 0182 0A2B     		cmp	r3, #10
 1339 0184 0FD8     		bhi	.L37
 336:Core/Src/main.c ****     {
 337:Core/Src/main.c ****       TempSoma = TempSoma + TempCelsius;
 1340              		.loc 1 337 27
 1341 0186 444B     		ldr	r3, .L46+128
 1342 0188 1B68     		ldr	r3, [r3]	@ float
 1343 018a 324A     		ldr	r2, .L46+60
 1344 018c 1268     		ldr	r2, [r2]	@ float
 1345 018e 1146     		mov	r1, r2
 1346 0190 1846     		mov	r0, r3
 1347 0192 FFF7FEFF 		bl	__aeabi_fadd
 1348 0196 0346     		mov	r3, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 30


 1349 0198 1A46     		mov	r2, r3
 1350              		.loc 1 337 16
 1351 019a 3F4B     		ldr	r3, .L46+128
 1352 019c 1A60     		str	r2, [r3]	@ float
 338:Core/Src/main.c ****       iMedia++;
 1353              		.loc 1 338 13
 1354 019e 7B68     		ldr	r3, [r7, #4]
 1355 01a0 0133     		adds	r3, r3, #1
 1356 01a2 7B60     		str	r3, [r7, #4]
 1357 01a4 0FE0     		b	.L38
 1358              	.L37:
 339:Core/Src/main.c ****     }
 340:Core/Src/main.c ****     else
 341:Core/Src/main.c ****     {
 342:Core/Src/main.c ****       TempCelsiusMed = TempSoma/10.0;
 1359              		.loc 1 342 32
 1360 01a6 3C4B     		ldr	r3, .L46+128
 1361 01a8 1B68     		ldr	r3, [r3]	@ float
 1362 01aa 3C49     		ldr	r1, .L46+132
 1363 01ac 1846     		mov	r0, r3
 1364 01ae FFF7FEFF 		bl	__aeabi_fdiv
 1365 01b2 0346     		mov	r3, r0
 1366 01b4 1A46     		mov	r2, r3
 1367              		.loc 1 342 22
 1368 01b6 3A4B     		ldr	r3, .L46+136
 1369 01b8 1A60     		str	r2, [r3]	@ float
 343:Core/Src/main.c ****       iMedia = 1;
 1370              		.loc 1 343 14
 1371 01ba 0123     		movs	r3, #1
 1372 01bc 7B60     		str	r3, [r7, #4]
 344:Core/Src/main.c ****       TempSoma = 0.0;
 1373              		.loc 1 344 16
 1374 01be 364B     		ldr	r3, .L46+128
 1375 01c0 4FF00002 		mov	r2, #0
 1376 01c4 1A60     		str	r2, [r3]	@ float
 1377              	.L38:
 345:Core/Src/main.c ****     }
 346:Core/Src/main.c ****     
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****     MenuHandler();
 1378              		.loc 1 350 5
 1379 01c6 FFF7FEFF 		bl	MenuHandler
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****     //calcPid();
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     if(TempCelsius<setpoint)
 1380              		.loc 1 354 19
 1381 01ca 224B     		ldr	r3, .L46+60
 1382 01cc 1B68     		ldr	r3, [r3]	@ float
 1383 01ce 204A     		ldr	r2, .L46+56
 1384 01d0 1268     		ldr	r2, [r2]	@ float
 1385              		.loc 1 354 7
 1386 01d2 1146     		mov	r1, r2
 1387 01d4 1846     		mov	r0, r3
 1388 01d6 FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 31


 1389 01da 0346     		mov	r3, r0
 1390 01dc 002B     		cmp	r3, #0
 1391 01de 06D0     		beq	.L45
 355:Core/Src/main.c ****     {
 356:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 1392              		.loc 1 356 7
 1393 01e0 0122     		movs	r2, #1
 1394 01e2 4FF40051 		mov	r1, #8192
 1395 01e6 2F48     		ldr	r0, .L46+140
 1396 01e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1397 01ec 05E0     		b	.L41
 1398              	.L45:
 357:Core/Src/main.c ****     }
 358:Core/Src/main.c ****     else
 359:Core/Src/main.c ****     {
 360:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 1399              		.loc 1 360 7
 1400 01ee 0022     		movs	r2, #0
 1401 01f0 4FF40051 		mov	r1, #8192
 1402 01f4 2B48     		ldr	r0, .L46+140
 1403 01f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1404              	.L41:
 361:Core/Src/main.c ****     }
 362:Core/Src/main.c ****     
 363:Core/Src/main.c ****   
 364:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10))
 1405              		.loc 1 364 8
 1406 01fa 4FF48061 		mov	r1, #1024
 1407 01fe 1148     		ldr	r0, .L46+44
 1408 0200 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1409 0204 0346     		mov	r3, r0
 1410              		.loc 1 364 7
 1411 0206 002B     		cmp	r3, #0
 1412 0208 3FF45EAF 		beq	.L43
 365:Core/Src/main.c ****     {
 366:Core/Src/main.c ****       ClickHandler();
 1413              		.loc 1 366 7
 1414 020c FFF7FEFF 		bl	ClickHandler
 306:Core/Src/main.c ****     if (aState != aLastState)
 1415              		.loc 1 306 12
 1416 0210 5AE7     		b	.L43
 1417              	.L47:
 1418 0212 00BFAFF3 		.align	3
 1418      0080
 1419              	.L46:
 1420 0218 9EEFA7C6 		.word	-962072674
 1421 021c 4B37D13F 		.word	1070675787
 1422 0220 5C8FC2F5 		.word	-171798692
 1423 0224 285C1D40 		.word	1075665960
 1424 0228 9A999999 		.word	-1717986918
 1425 022c 9999F13F 		.word	1072798105
 1426 0230 00000000 		.word	0
 1427 0234 00FEAF40 		.word	1085275648
 1428 0238 7B14AE47 		.word	1202590843
 1429 023c E17A843F 		.word	1065646817
 1430 0240 00080140 		.word	1073809408
 1431 0244 000C0140 		.word	1073810432
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 32


 1432 0248 00000000 		.word	setpointUser
 1433 024c 00001442 		.word	1108606976
 1434 0250 00000000 		.word	setpoint
 1435 0254 00000000 		.word	TempCelsius
 1436 0258 00005041 		.word	1095761920
 1437 025c 00000000 		.word	kp
 1438 0260 0000A040 		.word	1084227584
 1439 0264 00000000 		.word	ki
 1440 0268 8FC2F53C 		.word	1022739087
 1441 026c 00000000 		.word	kd
 1442 0270 0AD7A33D 		.word	1034147594
 1443 0274 00000000 		.word	erroAnt
 1444 0278 00000000 		.word	yiAnt
 1445 027c 00000000 		.word	ydAnt
 1446 0280 00000000 		.word	Nd
 1447 0284 00000000 		.word	htim2
 1448 0288 00000000 		.word	htim4
 1449 028c 00000000 		.word	counterOpcao
 1450 0290 00000000 		.word	hadc1
 1451 0294 00000000 		.word	TempVolts
 1452 0298 00000000 		.word	TempSoma
 1453 029c 00002041 		.word	1092616192
 1454 02a0 00000000 		.word	TempCelsiusMed
 1455 02a4 00100140 		.word	1073811456
 1456              		.cfi_endproc
 1457              	.LFE70:
 1459              		.section	.text.SystemClock_Config,"ax",%progbits
 1460              		.align	1
 1461              		.global	SystemClock_Config
 1462              		.syntax unified
 1463              		.thumb
 1464              		.thumb_func
 1465              		.fpu softvfp
 1467              	SystemClock_Config:
 1468              	.LFB71:
 367:Core/Src/main.c ****     }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****     
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     
 374:Core/Src/main.c ****     
 375:Core/Src/main.c ****     
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****     /* USER CODE END WHILE */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 380:Core/Src/main.c ****   }
 381:Core/Src/main.c ****   /* USER CODE END 3 */
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /**
 385:Core/Src/main.c ****   * @brief System Clock Configuration
 386:Core/Src/main.c ****   * @retval None
 387:Core/Src/main.c ****   */
 388:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 33


 389:Core/Src/main.c **** {
 1469              		.loc 1 389 1
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 80
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 80B5     		push	{r7, lr}
 1474              	.LCFI16:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 94B0     		sub	sp, sp, #80
 1479              	.LCFI17:
 1480              		.cfi_def_cfa_offset 88
 1481 0004 00AF     		add	r7, sp, #0
 1482              	.LCFI18:
 1483              		.cfi_def_cfa_register 7
 390:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1484              		.loc 1 390 22
 1485 0006 07F12803 		add	r3, r7, #40
 1486 000a 2822     		movs	r2, #40
 1487 000c 0021     		movs	r1, #0
 1488 000e 1846     		mov	r0, r3
 1489 0010 FFF7FEFF 		bl	memset
 391:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1490              		.loc 1 391 22
 1491 0014 07F11403 		add	r3, r7, #20
 1492 0018 0022     		movs	r2, #0
 1493 001a 1A60     		str	r2, [r3]
 1494 001c 5A60     		str	r2, [r3, #4]
 1495 001e 9A60     		str	r2, [r3, #8]
 1496 0020 DA60     		str	r2, [r3, #12]
 1497 0022 1A61     		str	r2, [r3, #16]
 392:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1498              		.loc 1 392 28
 1499 0024 3B1D     		adds	r3, r7, #4
 1500 0026 0022     		movs	r2, #0
 1501 0028 1A60     		str	r2, [r3]
 1502 002a 5A60     		str	r2, [r3, #4]
 1503 002c 9A60     		str	r2, [r3, #8]
 1504 002e DA60     		str	r2, [r3, #12]
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 395:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 396:Core/Src/main.c ****   */
 397:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 1505              		.loc 1 397 36
 1506 0030 0123     		movs	r3, #1
 1507 0032 BB62     		str	r3, [r7, #40]
 398:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1508              		.loc 1 398 30
 1509 0034 4FF48033 		mov	r3, #65536
 1510 0038 FB62     		str	r3, [r7, #44]
 399:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1511              		.loc 1 399 36
 1512 003a 0023     		movs	r3, #0
 1513 003c 3B63     		str	r3, [r7, #48]
 400:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 34


 1514              		.loc 1 400 30
 1515 003e 0123     		movs	r3, #1
 1516 0040 BB63     		str	r3, [r7, #56]
 401:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1517              		.loc 1 401 34
 1518 0042 0223     		movs	r3, #2
 1519 0044 7B64     		str	r3, [r7, #68]
 402:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1520              		.loc 1 402 35
 1521 0046 4FF48033 		mov	r3, #65536
 1522 004a BB64     		str	r3, [r7, #72]
 403:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1523              		.loc 1 403 32
 1524 004c 4FF4E013 		mov	r3, #1835008
 1525 0050 FB64     		str	r3, [r7, #76]
 404:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1526              		.loc 1 404 7
 1527 0052 07F12803 		add	r3, r7, #40
 1528 0056 1846     		mov	r0, r3
 1529 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1530 005c 0346     		mov	r3, r0
 1531              		.loc 1 404 6
 1532 005e 002B     		cmp	r3, #0
 1533 0060 01D0     		beq	.L49
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 1534              		.loc 1 406 5
 1535 0062 FFF7FEFF 		bl	Error_Handler
 1536              	.L49:
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 409:Core/Src/main.c ****   */
 410:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1537              		.loc 1 410 31
 1538 0066 0F23     		movs	r3, #15
 1539 0068 7B61     		str	r3, [r7, #20]
 411:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 412:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1540              		.loc 1 412 34
 1541 006a 0223     		movs	r3, #2
 1542 006c BB61     		str	r3, [r7, #24]
 413:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1543              		.loc 1 413 35
 1544 006e 0023     		movs	r3, #0
 1545 0070 FB61     		str	r3, [r7, #28]
 414:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1546              		.loc 1 414 36
 1547 0072 4FF48063 		mov	r3, #1024
 1548 0076 3B62     		str	r3, [r7, #32]
 415:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1549              		.loc 1 415 36
 1550 0078 0023     		movs	r3, #0
 1551 007a 7B62     		str	r3, [r7, #36]
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 1552              		.loc 1 417 7
 1553 007c 07F11403 		add	r3, r7, #20
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 35


 1554 0080 0221     		movs	r1, #2
 1555 0082 1846     		mov	r0, r3
 1556 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1557 0088 0346     		mov	r3, r0
 1558              		.loc 1 417 6
 1559 008a 002B     		cmp	r3, #0
 1560 008c 01D0     		beq	.L50
 418:Core/Src/main.c ****   {
 419:Core/Src/main.c ****     Error_Handler();
 1561              		.loc 1 419 5
 1562 008e FFF7FEFF 		bl	Error_Handler
 1563              	.L50:
 420:Core/Src/main.c ****   }
 421:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 1564              		.loc 1 421 38
 1565 0092 0223     		movs	r3, #2
 1566 0094 7B60     		str	r3, [r7, #4]
 422:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1567              		.loc 1 422 35
 1568 0096 4FF40043 		mov	r3, #32768
 1569 009a FB60     		str	r3, [r7, #12]
 423:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1570              		.loc 1 423 7
 1571 009c 3B1D     		adds	r3, r7, #4
 1572 009e 1846     		mov	r0, r3
 1573 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1574 00a4 0346     		mov	r3, r0
 1575              		.loc 1 423 6
 1576 00a6 002B     		cmp	r3, #0
 1577 00a8 01D0     		beq	.L52
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 1578              		.loc 1 425 5
 1579 00aa FFF7FEFF 		bl	Error_Handler
 1580              	.L52:
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c **** }
 1581              		.loc 1 427 1
 1582 00ae 00BF     		nop
 1583 00b0 5037     		adds	r7, r7, #80
 1584              	.LCFI19:
 1585              		.cfi_def_cfa_offset 8
 1586 00b2 BD46     		mov	sp, r7
 1587              	.LCFI20:
 1588              		.cfi_def_cfa_register 13
 1589              		@ sp needed
 1590 00b4 80BD     		pop	{r7, pc}
 1591              		.cfi_endproc
 1592              	.LFE71:
 1594              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1595              		.align	1
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu softvfp
 1601              	MX_ADC1_Init:
 1602              	.LFB72:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 36


 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 431:Core/Src/main.c ****   * @param None
 432:Core/Src/main.c ****   * @retval None
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** static void MX_ADC1_Init(void)
 435:Core/Src/main.c **** {
 1603              		.loc 1 435 1
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 16
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607 0000 80B5     		push	{r7, lr}
 1608              	.LCFI21:
 1609              		.cfi_def_cfa_offset 8
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 84B0     		sub	sp, sp, #16
 1613              	.LCFI22:
 1614              		.cfi_def_cfa_offset 24
 1615 0004 00AF     		add	r7, sp, #0
 1616              	.LCFI23:
 1617              		.cfi_def_cfa_register 7
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1618              		.loc 1 441 26
 1619 0006 3B1D     		adds	r3, r7, #4
 1620 0008 0022     		movs	r2, #0
 1621 000a 1A60     		str	r2, [r3]
 1622 000c 5A60     		str	r2, [r3, #4]
 1623 000e 9A60     		str	r2, [r3, #8]
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 446:Core/Src/main.c ****   /** Common config
 447:Core/Src/main.c ****   */
 448:Core/Src/main.c ****   hadc1.Instance = ADC1;
 1624              		.loc 1 448 18
 1625 0010 184B     		ldr	r3, .L57
 1626 0012 194A     		ldr	r2, .L57+4
 1627 0014 1A60     		str	r2, [r3]
 449:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1628              		.loc 1 449 27
 1629 0016 174B     		ldr	r3, .L57
 1630 0018 0022     		movs	r2, #0
 1631 001a 9A60     		str	r2, [r3, #8]
 450:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1632              		.loc 1 450 33
 1633 001c 154B     		ldr	r3, .L57
 1634 001e 0022     		movs	r2, #0
 1635 0020 1A73     		strb	r2, [r3, #12]
 451:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 37


 1636              		.loc 1 451 36
 1637 0022 144B     		ldr	r3, .L57
 1638 0024 0022     		movs	r2, #0
 1639 0026 1A75     		strb	r2, [r3, #20]
 452:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1640              		.loc 1 452 31
 1641 0028 124B     		ldr	r3, .L57
 1642 002a 4FF46022 		mov	r2, #917504
 1643 002e DA61     		str	r2, [r3, #28]
 453:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1644              		.loc 1 453 24
 1645 0030 104B     		ldr	r3, .L57
 1646 0032 0022     		movs	r2, #0
 1647 0034 5A60     		str	r2, [r3, #4]
 454:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1648              		.loc 1 454 30
 1649 0036 0F4B     		ldr	r3, .L57
 1650 0038 0122     		movs	r2, #1
 1651 003a 1A61     		str	r2, [r3, #16]
 455:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1652              		.loc 1 455 7
 1653 003c 0D48     		ldr	r0, .L57
 1654 003e FFF7FEFF 		bl	HAL_ADC_Init
 1655 0042 0346     		mov	r3, r0
 1656              		.loc 1 455 6
 1657 0044 002B     		cmp	r3, #0
 1658 0046 01D0     		beq	.L54
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 1659              		.loc 1 457 5
 1660 0048 FFF7FEFF 		bl	Error_Handler
 1661              	.L54:
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   /** Configure Regular Channel
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 1662              		.loc 1 461 19
 1663 004c 0323     		movs	r3, #3
 1664 004e 7B60     		str	r3, [r7, #4]
 462:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1665              		.loc 1 462 16
 1666 0050 0123     		movs	r3, #1
 1667 0052 BB60     		str	r3, [r7, #8]
 463:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 1668              		.loc 1 463 24
 1669 0054 0023     		movs	r3, #0
 1670 0056 FB60     		str	r3, [r7, #12]
 464:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1671              		.loc 1 464 7
 1672 0058 3B1D     		adds	r3, r7, #4
 1673 005a 1946     		mov	r1, r3
 1674 005c 0548     		ldr	r0, .L57
 1675 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1676 0062 0346     		mov	r3, r0
 1677              		.loc 1 464 6
 1678 0064 002B     		cmp	r3, #0
 1679 0066 01D0     		beq	.L56
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 38


 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 1680              		.loc 1 466 5
 1681 0068 FFF7FEFF 		bl	Error_Handler
 1682              	.L56:
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** }
 1683              		.loc 1 472 1
 1684 006c 00BF     		nop
 1685 006e 1037     		adds	r7, r7, #16
 1686              	.LCFI24:
 1687              		.cfi_def_cfa_offset 8
 1688 0070 BD46     		mov	sp, r7
 1689              	.LCFI25:
 1690              		.cfi_def_cfa_register 13
 1691              		@ sp needed
 1692 0072 80BD     		pop	{r7, pc}
 1693              	.L58:
 1694              		.align	2
 1695              	.L57:
 1696 0074 00000000 		.word	hadc1
 1697 0078 00240140 		.word	1073816576
 1698              		.cfi_endproc
 1699              	.LFE72:
 1701              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1702              		.align	1
 1703              		.syntax unified
 1704              		.thumb
 1705              		.thumb_func
 1706              		.fpu softvfp
 1708              	MX_I2C1_Init:
 1709              	.LFB73:
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** /**
 475:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 476:Core/Src/main.c ****   * @param None
 477:Core/Src/main.c ****   * @retval None
 478:Core/Src/main.c ****   */
 479:Core/Src/main.c **** static void MX_I2C1_Init(void)
 480:Core/Src/main.c **** {
 1710              		.loc 1 480 1
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 0
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714 0000 80B5     		push	{r7, lr}
 1715              	.LCFI26:
 1716              		.cfi_def_cfa_offset 8
 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 00AF     		add	r7, sp, #0
 1720              	.LCFI27:
 1721              		.cfi_def_cfa_register 7
 481:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 39


 482:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 489:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 1722              		.loc 1 489 18
 1723 0004 124B     		ldr	r3, .L62
 1724 0006 134A     		ldr	r2, .L62+4
 1725 0008 1A60     		str	r2, [r3]
 490:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1726              		.loc 1 490 25
 1727 000a 114B     		ldr	r3, .L62
 1728 000c 124A     		ldr	r2, .L62+8
 1729 000e 5A60     		str	r2, [r3, #4]
 491:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1730              		.loc 1 491 24
 1731 0010 0F4B     		ldr	r3, .L62
 1732 0012 0022     		movs	r2, #0
 1733 0014 9A60     		str	r2, [r3, #8]
 492:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1734              		.loc 1 492 26
 1735 0016 0E4B     		ldr	r3, .L62
 1736 0018 0022     		movs	r2, #0
 1737 001a DA60     		str	r2, [r3, #12]
 493:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1738              		.loc 1 493 29
 1739 001c 0C4B     		ldr	r3, .L62
 1740 001e 4FF48042 		mov	r2, #16384
 1741 0022 1A61     		str	r2, [r3, #16]
 494:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1742              		.loc 1 494 30
 1743 0024 0A4B     		ldr	r3, .L62
 1744 0026 0022     		movs	r2, #0
 1745 0028 5A61     		str	r2, [r3, #20]
 495:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1746              		.loc 1 495 26
 1747 002a 094B     		ldr	r3, .L62
 1748 002c 0022     		movs	r2, #0
 1749 002e 9A61     		str	r2, [r3, #24]
 496:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1750              		.loc 1 496 30
 1751 0030 074B     		ldr	r3, .L62
 1752 0032 0022     		movs	r2, #0
 1753 0034 DA61     		str	r2, [r3, #28]
 497:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1754              		.loc 1 497 28
 1755 0036 064B     		ldr	r3, .L62
 1756 0038 0022     		movs	r2, #0
 1757 003a 1A62     		str	r2, [r3, #32]
 498:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1758              		.loc 1 498 7
 1759 003c 0448     		ldr	r0, .L62
 1760 003e FFF7FEFF 		bl	HAL_I2C_Init
 1761 0042 0346     		mov	r3, r0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 40


 1762              		.loc 1 498 6
 1763 0044 002B     		cmp	r3, #0
 1764 0046 01D0     		beq	.L61
 499:Core/Src/main.c ****   {
 500:Core/Src/main.c ****     Error_Handler();
 1765              		.loc 1 500 5
 1766 0048 FFF7FEFF 		bl	Error_Handler
 1767              	.L61:
 501:Core/Src/main.c ****   }
 502:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** }
 1768              		.loc 1 506 1
 1769 004c 00BF     		nop
 1770 004e 80BD     		pop	{r7, pc}
 1771              	.L63:
 1772              		.align	2
 1773              	.L62:
 1774 0050 00000000 		.word	hi2c1
 1775 0054 00540040 		.word	1073763328
 1776 0058 801A0600 		.word	400000
 1777              		.cfi_endproc
 1778              	.LFE73:
 1780              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1781              		.align	1
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1785              		.fpu softvfp
 1787              	MX_TIM2_Init:
 1788              	.LFB74:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** /**
 509:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 510:Core/Src/main.c ****   * @param None
 511:Core/Src/main.c ****   * @retval None
 512:Core/Src/main.c ****   */
 513:Core/Src/main.c **** static void MX_TIM2_Init(void)
 514:Core/Src/main.c **** {
 1789              		.loc 1 514 1
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 56
 1792              		@ frame_needed = 1, uses_anonymous_args = 0
 1793 0000 80B5     		push	{r7, lr}
 1794              	.LCFI28:
 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 7, -8
 1797              		.cfi_offset 14, -4
 1798 0002 8EB0     		sub	sp, sp, #56
 1799              	.LCFI29:
 1800              		.cfi_def_cfa_offset 64
 1801 0004 00AF     		add	r7, sp, #0
 1802              	.LCFI30:
 1803              		.cfi_def_cfa_register 7
 515:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 41


 516:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1804              		.loc 1 520 26
 1805 0006 07F12803 		add	r3, r7, #40
 1806 000a 0022     		movs	r2, #0
 1807 000c 1A60     		str	r2, [r3]
 1808 000e 5A60     		str	r2, [r3, #4]
 1809 0010 9A60     		str	r2, [r3, #8]
 1810 0012 DA60     		str	r2, [r3, #12]
 521:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1811              		.loc 1 521 27
 1812 0014 07F12003 		add	r3, r7, #32
 1813 0018 0022     		movs	r2, #0
 1814 001a 1A60     		str	r2, [r3]
 1815 001c 5A60     		str	r2, [r3, #4]
 522:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1816              		.loc 1 522 22
 1817 001e 3B1D     		adds	r3, r7, #4
 1818 0020 0022     		movs	r2, #0
 1819 0022 1A60     		str	r2, [r3]
 1820 0024 5A60     		str	r2, [r3, #4]
 1821 0026 9A60     		str	r2, [r3, #8]
 1822 0028 DA60     		str	r2, [r3, #12]
 1823 002a 1A61     		str	r2, [r3, #16]
 1824 002c 5A61     		str	r2, [r3, #20]
 1825 002e 9A61     		str	r2, [r3, #24]
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 527:Core/Src/main.c ****   htim2.Instance = TIM2;
 1826              		.loc 1 527 18
 1827 0030 2E4B     		ldr	r3, .L70
 1828 0032 4FF08042 		mov	r2, #1073741824
 1829 0036 1A60     		str	r2, [r3]
 528:Core/Src/main.c ****   htim2.Init.Prescaler = 7200-1;
 1830              		.loc 1 528 24
 1831 0038 2C4B     		ldr	r3, .L70
 1832 003a 41F61F42 		movw	r2, #7199
 1833 003e 5A60     		str	r2, [r3, #4]
 529:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1834              		.loc 1 529 26
 1835 0040 2A4B     		ldr	r3, .L70
 1836 0042 0022     		movs	r2, #0
 1837 0044 9A60     		str	r2, [r3, #8]
 530:Core/Src/main.c ****   htim2.Init.Period = 10000;
 1838              		.loc 1 530 21
 1839 0046 294B     		ldr	r3, .L70
 1840 0048 42F21072 		movw	r2, #10000
 1841 004c DA60     		str	r2, [r3, #12]
 531:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1842              		.loc 1 531 28
 1843 004e 274B     		ldr	r3, .L70
 1844 0050 0022     		movs	r2, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 42


 1845 0052 1A61     		str	r2, [r3, #16]
 532:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1846              		.loc 1 532 32
 1847 0054 254B     		ldr	r3, .L70
 1848 0056 0022     		movs	r2, #0
 1849 0058 9A61     		str	r2, [r3, #24]
 533:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1850              		.loc 1 533 7
 1851 005a 2448     		ldr	r0, .L70
 1852 005c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1853 0060 0346     		mov	r3, r0
 1854              		.loc 1 533 6
 1855 0062 002B     		cmp	r3, #0
 1856 0064 01D0     		beq	.L65
 534:Core/Src/main.c ****   {
 535:Core/Src/main.c ****     Error_Handler();
 1857              		.loc 1 535 5
 1858 0066 FFF7FEFF 		bl	Error_Handler
 1859              	.L65:
 536:Core/Src/main.c ****   }
 537:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1860              		.loc 1 537 34
 1861 006a 4FF48053 		mov	r3, #4096
 1862 006e BB62     		str	r3, [r7, #40]
 538:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1863              		.loc 1 538 7
 1864 0070 07F12803 		add	r3, r7, #40
 1865 0074 1946     		mov	r1, r3
 1866 0076 1D48     		ldr	r0, .L70
 1867 0078 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1868 007c 0346     		mov	r3, r0
 1869              		.loc 1 538 6
 1870 007e 002B     		cmp	r3, #0
 1871 0080 01D0     		beq	.L66
 539:Core/Src/main.c ****   {
 540:Core/Src/main.c ****     Error_Handler();
 1872              		.loc 1 540 5
 1873 0082 FFF7FEFF 		bl	Error_Handler
 1874              	.L66:
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1875              		.loc 1 542 7
 1876 0086 1948     		ldr	r0, .L70
 1877 0088 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1878 008c 0346     		mov	r3, r0
 1879              		.loc 1 542 6
 1880 008e 002B     		cmp	r3, #0
 1881 0090 01D0     		beq	.L67
 543:Core/Src/main.c ****   {
 544:Core/Src/main.c ****     Error_Handler();
 1882              		.loc 1 544 5
 1883 0092 FFF7FEFF 		bl	Error_Handler
 1884              	.L67:
 545:Core/Src/main.c ****   }
 546:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1885              		.loc 1 546 37
 1886 0096 0023     		movs	r3, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 43


 1887 0098 3B62     		str	r3, [r7, #32]
 547:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1888              		.loc 1 547 33
 1889 009a 0023     		movs	r3, #0
 1890 009c 7B62     		str	r3, [r7, #36]
 548:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1891              		.loc 1 548 7
 1892 009e 07F12003 		add	r3, r7, #32
 1893 00a2 1946     		mov	r1, r3
 1894 00a4 1148     		ldr	r0, .L70
 1895 00a6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1896 00aa 0346     		mov	r3, r0
 1897              		.loc 1 548 6
 1898 00ac 002B     		cmp	r3, #0
 1899 00ae 01D0     		beq	.L68
 549:Core/Src/main.c ****   {
 550:Core/Src/main.c ****     Error_Handler();
 1900              		.loc 1 550 5
 1901 00b0 FFF7FEFF 		bl	Error_Handler
 1902              	.L68:
 551:Core/Src/main.c ****   }
 552:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1903              		.loc 1 552 20
 1904 00b4 6023     		movs	r3, #96
 1905 00b6 7B60     		str	r3, [r7, #4]
 553:Core/Src/main.c ****   sConfigOC.Pulse = 10000;
 1906              		.loc 1 553 19
 1907 00b8 42F21073 		movw	r3, #10000
 1908 00bc BB60     		str	r3, [r7, #8]
 554:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1909              		.loc 1 554 24
 1910 00be 0023     		movs	r3, #0
 1911 00c0 FB60     		str	r3, [r7, #12]
 555:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1912              		.loc 1 555 24
 1913 00c2 0023     		movs	r3, #0
 1914 00c4 7B61     		str	r3, [r7, #20]
 556:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1915              		.loc 1 556 7
 1916 00c6 3B1D     		adds	r3, r7, #4
 1917 00c8 0422     		movs	r2, #4
 1918 00ca 1946     		mov	r1, r3
 1919 00cc 0748     		ldr	r0, .L70
 1920 00ce FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1921 00d2 0346     		mov	r3, r0
 1922              		.loc 1 556 6
 1923 00d4 002B     		cmp	r3, #0
 1924 00d6 01D0     		beq	.L69
 557:Core/Src/main.c ****   {
 558:Core/Src/main.c ****     Error_Handler();
 1925              		.loc 1 558 5
 1926 00d8 FFF7FEFF 		bl	Error_Handler
 1927              	.L69:
 559:Core/Src/main.c ****   }
 560:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 44


 563:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 1928              		.loc 1 563 3
 1929 00dc 0348     		ldr	r0, .L70
 1930 00de FFF7FEFF 		bl	HAL_TIM_MspPostInit
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** }
 1931              		.loc 1 565 1
 1932 00e2 00BF     		nop
 1933 00e4 3837     		adds	r7, r7, #56
 1934              	.LCFI31:
 1935              		.cfi_def_cfa_offset 8
 1936 00e6 BD46     		mov	sp, r7
 1937              	.LCFI32:
 1938              		.cfi_def_cfa_register 13
 1939              		@ sp needed
 1940 00e8 80BD     		pop	{r7, pc}
 1941              	.L71:
 1942 00ea 00BF     		.align	2
 1943              	.L70:
 1944 00ec 00000000 		.word	htim2
 1945              		.cfi_endproc
 1946              	.LFE74:
 1948              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1949              		.align	1
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu softvfp
 1955              	MX_TIM4_Init:
 1956              	.LFB75:
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** /**
 568:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 569:Core/Src/main.c ****   * @param None
 570:Core/Src/main.c ****   * @retval None
 571:Core/Src/main.c ****   */
 572:Core/Src/main.c **** static void MX_TIM4_Init(void)
 573:Core/Src/main.c **** {
 1957              		.loc 1 573 1
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 24
 1960              		@ frame_needed = 1, uses_anonymous_args = 0
 1961 0000 80B5     		push	{r7, lr}
 1962              	.LCFI33:
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 7, -8
 1965              		.cfi_offset 14, -4
 1966 0002 86B0     		sub	sp, sp, #24
 1967              	.LCFI34:
 1968              		.cfi_def_cfa_offset 32
 1969 0004 00AF     		add	r7, sp, #0
 1970              	.LCFI35:
 1971              		.cfi_def_cfa_register 7
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 45


 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1972              		.loc 1 579 26
 1973 0006 07F10803 		add	r3, r7, #8
 1974 000a 0022     		movs	r2, #0
 1975 000c 1A60     		str	r2, [r3]
 1976 000e 5A60     		str	r2, [r3, #4]
 1977 0010 9A60     		str	r2, [r3, #8]
 1978 0012 DA60     		str	r2, [r3, #12]
 580:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1979              		.loc 1 580 27
 1980 0014 3B46     		mov	r3, r7
 1981 0016 0022     		movs	r2, #0
 1982 0018 1A60     		str	r2, [r3]
 1983 001a 5A60     		str	r2, [r3, #4]
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 585:Core/Src/main.c ****   htim4.Instance = TIM4;
 1984              		.loc 1 585 18
 1985 001c 2C4B     		ldr	r3, .L76+8
 1986 001e 2D4A     		ldr	r2, .L76+12
 1987 0020 1A60     		str	r2, [r3]
 586:Core/Src/main.c ****   htim4.Init.Prescaler = 7200-1;
 1988              		.loc 1 586 24
 1989 0022 2B4B     		ldr	r3, .L76+8
 1990 0024 41F61F42 		movw	r2, #7199
 1991 0028 5A60     		str	r2, [r3, #4]
 587:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1992              		.loc 1 587 26
 1993 002a 294B     		ldr	r3, .L76+8
 1994 002c 0022     		movs	r2, #0
 1995 002e 9A60     		str	r2, [r3, #8]
 588:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1996              		.loc 1 588 21
 1997 0030 274B     		ldr	r3, .L76+8
 1998 0032 42F21072 		movw	r2, #10000
 1999 0036 DA60     		str	r2, [r3, #12]
 589:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2000              		.loc 1 589 28
 2001 0038 254B     		ldr	r3, .L76+8
 2002 003a 0022     		movs	r2, #0
 2003 003c 1A61     		str	r2, [r3, #16]
 590:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2004              		.loc 1 590 32
 2005 003e 244B     		ldr	r3, .L76+8
 2006 0040 0022     		movs	r2, #0
 2007 0042 9A61     		str	r2, [r3, #24]
 591:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2008              		.loc 1 591 7
 2009 0044 2248     		ldr	r0, .L76+8
 2010 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2011 004a 0346     		mov	r3, r0
 2012              		.loc 1 591 6
 2013 004c 002B     		cmp	r3, #0
 2014 004e 01D0     		beq	.L73
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 46


 592:Core/Src/main.c ****   {
 593:Core/Src/main.c ****     Error_Handler();
 2015              		.loc 1 593 5
 2016 0050 FFF7FEFF 		bl	Error_Handler
 2017              	.L73:
 594:Core/Src/main.c ****   }
 595:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 2018              		.loc 1 595 34
 2019 0054 4FF48053 		mov	r3, #4096
 2020 0058 BB60     		str	r3, [r7, #8]
 596:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2021              		.loc 1 596 7
 2022 005a 07F10803 		add	r3, r7, #8
 2023 005e 1946     		mov	r1, r3
 2024 0060 1B48     		ldr	r0, .L76+8
 2025 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2026 0066 0346     		mov	r3, r0
 2027              		.loc 1 596 6
 2028 0068 002B     		cmp	r3, #0
 2029 006a 01D0     		beq	.L74
 597:Core/Src/main.c ****   {
 598:Core/Src/main.c ****     Error_Handler();
 2030              		.loc 1 598 5
 2031 006c FFF7FEFF 		bl	Error_Handler
 2032              	.L74:
 599:Core/Src/main.c ****   }
 600:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 2033              		.loc 1 600 37
 2034 0070 0023     		movs	r3, #0
 2035 0072 3B60     		str	r3, [r7]
 601:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2036              		.loc 1 601 33
 2037 0074 0023     		movs	r3, #0
 2038 0076 7B60     		str	r3, [r7, #4]
 602:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2039              		.loc 1 602 7
 2040 0078 3B46     		mov	r3, r7
 2041 007a 1946     		mov	r1, r3
 2042 007c 1448     		ldr	r0, .L76+8
 2043 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2044 0082 0346     		mov	r3, r0
 2045              		.loc 1 602 6
 2046 0084 002B     		cmp	r3, #0
 2047 0086 01D0     		beq	.L75
 603:Core/Src/main.c ****   {
 604:Core/Src/main.c ****     Error_Handler();
 2048              		.loc 1 604 5
 2049 0088 FFF7FEFF 		bl	Error_Handler
 2050              	.L75:
 605:Core/Src/main.c ****   }
 606:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 607:Core/Src/main.c ****   tim4ms = (htim4.Init.Prescaler+1)*htim4.Init.Period/72000000.0;
 2051              		.loc 1 607 23
 2052 008c 104B     		ldr	r3, .L76+8
 2053 008e 5B68     		ldr	r3, [r3, #4]
 2054              		.loc 1 607 33
 2055 0090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 47


 2056              		.loc 1 607 47
 2057 0092 0F4A     		ldr	r2, .L76+8
 2058 0094 D268     		ldr	r2, [r2, #12]
 2059              		.loc 1 607 36
 2060 0096 02FB03F3 		mul	r3, r2, r3
 2061              		.loc 1 607 54
 2062 009a 1846     		mov	r0, r3
 2063 009c FFF7FEFF 		bl	__aeabi_ui2d
 2064 00a0 09A3     		adr	r3, .L76
 2065 00a2 D3E90023 		ldrd	r2, [r3]
 2066 00a6 FFF7FEFF 		bl	__aeabi_ddiv
 2067 00aa 0246     		mov	r2, r0
 2068 00ac 0B46     		mov	r3, r1
 2069 00ae 1046     		mov	r0, r2
 2070 00b0 1946     		mov	r1, r3
 2071 00b2 FFF7FEFF 		bl	__aeabi_d2f
 2072 00b6 0346     		mov	r3, r0
 2073              		.loc 1 607 10
 2074 00b8 074A     		ldr	r2, .L76+16
 2075 00ba 1360     		str	r3, [r2]	@ float
 608:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** }
 2076              		.loc 1 610 1
 2077 00bc 00BF     		nop
 2078 00be 1837     		adds	r7, r7, #24
 2079              	.LCFI36:
 2080              		.cfi_def_cfa_offset 8
 2081 00c0 BD46     		mov	sp, r7
 2082              	.LCFI37:
 2083              		.cfi_def_cfa_register 13
 2084              		@ sp needed
 2085 00c2 80BD     		pop	{r7, pc}
 2086              	.L77:
 2087 00c4 AFF30080 		.align	3
 2088              	.L76:
 2089 00c8 00000000 		.word	0
 2090 00cc 882A9141 		.word	1100032648
 2091 00d0 00000000 		.word	htim4
 2092 00d4 00080040 		.word	1073743872
 2093 00d8 00000000 		.word	tim4ms
 2094              		.cfi_endproc
 2095              	.LFE75:
 2097              		.section	.text.MX_GPIO_Init,"ax",%progbits
 2098              		.align	1
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2102              		.fpu softvfp
 2104              	MX_GPIO_Init:
 2105              	.LFB76:
 611:Core/Src/main.c **** 
 612:Core/Src/main.c **** /**
 613:Core/Src/main.c ****   * @brief GPIO Initialization Function
 614:Core/Src/main.c ****   * @param None
 615:Core/Src/main.c ****   * @retval None
 616:Core/Src/main.c ****   */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 48


 617:Core/Src/main.c **** static void MX_GPIO_Init(void)
 618:Core/Src/main.c **** {
 2106              		.loc 1 618 1
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 32
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110 0000 80B5     		push	{r7, lr}
 2111              	.LCFI38:
 2112              		.cfi_def_cfa_offset 8
 2113              		.cfi_offset 7, -8
 2114              		.cfi_offset 14, -4
 2115 0002 88B0     		sub	sp, sp, #32
 2116              	.LCFI39:
 2117              		.cfi_def_cfa_offset 40
 2118 0004 00AF     		add	r7, sp, #0
 2119              	.LCFI40:
 2120              		.cfi_def_cfa_register 7
 619:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 2121              		.loc 1 619 20
 2122 0006 07F11003 		add	r3, r7, #16
 2123 000a 0022     		movs	r2, #0
 2124 000c 1A60     		str	r2, [r3]
 2125 000e 5A60     		str	r2, [r3, #4]
 2126 0010 9A60     		str	r2, [r3, #8]
 2127 0012 DA60     		str	r2, [r3, #12]
 2128              	.LBB4:
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 622:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 2129              		.loc 1 622 3
 2130 0014 444B     		ldr	r3, .L79
 2131 0016 9B69     		ldr	r3, [r3, #24]
 2132 0018 434A     		ldr	r2, .L79
 2133 001a 43F01003 		orr	r3, r3, #16
 2134 001e 9361     		str	r3, [r2, #24]
 2135 0020 414B     		ldr	r3, .L79
 2136 0022 9B69     		ldr	r3, [r3, #24]
 2137 0024 03F01003 		and	r3, r3, #16
 2138 0028 FB60     		str	r3, [r7, #12]
 2139 002a FB68     		ldr	r3, [r7, #12]
 2140              	.LBE4:
 2141              	.LBB5:
 623:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 2142              		.loc 1 623 3
 2143 002c 3E4B     		ldr	r3, .L79
 2144 002e 9B69     		ldr	r3, [r3, #24]
 2145 0030 3D4A     		ldr	r2, .L79
 2146 0032 43F02003 		orr	r3, r3, #32
 2147 0036 9361     		str	r3, [r2, #24]
 2148 0038 3B4B     		ldr	r3, .L79
 2149 003a 9B69     		ldr	r3, [r3, #24]
 2150 003c 03F02003 		and	r3, r3, #32
 2151 0040 BB60     		str	r3, [r7, #8]
 2152 0042 BB68     		ldr	r3, [r7, #8]
 2153              	.LBE5:
 2154              	.LBB6:
 624:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 49


 2155              		.loc 1 624 3
 2156 0044 384B     		ldr	r3, .L79
 2157 0046 9B69     		ldr	r3, [r3, #24]
 2158 0048 374A     		ldr	r2, .L79
 2159 004a 43F00403 		orr	r3, r3, #4
 2160 004e 9361     		str	r3, [r2, #24]
 2161 0050 354B     		ldr	r3, .L79
 2162 0052 9B69     		ldr	r3, [r3, #24]
 2163 0054 03F00403 		and	r3, r3, #4
 2164 0058 7B60     		str	r3, [r7, #4]
 2165 005a 7B68     		ldr	r3, [r7, #4]
 2166              	.LBE6:
 2167              	.LBB7:
 625:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2168              		.loc 1 625 3
 2169 005c 324B     		ldr	r3, .L79
 2170 005e 9B69     		ldr	r3, [r3, #24]
 2171 0060 314A     		ldr	r2, .L79
 2172 0062 43F00803 		orr	r3, r3, #8
 2173 0066 9361     		str	r3, [r2, #24]
 2174 0068 2F4B     		ldr	r3, .L79
 2175 006a 9B69     		ldr	r3, [r3, #24]
 2176 006c 03F00803 		and	r3, r3, #8
 2177 0070 3B60     		str	r3, [r7]
 2178 0072 3B68     		ldr	r3, [r7]
 2179              	.LBE7:
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 628:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 2180              		.loc 1 628 3
 2181 0074 0022     		movs	r2, #0
 2182 0076 4FF40051 		mov	r1, #8192
 2183 007a 2C48     		ldr	r0, .L79+4
 2184 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 631:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8|GPIO_PIN_10, GPIO_PIN_RESET);
 2185              		.loc 1 631 3
 2186 0080 0022     		movs	r2, #0
 2187 0082 4FF4A061 		mov	r1, #1280
 2188 0086 2A48     		ldr	r0, .L79+8
 2189 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 634:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
 2190              		.loc 1 634 3
 2191 008c 0022     		movs	r2, #0
 2192 008e 1821     		movs	r1, #24
 2193 0090 2848     		ldr	r0, .L79+12
 2194 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 637:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 2195              		.loc 1 637 23
 2196 0096 4FF40053 		mov	r3, #8192
 2197 009a 3B61     		str	r3, [r7, #16]
 638:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 50


 2198              		.loc 1 638 24
 2199 009c 0123     		movs	r3, #1
 2200 009e 7B61     		str	r3, [r7, #20]
 639:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2201              		.loc 1 639 24
 2202 00a0 0023     		movs	r3, #0
 2203 00a2 BB61     		str	r3, [r7, #24]
 640:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2204              		.loc 1 640 25
 2205 00a4 0223     		movs	r3, #2
 2206 00a6 FB61     		str	r3, [r7, #28]
 641:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2207              		.loc 1 641 3
 2208 00a8 07F11003 		add	r3, r7, #16
 2209 00ac 1946     		mov	r1, r3
 2210 00ae 1F48     		ldr	r0, .L79+4
 2211 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 */
 644:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 2212              		.loc 1 644 23
 2213 00b4 C023     		movs	r3, #192
 2214 00b6 3B61     		str	r3, [r7, #16]
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2215              		.loc 1 645 24
 2216 00b8 0023     		movs	r3, #0
 2217 00ba 7B61     		str	r3, [r7, #20]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2218              		.loc 1 646 24
 2219 00bc 0123     		movs	r3, #1
 2220 00be BB61     		str	r3, [r7, #24]
 647:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2221              		.loc 1 647 3
 2222 00c0 07F11003 		add	r3, r7, #16
 2223 00c4 1946     		mov	r1, r3
 2224 00c6 1A48     		ldr	r0, .L79+8
 2225 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /*Configure GPIO pin : PB10 */
 650:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 2226              		.loc 1 650 23
 2227 00cc 4FF48063 		mov	r3, #1024
 2228 00d0 3B61     		str	r3, [r7, #16]
 651:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2229              		.loc 1 651 24
 2230 00d2 0023     		movs	r3, #0
 2231 00d4 7B61     		str	r3, [r7, #20]
 652:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 2232              		.loc 1 652 24
 2233 00d6 0223     		movs	r3, #2
 2234 00d8 BB61     		str	r3, [r7, #24]
 653:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2235              		.loc 1 653 3
 2236 00da 07F11003 		add	r3, r7, #16
 2237 00de 1946     		mov	r1, r3
 2238 00e0 1448     		ldr	r0, .L79+12
 2239 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 51


 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   /*Configure GPIO pins : PA8 PA10 */
 656:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_10;
 2240              		.loc 1 656 23
 2241 00e6 4FF4A063 		mov	r3, #1280
 2242 00ea 3B61     		str	r3, [r7, #16]
 657:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2243              		.loc 1 657 24
 2244 00ec 0123     		movs	r3, #1
 2245 00ee 7B61     		str	r3, [r7, #20]
 658:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2246              		.loc 1 658 24
 2247 00f0 0023     		movs	r3, #0
 2248 00f2 BB61     		str	r3, [r7, #24]
 659:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2249              		.loc 1 659 25
 2250 00f4 0223     		movs	r3, #2
 2251 00f6 FB61     		str	r3, [r7, #28]
 660:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2252              		.loc 1 660 3
 2253 00f8 07F11003 		add	r3, r7, #16
 2254 00fc 1946     		mov	r1, r3
 2255 00fe 0C48     		ldr	r0, .L79+8
 2256 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 */
 663:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 2257              		.loc 1 663 23
 2258 0104 1823     		movs	r3, #24
 2259 0106 3B61     		str	r3, [r7, #16]
 664:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2260              		.loc 1 664 24
 2261 0108 0123     		movs	r3, #1
 2262 010a 7B61     		str	r3, [r7, #20]
 665:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2263              		.loc 1 665 24
 2264 010c 0023     		movs	r3, #0
 2265 010e BB61     		str	r3, [r7, #24]
 666:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2266              		.loc 1 666 25
 2267 0110 0223     		movs	r3, #2
 2268 0112 FB61     		str	r3, [r7, #28]
 667:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2269              		.loc 1 667 3
 2270 0114 07F11003 		add	r3, r7, #16
 2271 0118 1946     		mov	r1, r3
 2272 011a 0648     		ldr	r0, .L79+12
 2273 011c FFF7FEFF 		bl	HAL_GPIO_Init
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** }
 2274              		.loc 1 669 1
 2275 0120 00BF     		nop
 2276 0122 2037     		adds	r7, r7, #32
 2277              	.LCFI41:
 2278              		.cfi_def_cfa_offset 8
 2279 0124 BD46     		mov	sp, r7
 2280              	.LCFI42:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 52


 2281              		.cfi_def_cfa_register 13
 2282              		@ sp needed
 2283 0126 80BD     		pop	{r7, pc}
 2284              	.L80:
 2285              		.align	2
 2286              	.L79:
 2287 0128 00100240 		.word	1073876992
 2288 012c 00100140 		.word	1073811456
 2289 0130 00080140 		.word	1073809408
 2290 0134 000C0140 		.word	1073810432
 2291              		.cfi_endproc
 2292              	.LFE76:
 2294              		.section	.text.Error_Handler,"ax",%progbits
 2295              		.align	1
 2296              		.global	Error_Handler
 2297              		.syntax unified
 2298              		.thumb
 2299              		.thumb_func
 2300              		.fpu softvfp
 2302              	Error_Handler:
 2303              	.LFB77:
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /* USER CODE END 4 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** /**
 676:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 677:Core/Src/main.c ****   * @retval None
 678:Core/Src/main.c ****   */
 679:Core/Src/main.c **** void Error_Handler(void)
 680:Core/Src/main.c **** {
 2304              		.loc 1 680 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 0
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
 2309 0000 80B4     		push	{r7}
 2310              	.LCFI43:
 2311              		.cfi_def_cfa_offset 4
 2312              		.cfi_offset 7, -4
 2313 0002 00AF     		add	r7, sp, #0
 2314              	.LCFI44:
 2315              		.cfi_def_cfa_register 7
 2316              	.LBB8:
 2317              	.LBB9:
 2318              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 53


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 54


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 55


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2319              		.loc 2 142 3
 2320              		.syntax unified
 2321              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2322 0004 72B6     		cpsid i
 2323              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2324              		.loc 2 143 1
 2325              		.thumb
 2326              		.syntax unified
 2327 0006 00BF     		nop
 2328              	.L82:
 2329              	.LBE9:
 2330              	.LBE8:
 681:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 682:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 683:Core/Src/main.c ****   __disable_irq();
 684:Core/Src/main.c ****   while (1)
 2331              		.loc 1 684 9 discriminator 1
 2332 0008 FEE7     		b	.L82
 2333              		.cfi_endproc
 2334              	.LFE77:
 2336              		.text
 2337              	.Letext0:
 2338              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 2339              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 2340              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2341              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2342              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2343              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2344              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2345              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2346              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2347              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2348              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 2349              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2350              		.file 15 "Core/Inc/fonts.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:20     .bss.hadc1:00000000 hadc1
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:17     .bss.hadc1:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:27     .bss.hi2c1:00000000 hi2c1
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:24     .bss.hi2c1:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:34     .bss.htim2:00000000 htim2
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:31     .bss.htim2:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:41     .bss.htim4:00000000 htim4
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:38     .bss.htim4:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:48     .bss.MenuAtual:00000000 MenuAtual
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:45     .bss.MenuAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:55     .bss.counterOpcao:00000000 counterOpcao
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:52     .bss.counterOpcao:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:62     .bss.counterPrev:00000000 counterPrev
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:59     .bss.counterPrev:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:69     .bss.txtCounter:00000000 txtCounter
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:66     .bss.txtCounter:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:75     .bss.ligarMotor:00000000 ligarMotor
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:76     .bss.ligarMotor:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:81     .data.StepAlta:00000000 StepAlta
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:88     .bss.TempVolts:00000000 TempVolts
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:85     .bss.TempVolts:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:95     .bss.TempCelsius:00000000 TempCelsius
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:92     .bss.TempCelsius:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:102    .bss.TempCelsiusUser:00000000 TempCelsiusUser
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:99     .bss.TempCelsiusUser:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:109    .bss.TempCelsiusMed:00000000 TempCelsiusMed
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:106    .bss.TempCelsiusMed:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:116    .bss.TempSoma:00000000 TempSoma
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:113    .bss.TempSoma:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:123    .bss.setpoint:00000000 setpoint
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:120    .bss.setpoint:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:130    .bss.setpointUser:00000000 setpointUser
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:127    .bss.setpointUser:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:137    .bss.kp:00000000 kp
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:134    .bss.kp:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:144    .bss.ki:00000000 ki
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:141    .bss.ki:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:151    .bss.kd:00000000 kd
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:148    .bss.kd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:158    .bss.erroAtual:00000000 erroAtual
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:155    .bss.erroAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:165    .bss.erroInt:00000000 erroInt
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:162    .bss.erroInt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:172    .bss.erroAnt:00000000 erroAnt
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:169    .bss.erroAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:179    .bss.Ts:00000000 Ts
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:176    .bss.Ts:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:186    .bss.yiAnt:00000000 yiAnt
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:183    .bss.yiAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:193    .bss.ydAnt:00000000 ydAnt
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:190    .bss.ydAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:200    .bss.Nd:00000000 Nd
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:197    .bss.Nd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:207    .bss.tim4ms:00000000 tim4ms
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:204    .bss.tim4ms:00000000 $d
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 57


C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:214    .bss.y:00000000 y
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:211    .bss.y:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:221    .bss.yPWM:00000000 yPWM
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:218    .bss.yPWM:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:228    .data.yPWMint:00000000 yPWMint
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:225    .data.yPWMint:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:235    .bss.yp:00000000 yp
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:232    .bss.yp:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:242    .bss.yi:00000000 yi
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:239    .bss.yi:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:249    .bss.yd:00000000 yd
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:246    .bss.yd:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:264    .text.calcPid:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:272    .text.calcPid:00000000 calcPid
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:559    .text.calcPid:00000210 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:588    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:595    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:655    .text.HAL_TIM_PeriodElapsedCallback:00000040 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:661    .text.fastPulse:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:668    .text.fastPulse:00000000 fastPulse
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:701    .text.fastPulse:00000024 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:706    .rodata:00000000 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:724    .text.MenuHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:731    .text.MenuHandler:00000000 MenuHandler
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:985    .text.MenuHandler:000001d0 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1004   .text.ClickHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1011   .text.ClickHandler:00000000 ClickHandler
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1096   .text.ClickHandler:00000068 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1107   .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1114   .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1467   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2104   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1708   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1955   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1601   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1787   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1420   .text.main:00000218 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1460   .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2302   .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1595   .text.MX_ADC1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1696   .text.MX_ADC1_Init:00000074 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1702   .text.MX_I2C1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1774   .text.MX_I2C1_Init:00000050 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1781   .text.MX_TIM2_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1944   .text.MX_TIM2_Init:000000ec $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:1949   .text.MX_TIM4_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2089   .text.MX_TIM4_Init:000000c8 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2098   .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2287   .text.MX_GPIO_Init:00000128 $d
C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s:2295   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2f
__aeabi_fsub
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccDmvkrD.s 			page 58


__aeabi_fmul
__aeabi_fadd
__aeabi_dadd
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fdiv
__aeabi_f2uiz
HAL_GPIO_WritePin
HAL_Delay
__aeabi_f2iz
__aeabi_i2f
itoa
SSD1306_GotoXY
SSD1306_Puts
SSD1306_UpdateScreen
SSD1306_Clear
Font_7x10
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Stop_IT
__aeabi_dmul
__aeabi_ui2d
HAL_GPIO_ReadPin
HAL_Init
SSD1306_Init
HAL_TIM_PWM_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_GPIO_Init
