ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	hadc1
  16              		.section	.bss.hadc1,"aw",%nobits
  17              		.align	2
  20              	hadc1:
  21 0000 00000000 		.space	48
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.global	hi2c1
  23              		.section	.bss.hi2c1,"aw",%nobits
  24              		.align	2
  27              	hi2c1:
  28 0000 00000000 		.space	84
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.global	htim2
  30              		.section	.bss.htim2,"aw",%nobits
  31              		.align	2
  34              	htim2:
  35 0000 00000000 		.space	72
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	htim4
  37              		.section	.bss.htim4,"aw",%nobits
  38              		.align	2
  41              	htim4:
  42 0000 00000000 		.space	72
  42      00000000 
  42      00000000 
  42      00000000 
  42      00000000 
  43              		.global	MenuAtual
  44              		.section	.bss.MenuAtual,"aw",%nobits
  45              		.align	2
  48              	MenuAtual:
  49 0000 00000000 		.space	4
  50              		.global	counterOpcao
  51              		.section	.bss.counterOpcao,"aw",%nobits
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 2


  52              		.align	2
  55              	counterOpcao:
  56 0000 00000000 		.space	4
  57              		.global	counterPrev
  58              		.section	.bss.counterPrev,"aw",%nobits
  59              		.align	2
  62              	counterPrev:
  63 0000 00000000 		.space	4
  64              		.global	txtCounter
  65              		.section	.bss.txtCounter,"aw",%nobits
  66              		.align	2
  69              	txtCounter:
  70 0000 00000000 		.space	10
  70      00000000 
  70      0000
  71              		.global	ligarMotor
  72              		.section	.bss.ligarMotor,"aw",%nobits
  75              	ligarMotor:
  76 0000 00       		.space	1
  77              		.global	StepAlta
  78              		.section	.data.StepAlta,"aw"
  81              	StepAlta:
  82 0000 01       		.byte	1
  83              		.global	TempVolts
  84              		.section	.bss.TempVolts,"aw",%nobits
  85              		.align	2
  88              	TempVolts:
  89 0000 00000000 		.space	4
  90              		.global	TempCelsius
  91              		.section	.bss.TempCelsius,"aw",%nobits
  92              		.align	2
  95              	TempCelsius:
  96 0000 00000000 		.space	4
  97              		.global	setpoint
  98              		.section	.bss.setpoint,"aw",%nobits
  99              		.align	2
 102              	setpoint:
 103 0000 00000000 		.space	4
 104              		.global	kp
 105              		.section	.bss.kp,"aw",%nobits
 106              		.align	2
 109              	kp:
 110 0000 00000000 		.space	4
 111              		.global	ki
 112              		.section	.bss.ki,"aw",%nobits
 113              		.align	2
 116              	ki:
 117 0000 00000000 		.space	4
 118              		.global	kd
 119              		.section	.bss.kd,"aw",%nobits
 120              		.align	2
 123              	kd:
 124 0000 00000000 		.space	4
 125              		.global	erroAtual
 126              		.section	.bss.erroAtual,"aw",%nobits
 127              		.align	2
 130              	erroAtual:
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 3


 131 0000 00000000 		.space	4
 132              		.global	erroInt
 133              		.section	.bss.erroInt,"aw",%nobits
 134              		.align	2
 137              	erroInt:
 138 0000 00000000 		.space	4
 139              		.global	erroAnt
 140              		.section	.bss.erroAnt,"aw",%nobits
 141              		.align	2
 144              	erroAnt:
 145 0000 00000000 		.space	4
 146              		.global	Ts
 147              		.section	.bss.Ts,"aw",%nobits
 148              		.align	2
 151              	Ts:
 152 0000 00000000 		.space	4
 153              		.global	yiAnt
 154              		.section	.bss.yiAnt,"aw",%nobits
 155              		.align	2
 158              	yiAnt:
 159 0000 00000000 		.space	4
 160              		.global	ydAnt
 161              		.section	.bss.ydAnt,"aw",%nobits
 162              		.align	2
 165              	ydAnt:
 166 0000 00000000 		.space	4
 167              		.global	Nd
 168              		.section	.bss.Nd,"aw",%nobits
 169              		.align	2
 172              	Nd:
 173 0000 00000000 		.space	4
 174              		.global	tim4ms
 175              		.section	.bss.tim4ms,"aw",%nobits
 176              		.align	2
 179              	tim4ms:
 180 0000 00000000 		.space	4
 181              		.global	y
 182              		.section	.bss.y,"aw",%nobits
 183              		.align	2
 186              	y:
 187 0000 00000000 		.space	4
 188              		.global	yPWM
 189              		.section	.bss.yPWM,"aw",%nobits
 190              		.align	2
 193              	yPWM:
 194 0000 00000000 		.space	4
 195              		.global	yPWMint
 196              		.section	.data.yPWMint,"aw"
 197              		.align	2
 200              	yPWMint:
 201 0000 10270000 		.word	10000
 202              		.global	yp
 203              		.section	.bss.yp,"aw",%nobits
 204              		.align	2
 207              	yp:
 208 0000 00000000 		.space	4
 209              		.global	yi
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 4


 210              		.section	.bss.yi,"aw",%nobits
 211              		.align	2
 214              	yi:
 215 0000 00000000 		.space	4
 216              		.global	yd
 217              		.section	.bss.yd,"aw",%nobits
 218              		.align	2
 221              	yd:
 222 0000 00000000 		.space	4
 223              		.global	__aeabi_fsub
 224              		.global	__aeabi_fmul
 225              		.global	__aeabi_fadd
 226              		.global	__aeabi_f2d
 227              		.global	__aeabi_ddiv
 228              		.global	__aeabi_dadd
 229              		.global	__aeabi_d2f
 230              		.global	__aeabi_fcmpgt
 231              		.global	__aeabi_fcmplt
 232              		.global	__aeabi_fdiv
 233              		.global	__aeabi_f2uiz
 234              		.section	.text.calcPid,"ax",%progbits
 235              		.align	1
 236              		.global	calcPid
 237              		.arch armv7-m
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	calcPid:
 244              	.LFB65:
 245              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "ssd1306.h"
  26:Core/Src/main.c **** #include "fonts.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 5


  27:Core/Src/main.c **** #include "test.h"
  28:Core/Src/main.c **** #include "stdbool.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** // Display OLED
  55:Core/Src/main.c **** uint32_t MenuAtual = 0;
  56:Core/Src/main.c **** uint32_t counterOpcao = 0;
  57:Core/Src/main.c **** uint32_t counterPrev = 0;
  58:Core/Src/main.c **** char txtCounter[10];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** // Motor
  61:Core/Src/main.c **** _Bool ligarMotor = false;
  62:Core/Src/main.c **** _Bool StepAlta = true;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** // LM35
  65:Core/Src/main.c **** uint32_t TempVolts;
  66:Core/Src/main.c **** float TempCelsius;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** //PID
  69:Core/Src/main.c **** float setpoint, kp, ki, kd, erroAtual, erroInt, erroAnt, Ts, yiAnt, ydAnt, Nd,tim4ms, y, yPWM;
  70:Core/Src/main.c **** uint32_t yPWMint = 10000;
  71:Core/Src/main.c **** float yp, yi, yd;
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** static void MX_GPIO_Init(void);
  77:Core/Src/main.c **** static void MX_I2C1_Init(void);
  78:Core/Src/main.c **** static void MX_TIM4_Init(void);
  79:Core/Src/main.c **** static void MX_ADC1_Init(void);
  80:Core/Src/main.c **** static void MX_TIM2_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** void calcPid(void){
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 6


 246              		.loc 1 83 19
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 B0B5     		push	{r4, r5, r7, lr}
 251              	.LCFI0:
 252              		.cfi_def_cfa_offset 16
 253              		.cfi_offset 4, -16
 254              		.cfi_offset 5, -12
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 00AF     		add	r7, sp, #0
 258              	.LCFI1:
 259              		.cfi_def_cfa_register 7
  84:Core/Src/main.c ****     Ts = tim4ms;
 260              		.loc 1 84 8
 261 0004 734B     		ldr	r3, .L9
 262 0006 1B68     		ldr	r3, [r3]	@ float
 263 0008 734A     		ldr	r2, .L9+4
 264 000a 1360     		str	r3, [r2]	@ float
  85:Core/Src/main.c ****     
  86:Core/Src/main.c ****     erroAtual = setpoint - TempCelsius;
 265              		.loc 1 86 26
 266 000c 734B     		ldr	r3, .L9+8
 267 000e 1B68     		ldr	r3, [r3]	@ float
 268 0010 734A     		ldr	r2, .L9+12
 269 0012 1268     		ldr	r2, [r2]	@ float
 270 0014 1146     		mov	r1, r2
 271 0016 1846     		mov	r0, r3
 272 0018 FFF7FEFF 		bl	__aeabi_fsub
 273 001c 0346     		mov	r3, r0
 274 001e 1A46     		mov	r2, r3
 275              		.loc 1 86 15
 276 0020 704B     		ldr	r3, .L9+16
 277 0022 1A60     		str	r2, [r3]	@ float
  87:Core/Src/main.c ****     yp = kp*erroAtual;
 278              		.loc 1 87 12
 279 0024 704B     		ldr	r3, .L9+20
 280 0026 1B68     		ldr	r3, [r3]	@ float
 281 0028 6E4A     		ldr	r2, .L9+16
 282 002a 1268     		ldr	r2, [r2]	@ float
 283 002c 1146     		mov	r1, r2
 284 002e 1846     		mov	r0, r3
 285 0030 FFF7FEFF 		bl	__aeabi_fmul
 286 0034 0346     		mov	r3, r0
 287 0036 1A46     		mov	r2, r3
 288              		.loc 1 87 8
 289 0038 6C4B     		ldr	r3, .L9+24
 290 003a 1A60     		str	r2, [r3]	@ float
  88:Core/Src/main.c ****     yi = ki*Ts*(erroAtual+erroAnt)/2.0 + yiAnt;
 291              		.loc 1 88 12
 292 003c 6C4B     		ldr	r3, .L9+28
 293 003e 1B68     		ldr	r3, [r3]	@ float
 294 0040 654A     		ldr	r2, .L9+4
 295 0042 1268     		ldr	r2, [r2]	@ float
 296 0044 1146     		mov	r1, r2
 297 0046 1846     		mov	r0, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 7


 298 0048 FFF7FEFF 		bl	__aeabi_fmul
 299 004c 0346     		mov	r3, r0
 300 004e 1C46     		mov	r4, r3
 301              		.loc 1 88 26
 302 0050 644B     		ldr	r3, .L9+16
 303 0052 1B68     		ldr	r3, [r3]	@ float
 304 0054 674A     		ldr	r2, .L9+32
 305 0056 1268     		ldr	r2, [r2]	@ float
 306 0058 1146     		mov	r1, r2
 307 005a 1846     		mov	r0, r3
 308 005c FFF7FEFF 		bl	__aeabi_fadd
 309 0060 0346     		mov	r3, r0
 310              		.loc 1 88 15
 311 0062 1946     		mov	r1, r3
 312 0064 2046     		mov	r0, r4
 313 0066 FFF7FEFF 		bl	__aeabi_fmul
 314 006a 0346     		mov	r3, r0
 315 006c 1846     		mov	r0, r3
 316 006e FFF7FEFF 		bl	__aeabi_f2d
 317              		.loc 1 88 35
 318 0072 4FF00002 		mov	r2, #0
 319 0076 4FF08043 		mov	r3, #1073741824
 320 007a FFF7FEFF 		bl	__aeabi_ddiv
 321 007e 0246     		mov	r2, r0
 322 0080 0B46     		mov	r3, r1
 323 0082 1446     		mov	r4, r2
 324 0084 1D46     		mov	r5, r3
 325              		.loc 1 88 40
 326 0086 5C4B     		ldr	r3, .L9+36
 327 0088 1B68     		ldr	r3, [r3]	@ float
 328 008a 1846     		mov	r0, r3
 329 008c FFF7FEFF 		bl	__aeabi_f2d
 330 0090 0246     		mov	r2, r0
 331 0092 0B46     		mov	r3, r1
 332 0094 2046     		mov	r0, r4
 333 0096 2946     		mov	r1, r5
 334 0098 FFF7FEFF 		bl	__aeabi_dadd
 335 009c 0246     		mov	r2, r0
 336 009e 0B46     		mov	r3, r1
 337 00a0 1046     		mov	r0, r2
 338 00a2 1946     		mov	r1, r3
 339 00a4 FFF7FEFF 		bl	__aeabi_d2f
 340 00a8 0346     		mov	r3, r0
 341              		.loc 1 88 8
 342 00aa 544A     		ldr	r2, .L9+40
 343 00ac 1360     		str	r3, [r2]	@ float
  89:Core/Src/main.c ****     yd = kd*Nd*(erroAtual-erroAnt) + (1-Nd*Ts)*ydAnt;
 344              		.loc 1 89 12
 345 00ae 544B     		ldr	r3, .L9+44
 346 00b0 1B68     		ldr	r3, [r3]	@ float
 347 00b2 544A     		ldr	r2, .L9+48
 348 00b4 1268     		ldr	r2, [r2]	@ float
 349 00b6 1146     		mov	r1, r2
 350 00b8 1846     		mov	r0, r3
 351 00ba FFF7FEFF 		bl	__aeabi_fmul
 352 00be 0346     		mov	r3, r0
 353 00c0 1C46     		mov	r4, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 8


 354              		.loc 1 89 26
 355 00c2 484B     		ldr	r3, .L9+16
 356 00c4 1B68     		ldr	r3, [r3]	@ float
 357 00c6 4B4A     		ldr	r2, .L9+32
 358 00c8 1268     		ldr	r2, [r2]	@ float
 359 00ca 1146     		mov	r1, r2
 360 00cc 1846     		mov	r0, r3
 361 00ce FFF7FEFF 		bl	__aeabi_fsub
 362 00d2 0346     		mov	r3, r0
 363              		.loc 1 89 15
 364 00d4 1946     		mov	r1, r3
 365 00d6 2046     		mov	r0, r4
 366 00d8 FFF7FEFF 		bl	__aeabi_fmul
 367 00dc 0346     		mov	r3, r0
 368 00de 1C46     		mov	r4, r3
 369              		.loc 1 89 43
 370 00e0 484B     		ldr	r3, .L9+48
 371 00e2 1B68     		ldr	r3, [r3]	@ float
 372 00e4 3C4A     		ldr	r2, .L9+4
 373 00e6 1268     		ldr	r2, [r2]	@ float
 374 00e8 1146     		mov	r1, r2
 375 00ea 1846     		mov	r0, r3
 376 00ec FFF7FEFF 		bl	__aeabi_fmul
 377 00f0 0346     		mov	r3, r0
 378              		.loc 1 89 40
 379 00f2 1946     		mov	r1, r3
 380 00f4 4FF07E50 		mov	r0, #1065353216
 381 00f8 FFF7FEFF 		bl	__aeabi_fsub
 382 00fc 0346     		mov	r3, r0
 383 00fe 1A46     		mov	r2, r3
 384              		.loc 1 89 47
 385 0100 414B     		ldr	r3, .L9+52
 386 0102 1B68     		ldr	r3, [r3]	@ float
 387 0104 1946     		mov	r1, r3
 388 0106 1046     		mov	r0, r2
 389 0108 FFF7FEFF 		bl	__aeabi_fmul
 390 010c 0346     		mov	r3, r0
 391              		.loc 1 89 36
 392 010e 1946     		mov	r1, r3
 393 0110 2046     		mov	r0, r4
 394 0112 FFF7FEFF 		bl	__aeabi_fadd
 395 0116 0346     		mov	r3, r0
 396 0118 1A46     		mov	r2, r3
 397              		.loc 1 89 8
 398 011a 3C4B     		ldr	r3, .L9+56
 399 011c 1A60     		str	r2, [r3]	@ float
  90:Core/Src/main.c ****     y = yp+yi+yd;
 400              		.loc 1 90 11
 401 011e 334B     		ldr	r3, .L9+24
 402 0120 1B68     		ldr	r3, [r3]	@ float
 403 0122 364A     		ldr	r2, .L9+40
 404 0124 1268     		ldr	r2, [r2]	@ float
 405 0126 1146     		mov	r1, r2
 406 0128 1846     		mov	r0, r3
 407 012a FFF7FEFF 		bl	__aeabi_fadd
 408 012e 0346     		mov	r3, r0
 409 0130 1A46     		mov	r2, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 9


 410              		.loc 1 90 14
 411 0132 364B     		ldr	r3, .L9+56
 412 0134 1B68     		ldr	r3, [r3]	@ float
 413 0136 1946     		mov	r1, r3
 414 0138 1046     		mov	r0, r2
 415 013a FFF7FEFF 		bl	__aeabi_fadd
 416 013e 0346     		mov	r3, r0
 417 0140 1A46     		mov	r2, r3
 418              		.loc 1 90 7
 419 0142 334B     		ldr	r3, .L9+60
 420 0144 1A60     		str	r2, [r3]	@ float
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     yiAnt = yi;
 421              		.loc 1 92 11
 422 0146 2D4B     		ldr	r3, .L9+40
 423 0148 1B68     		ldr	r3, [r3]	@ float
 424 014a 2B4A     		ldr	r2, .L9+36
 425 014c 1360     		str	r3, [r2]	@ float
  93:Core/Src/main.c ****     ydAnt = yd;
 426              		.loc 1 93 11
 427 014e 2F4B     		ldr	r3, .L9+56
 428 0150 1B68     		ldr	r3, [r3]	@ float
 429 0152 2D4A     		ldr	r2, .L9+52
 430 0154 1360     		str	r3, [r2]	@ float
  94:Core/Src/main.c ****     erroAnt = erroAtual;
 431              		.loc 1 94 13
 432 0156 234B     		ldr	r3, .L9+16
 433 0158 1B68     		ldr	r3, [r3]	@ float
 434 015a 264A     		ldr	r2, .L9+32
 435 015c 1360     		str	r3, [r2]	@ float
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     if (y>100)
 436              		.loc 1 96 10
 437 015e 2C4B     		ldr	r3, .L9+60
 438 0160 1B68     		ldr	r3, [r3]	@ float
 439              		.loc 1 96 8
 440 0162 2C49     		ldr	r1, .L9+64
 441 0164 1846     		mov	r0, r3
 442 0166 FFF7FEFF 		bl	__aeabi_fcmpgt
 443 016a 0346     		mov	r3, r0
 444 016c 002B     		cmp	r3, #0
 445 016e 03D0     		beq	.L8
  97:Core/Src/main.c ****     {
  98:Core/Src/main.c ****       y = 100;
 446              		.loc 1 98 9
 447 0170 274B     		ldr	r3, .L9+60
 448 0172 284A     		ldr	r2, .L9+64
 449 0174 1A60     		str	r2, [r3]	@ float
 450 0176 0DE0     		b	.L4
 451              	.L8:
  99:Core/Src/main.c ****     }
 100:Core/Src/main.c ****     else if (y<0)
 452              		.loc 1 100 15
 453 0178 254B     		ldr	r3, .L9+60
 454 017a 1B68     		ldr	r3, [r3]	@ float
 455              		.loc 1 100 13
 456 017c 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 10


 457 0180 1846     		mov	r0, r3
 458 0182 FFF7FEFF 		bl	__aeabi_fcmplt
 459 0186 0346     		mov	r3, r0
 460 0188 002B     		cmp	r3, #0
 461 018a 03D0     		beq	.L4
 101:Core/Src/main.c ****     {
 102:Core/Src/main.c ****       y = 0;
 462              		.loc 1 102 9
 463 018c 204B     		ldr	r3, .L9+60
 464 018e 4FF00002 		mov	r2, #0
 465 0192 1A60     		str	r2, [r3]	@ float
 466              	.L4:
 103:Core/Src/main.c ****     }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     yPWM = 10000*(100-y)/100;
 467              		.loc 1 105 22
 468 0194 1E4B     		ldr	r3, .L9+60
 469 0196 1B68     		ldr	r3, [r3]	@ float
 470 0198 1946     		mov	r1, r3
 471 019a 1E48     		ldr	r0, .L9+64
 472 019c FFF7FEFF 		bl	__aeabi_fsub
 473 01a0 0346     		mov	r3, r0
 474              		.loc 1 105 17
 475 01a2 1D49     		ldr	r1, .L9+68
 476 01a4 1846     		mov	r0, r3
 477 01a6 FFF7FEFF 		bl	__aeabi_fmul
 478 01aa 0346     		mov	r3, r0
 479              		.loc 1 105 25
 480 01ac 1949     		ldr	r1, .L9+64
 481 01ae 1846     		mov	r0, r3
 482 01b0 FFF7FEFF 		bl	__aeabi_fdiv
 483 01b4 0346     		mov	r3, r0
 484 01b6 1A46     		mov	r2, r3
 485              		.loc 1 105 10
 486 01b8 184B     		ldr	r3, .L9+72
 487 01ba 1A60     		str	r2, [r3]	@ float
 106:Core/Src/main.c ****     //yPWM = htim2.Instance->ARR*(100)/100;
 107:Core/Src/main.c ****     htim2.Instance->CCR2 = yPWM;
 488              		.loc 1 107 26
 489 01bc 174B     		ldr	r3, .L9+72
 490 01be 1B68     		ldr	r3, [r3]	@ float
 491              		.loc 1 107 10
 492 01c0 174A     		ldr	r2, .L9+76
 493 01c2 1468     		ldr	r4, [r2]
 494              		.loc 1 107 26
 495 01c4 1846     		mov	r0, r3
 496 01c6 FFF7FEFF 		bl	__aeabi_f2uiz
 497 01ca 0346     		mov	r3, r0
 498 01cc A363     		str	r3, [r4, #56]
 108:Core/Src/main.c ****     
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     
 111:Core/Src/main.c **** }
 499              		.loc 1 111 1
 500 01ce 00BF     		nop
 501 01d0 B0BD     		pop	{r4, r5, r7, pc}
 502              	.L10:
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 11


 503 01d2 00BF     		.align	2
 504              	.L9:
 505 01d4 00000000 		.word	tim4ms
 506 01d8 00000000 		.word	Ts
 507 01dc 00000000 		.word	setpoint
 508 01e0 00000000 		.word	TempCelsius
 509 01e4 00000000 		.word	erroAtual
 510 01e8 00000000 		.word	kp
 511 01ec 00000000 		.word	yp
 512 01f0 00000000 		.word	ki
 513 01f4 00000000 		.word	erroAnt
 514 01f8 00000000 		.word	yiAnt
 515 01fc 00000000 		.word	yi
 516 0200 00000000 		.word	kd
 517 0204 00000000 		.word	Nd
 518 0208 00000000 		.word	ydAnt
 519 020c 00000000 		.word	yd
 520 0210 00000000 		.word	y
 521 0214 0000C842 		.word	1120403456
 522 0218 00401C46 		.word	1176256512
 523 021c 00000000 		.word	yPWM
 524 0220 00000000 		.word	htim2
 525              		.cfi_endproc
 526              	.LFE65:
 528              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_TIM_PeriodElapsedCallback
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu softvfp
 536              	HAL_TIM_PeriodElapsedCallback:
 537              	.LFB66:
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim) // Interrupt do passo do motor
 116:Core/Src/main.c **** {
 538              		.loc 1 116 1
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              	.LCFI2:
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              	.LCFI3:
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI4:
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 117:Core/Src/main.c ****   if(StepAlta)
 554              		.loc 1 117 6
 555 0008 0D4B     		ldr	r3, .L14
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 12


 556 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557              		.loc 1 117 5
 558 000c 002B     		cmp	r3, #0
 559 000e 08D0     		beq	.L12
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1); // Pino Step
 560              		.loc 1 119 5
 561 0010 0122     		movs	r2, #1
 562 0012 0821     		movs	r1, #8
 563 0014 0B48     		ldr	r0, .L14+4
 564 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120:Core/Src/main.c ****     StepAlta = false;
 565              		.loc 1 120 14
 566 001a 094B     		ldr	r3, .L14
 567 001c 0022     		movs	r2, #0
 568 001e 1A70     		strb	r2, [r3]
 569 0020 07E0     		b	.L13
 570              	.L12:
 121:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 1);
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   else
 124:Core/Src/main.c ****   {
 125:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0); // Pino Step
 571              		.loc 1 125 5
 572 0022 0022     		movs	r2, #0
 573 0024 0821     		movs	r1, #8
 574 0026 0748     		ldr	r0, .L14+4
 575 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 126:Core/Src/main.c ****     StepAlta = true;
 576              		.loc 1 126 14
 577 002c 044B     		ldr	r3, .L14
 578 002e 0122     		movs	r2, #1
 579 0030 1A70     		strb	r2, [r3]
 580              	.L13:
 127:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   calcPid(); 
 581              		.loc 1 129 3
 582 0032 FFF7FEFF 		bl	calcPid
 130:Core/Src/main.c **** }
 583              		.loc 1 130 1
 584 0036 00BF     		nop
 585 0038 0837     		adds	r7, r7, #8
 586              	.LCFI5:
 587              		.cfi_def_cfa_offset 8
 588 003a BD46     		mov	sp, r7
 589              	.LCFI6:
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 003c 80BD     		pop	{r7, pc}
 593              	.L15:
 594 003e 00BF     		.align	2
 595              	.L14:
 596 0040 00000000 		.word	StepAlta
 597 0044 000C0140 		.word	1073810432
 598              		.cfi_endproc
 599              	.LFE66:
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 13


 601              		.section	.text.fastPulse,"ax",%progbits
 602              		.align	1
 603              		.global	fastPulse
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu softvfp
 609              	fastPulse:
 610              	.LFB67:
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void fastPulse(void)
 133:Core/Src/main.c **** {
 611              		.loc 1 133 1
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615 0000 80B5     		push	{r7, lr}
 616              	.LCFI7:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 00AF     		add	r7, sp, #0
 621              	.LCFI8:
 622              		.cfi_def_cfa_register 7
 134:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1); // Pino Step
 623              		.loc 1 134 3
 624 0004 0122     		movs	r2, #1
 625 0006 0821     		movs	r1, #8
 626 0008 0648     		ldr	r0, .L17
 627 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 135:Core/Src/main.c ****   HAL_Delay(1);
 628              		.loc 1 135 3
 629 000e 0120     		movs	r0, #1
 630 0010 FFF7FEFF 		bl	HAL_Delay
 136:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0); // Pino Step
 631              		.loc 1 136 3
 632 0014 0022     		movs	r2, #0
 633 0016 0821     		movs	r1, #8
 634 0018 0248     		ldr	r0, .L17
 635 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Core/Src/main.c **** }
 636              		.loc 1 137 1
 637 001e 00BF     		nop
 638 0020 80BD     		pop	{r7, pc}
 639              	.L18:
 640 0022 00BF     		.align	2
 641              	.L17:
 642 0024 000C0140 		.word	1073810432
 643              		.cfi_endproc
 644              	.LFE67:
 646              		.section	.rodata
 647              		.align	2
 648              	.LC0:
 649 0000 31204F75 		.ascii	"1 Outro Menu\000"
 649      74726F20 
 649      4D656E75 
 649      00
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 14


 650              		.global	__aeabi_f2iz
 651 000d 000000   		.align	2
 652              	.LC1:
 653 0010 2C00     		.ascii	",\000"
 654              		.global	__aeabi_i2f
 655 0012 0000     		.align	2
 656              	.LC2:
 657 0014 3020566F 		.ascii	"0 Voltar\000"
 657      6C746172 
 657      00
 658 001d 000000   		.align	2
 659              	.LC3:
 660 0020 31204C69 		.ascii	"1 Ligar Motor\000"
 660      67617220 
 660      4D6F746F 
 660      7200
 661 002e 0000     		.align	2
 662              	.LC4:
 663 0030 32204465 		.ascii	"2 Desligar Motor\000"
 663      736C6967 
 663      6172204D 
 663      6F746F72 
 663      00
 664              		.section	.text.MenuHandler,"ax",%progbits
 665              		.align	1
 666              		.global	MenuHandler
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	MenuHandler:
 673              	.LFB68:
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** void MenuHandler(void)
 140:Core/Src/main.c **** {
 674              		.loc 1 140 1
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678 0000 98B5     		push	{r3, r4, r7, lr}
 679              	.LCFI9:
 680              		.cfi_def_cfa_offset 16
 681              		.cfi_offset 3, -16
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 00AF     		add	r7, sp, #0
 686              	.LCFI10:
 687              		.cfi_def_cfa_register 7
 141:Core/Src/main.c ****   if(MenuAtual==0)
 688              		.loc 1 141 15
 689 0004 724B     		ldr	r3, .L23
 690 0006 1B68     		ldr	r3, [r3]
 691              		.loc 1 141 5
 692 0008 002B     		cmp	r3, #0
 693 000a 40F0A180 		bne	.L20
 142:Core/Src/main.c ****     {     
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 15


 143:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter     
 694              		.loc 1 143 7
 695 000e 714B     		ldr	r3, .L23+4
 696 0010 1B68     		ldr	r3, [r3]
 697 0012 0A22     		movs	r2, #10
 698 0014 7049     		ldr	r1, .L23+8
 699 0016 1846     		mov	r0, r3
 700 0018 FFF7FEFF 		bl	itoa
 144:Core/Src/main.c ****       //SSD1306_Clear();
 145:Core/Src/main.c ****       counterPrev = counterOpcao;
 701              		.loc 1 145 19
 702 001c 6D4B     		ldr	r3, .L23+4
 703 001e 1B68     		ldr	r3, [r3]
 704 0020 6E4A     		ldr	r2, .L23+12
 705 0022 1360     		str	r3, [r2]
 146:Core/Src/main.c ****       SSD1306_GotoXY(2, 2);
 706              		.loc 1 146 7
 707 0024 0221     		movs	r1, #2
 708 0026 0220     		movs	r0, #2
 709 0028 FFF7FEFF 		bl	SSD1306_GotoXY
 147:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 710              		.loc 1 147 7
 711 002c 0122     		movs	r2, #1
 712 002e 6C49     		ldr	r1, .L23+16
 713 0030 6948     		ldr	r0, .L23+8
 714 0032 FFF7FEFF 		bl	SSD1306_Puts
 148:Core/Src/main.c ****       SSD1306_GotoXY(2, 12);
 715              		.loc 1 148 7
 716 0036 0C21     		movs	r1, #12
 717 0038 0220     		movs	r0, #2
 718 003a FFF7FEFF 		bl	SSD1306_GotoXY
 149:Core/Src/main.c ****       SSD1306_Puts("1 Outro Menu", &Font_7x10, 1);
 719              		.loc 1 149 7
 720 003e 0122     		movs	r2, #1
 721 0040 6749     		ldr	r1, .L23+16
 722 0042 6848     		ldr	r0, .L23+20
 723 0044 FFF7FEFF 		bl	SSD1306_Puts
 150:Core/Src/main.c ****       SSD1306_GotoXY(2, 22);
 724              		.loc 1 150 7
 725 0048 1621     		movs	r1, #22
 726 004a 0220     		movs	r0, #2
 727 004c FFF7FEFF 		bl	SSD1306_GotoXY
 151:Core/Src/main.c ****       itoa(TempCelsius, txtCounter, 10);
 728              		.loc 1 151 7
 729 0050 654B     		ldr	r3, .L23+24
 730 0052 1B68     		ldr	r3, [r3]	@ float
 731 0054 1846     		mov	r0, r3
 732 0056 FFF7FEFF 		bl	__aeabi_f2iz
 733 005a 0346     		mov	r3, r0
 734 005c 0A22     		movs	r2, #10
 735 005e 5E49     		ldr	r1, .L23+8
 736 0060 1846     		mov	r0, r3
 737 0062 FFF7FEFF 		bl	itoa
 152:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 738              		.loc 1 152 7
 739 0066 0122     		movs	r2, #1
 740 0068 5D49     		ldr	r1, .L23+16
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 16


 741 006a 5B48     		ldr	r0, .L23+8
 742 006c FFF7FEFF 		bl	SSD1306_Puts
 153:Core/Src/main.c ****       SSD1306_GotoXY(16, 22);
 743              		.loc 1 153 7
 744 0070 1621     		movs	r1, #22
 745 0072 1020     		movs	r0, #16
 746 0074 FFF7FEFF 		bl	SSD1306_GotoXY
 154:Core/Src/main.c ****       SSD1306_Puts(",", &Font_7x10, 1);
 747              		.loc 1 154 7
 748 0078 0122     		movs	r2, #1
 749 007a 5949     		ldr	r1, .L23+16
 750 007c 5B48     		ldr	r0, .L23+28
 751 007e FFF7FEFF 		bl	SSD1306_Puts
 155:Core/Src/main.c ****       SSD1306_GotoXY(23, 22);
 752              		.loc 1 155 7
 753 0082 1621     		movs	r1, #22
 754 0084 1720     		movs	r0, #23
 755 0086 FFF7FEFF 		bl	SSD1306_GotoXY
 156:Core/Src/main.c ****       itoa(100*(TempCelsius-(int)TempCelsius), txtCounter, 10);  
 756              		.loc 1 156 28
 757 008a 574B     		ldr	r3, .L23+24
 758 008c 1C68     		ldr	r4, [r3]	@ float
 759              		.loc 1 156 29
 760 008e 564B     		ldr	r3, .L23+24
 761 0090 1B68     		ldr	r3, [r3]	@ float
 762 0092 1846     		mov	r0, r3
 763 0094 FFF7FEFF 		bl	__aeabi_f2iz
 764 0098 0346     		mov	r3, r0
 765              		.loc 1 156 28
 766 009a 1846     		mov	r0, r3
 767 009c FFF7FEFF 		bl	__aeabi_i2f
 768 00a0 0346     		mov	r3, r0
 769 00a2 1946     		mov	r1, r3
 770 00a4 2046     		mov	r0, r4
 771 00a6 FFF7FEFF 		bl	__aeabi_fsub
 772 00aa 0346     		mov	r3, r0
 773              		.loc 1 156 15
 774 00ac 5049     		ldr	r1, .L23+32
 775 00ae 1846     		mov	r0, r3
 776 00b0 FFF7FEFF 		bl	__aeabi_fmul
 777 00b4 0346     		mov	r3, r0
 778              		.loc 1 156 7
 779 00b6 1846     		mov	r0, r3
 780 00b8 FFF7FEFF 		bl	__aeabi_f2iz
 781 00bc 0346     		mov	r3, r0
 782 00be 0A22     		movs	r2, #10
 783 00c0 4549     		ldr	r1, .L23+8
 784 00c2 1846     		mov	r0, r3
 785 00c4 FFF7FEFF 		bl	itoa
 157:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 786              		.loc 1 157 7
 787 00c8 0122     		movs	r2, #1
 788 00ca 4549     		ldr	r1, .L23+16
 789 00cc 4248     		ldr	r0, .L23+8
 790 00ce FFF7FEFF 		bl	SSD1306_Puts
 158:Core/Src/main.c ****       
 159:Core/Src/main.c ****       SSD1306_GotoXY(2, 32);
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 17


 791              		.loc 1 159 7
 792 00d2 2021     		movs	r1, #32
 793 00d4 0220     		movs	r0, #2
 794 00d6 FFF7FEFF 		bl	SSD1306_GotoXY
 160:Core/Src/main.c ****       itoa(yp, txtCounter, 10);
 795              		.loc 1 160 7
 796 00da 464B     		ldr	r3, .L23+36
 797 00dc 1B68     		ldr	r3, [r3]	@ float
 798 00de 1846     		mov	r0, r3
 799 00e0 FFF7FEFF 		bl	__aeabi_f2iz
 800 00e4 0346     		mov	r3, r0
 801 00e6 0A22     		movs	r2, #10
 802 00e8 3B49     		ldr	r1, .L23+8
 803 00ea 1846     		mov	r0, r3
 804 00ec FFF7FEFF 		bl	itoa
 161:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 805              		.loc 1 161 7
 806 00f0 0122     		movs	r2, #1
 807 00f2 3B49     		ldr	r1, .L23+16
 808 00f4 3848     		ldr	r0, .L23+8
 809 00f6 FFF7FEFF 		bl	SSD1306_Puts
 162:Core/Src/main.c ****       SSD1306_GotoXY(2, 42);
 810              		.loc 1 162 7
 811 00fa 2A21     		movs	r1, #42
 812 00fc 0220     		movs	r0, #2
 813 00fe FFF7FEFF 		bl	SSD1306_GotoXY
 163:Core/Src/main.c ****       itoa(yi, txtCounter, 10);
 814              		.loc 1 163 7
 815 0102 3D4B     		ldr	r3, .L23+40
 816 0104 1B68     		ldr	r3, [r3]	@ float
 817 0106 1846     		mov	r0, r3
 818 0108 FFF7FEFF 		bl	__aeabi_f2iz
 819 010c 0346     		mov	r3, r0
 820 010e 0A22     		movs	r2, #10
 821 0110 3149     		ldr	r1, .L23+8
 822 0112 1846     		mov	r0, r3
 823 0114 FFF7FEFF 		bl	itoa
 164:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 824              		.loc 1 164 7
 825 0118 0122     		movs	r2, #1
 826 011a 3149     		ldr	r1, .L23+16
 827 011c 2E48     		ldr	r0, .L23+8
 828 011e FFF7FEFF 		bl	SSD1306_Puts
 165:Core/Src/main.c ****       SSD1306_GotoXY(2, 52);
 829              		.loc 1 165 7
 830 0122 3421     		movs	r1, #52
 831 0124 0220     		movs	r0, #2
 832 0126 FFF7FEFF 		bl	SSD1306_GotoXY
 166:Core/Src/main.c ****       itoa(y, txtCounter, 10);
 833              		.loc 1 166 7
 834 012a 344B     		ldr	r3, .L23+44
 835 012c 1B68     		ldr	r3, [r3]	@ float
 836 012e 1846     		mov	r0, r3
 837 0130 FFF7FEFF 		bl	__aeabi_f2iz
 838 0134 0346     		mov	r3, r0
 839 0136 0A22     		movs	r2, #10
 840 0138 2749     		ldr	r1, .L23+8
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 18


 841 013a 1846     		mov	r0, r3
 842 013c FFF7FEFF 		bl	itoa
 167:Core/Src/main.c ****       SSD1306_Puts(txtCounter, &Font_7x10, 1);
 843              		.loc 1 167 7
 844 0140 0122     		movs	r2, #1
 845 0142 2749     		ldr	r1, .L23+16
 846 0144 2448     		ldr	r0, .L23+8
 847 0146 FFF7FEFF 		bl	SSD1306_Puts
 168:Core/Src/main.c ****              
 169:Core/Src/main.c ****       SSD1306_UpdateScreen();
 848              		.loc 1 169 7
 849 014a FFF7FEFF 		bl	SSD1306_UpdateScreen
 170:Core/Src/main.c ****       
 171:Core/Src/main.c ****     }
 172:Core/Src/main.c ****     else if (MenuAtual==1)
 173:Core/Src/main.c ****     {      
 174:Core/Src/main.c ****       itoa(counterOpcao, txtCounter, 10); // Coloca valor do counter na txtCounter
 175:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 176:Core/Src/main.c ****       {
 177:Core/Src/main.c ****         SSD1306_Clear();
 178:Core/Src/main.c ****         counterPrev = counterOpcao;
 179:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 180:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 181:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 182:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 183:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 184:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 185:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 186:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 187:Core/Src/main.c ****         
 188:Core/Src/main.c ****         SSD1306_UpdateScreen();
 189:Core/Src/main.c ****       }
 190:Core/Src/main.c ****     }   
 191:Core/Src/main.c **** }
 850              		.loc 1 191 1
 851 014e 3CE0     		b	.L22
 852              	.L20:
 172:Core/Src/main.c ****     {      
 853              		.loc 1 172 23
 854 0150 1F4B     		ldr	r3, .L23
 855 0152 1B68     		ldr	r3, [r3]
 172:Core/Src/main.c ****     {      
 856              		.loc 1 172 13
 857 0154 012B     		cmp	r3, #1
 858 0156 38D1     		bne	.L22
 174:Core/Src/main.c ****       if (counterPrev != counterOpcao) // Atualiza tela so se mudar contador
 859              		.loc 1 174 7
 860 0158 1E4B     		ldr	r3, .L23+4
 861 015a 1B68     		ldr	r3, [r3]
 862 015c 0A22     		movs	r2, #10
 863 015e 1E49     		ldr	r1, .L23+8
 864 0160 1846     		mov	r0, r3
 865 0162 FFF7FEFF 		bl	itoa
 175:Core/Src/main.c ****       {
 866              		.loc 1 175 23
 867 0166 1D4B     		ldr	r3, .L23+12
 868 0168 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 19


 869 016a 1A4B     		ldr	r3, .L23+4
 870 016c 1B68     		ldr	r3, [r3]
 175:Core/Src/main.c ****       {
 871              		.loc 1 175 10
 872 016e 9A42     		cmp	r2, r3
 873 0170 2BD0     		beq	.L22
 177:Core/Src/main.c ****         counterPrev = counterOpcao;
 874              		.loc 1 177 9
 875 0172 FFF7FEFF 		bl	SSD1306_Clear
 178:Core/Src/main.c ****         SSD1306_GotoXY(2, 2);
 876              		.loc 1 178 21
 877 0176 174B     		ldr	r3, .L23+4
 878 0178 1B68     		ldr	r3, [r3]
 879 017a 184A     		ldr	r2, .L23+12
 880 017c 1360     		str	r3, [r2]
 179:Core/Src/main.c ****         SSD1306_Puts(txtCounter, &Font_7x10, 1);
 881              		.loc 1 179 9
 882 017e 0221     		movs	r1, #2
 883 0180 0220     		movs	r0, #2
 884 0182 FFF7FEFF 		bl	SSD1306_GotoXY
 180:Core/Src/main.c ****         SSD1306_GotoXY(2, 12);
 885              		.loc 1 180 9
 886 0186 0122     		movs	r2, #1
 887 0188 1549     		ldr	r1, .L23+16
 888 018a 1348     		ldr	r0, .L23+8
 889 018c FFF7FEFF 		bl	SSD1306_Puts
 181:Core/Src/main.c ****         SSD1306_Puts("0 Voltar", &Font_7x10, 1);
 890              		.loc 1 181 9
 891 0190 0C21     		movs	r1, #12
 892 0192 0220     		movs	r0, #2
 893 0194 FFF7FEFF 		bl	SSD1306_GotoXY
 182:Core/Src/main.c ****         SSD1306_GotoXY(2, 22);
 894              		.loc 1 182 9
 895 0198 0122     		movs	r2, #1
 896 019a 1149     		ldr	r1, .L23+16
 897 019c 1848     		ldr	r0, .L23+48
 898 019e FFF7FEFF 		bl	SSD1306_Puts
 183:Core/Src/main.c ****         SSD1306_Puts("1 Ligar Motor", &Font_7x10, 1);
 899              		.loc 1 183 9
 900 01a2 1621     		movs	r1, #22
 901 01a4 0220     		movs	r0, #2
 902 01a6 FFF7FEFF 		bl	SSD1306_GotoXY
 184:Core/Src/main.c ****         SSD1306_GotoXY(2, 32);
 903              		.loc 1 184 9
 904 01aa 0122     		movs	r2, #1
 905 01ac 0C49     		ldr	r1, .L23+16
 906 01ae 1548     		ldr	r0, .L23+52
 907 01b0 FFF7FEFF 		bl	SSD1306_Puts
 185:Core/Src/main.c ****         SSD1306_Puts("2 Desligar Motor", &Font_7x10, 1);
 908              		.loc 1 185 9
 909 01b4 2021     		movs	r1, #32
 910 01b6 0220     		movs	r0, #2
 911 01b8 FFF7FEFF 		bl	SSD1306_GotoXY
 186:Core/Src/main.c ****         
 912              		.loc 1 186 9
 913 01bc 0122     		movs	r2, #1
 914 01be 0849     		ldr	r1, .L23+16
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 20


 915 01c0 1148     		ldr	r0, .L23+56
 916 01c2 FFF7FEFF 		bl	SSD1306_Puts
 188:Core/Src/main.c ****       }
 917              		.loc 1 188 9
 918 01c6 FFF7FEFF 		bl	SSD1306_UpdateScreen
 919              	.L22:
 920              		.loc 1 191 1
 921 01ca 00BF     		nop
 922 01cc 98BD     		pop	{r3, r4, r7, pc}
 923              	.L24:
 924 01ce 00BF     		.align	2
 925              	.L23:
 926 01d0 00000000 		.word	MenuAtual
 927 01d4 00000000 		.word	counterOpcao
 928 01d8 00000000 		.word	txtCounter
 929 01dc 00000000 		.word	counterPrev
 930 01e0 00000000 		.word	Font_7x10
 931 01e4 00000000 		.word	.LC0
 932 01e8 00000000 		.word	TempCelsius
 933 01ec 10000000 		.word	.LC1
 934 01f0 0000C842 		.word	1120403456
 935 01f4 00000000 		.word	yp
 936 01f8 00000000 		.word	yi
 937 01fc 00000000 		.word	y
 938 0200 14000000 		.word	.LC2
 939 0204 20000000 		.word	.LC3
 940 0208 30000000 		.word	.LC4
 941              		.cfi_endproc
 942              	.LFE68:
 944              		.section	.text.ClickHandler,"ax",%progbits
 945              		.align	1
 946              		.global	ClickHandler
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu softvfp
 952              	ClickHandler:
 953              	.LFB69:
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** void ClickHandler(void)
 194:Core/Src/main.c **** {
 954              		.loc 1 194 1
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958 0000 80B5     		push	{r7, lr}
 959              	.LCFI11:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              	.LCFI12:
 965              		.cfi_def_cfa_register 7
 195:Core/Src/main.c ****   //SSD1306_Clear();
 196:Core/Src/main.c ****   if(MenuAtual == 0)
 966              		.loc 1 196 16
 967 0004 184B     		ldr	r3, .L30
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 21


 968 0006 1B68     		ldr	r3, [r3]
 969              		.loc 1 196 5
 970 0008 002B     		cmp	r3, #0
 971 000a 06D1     		bne	.L26
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     if(counterOpcao == 1)
 972              		.loc 1 198 21
 973 000c 174B     		ldr	r3, .L30+4
 974 000e 1B68     		ldr	r3, [r3]
 975              		.loc 1 198 7
 976 0010 012B     		cmp	r3, #1
 977 0012 02D1     		bne	.L26
 199:Core/Src/main.c ****     {
 200:Core/Src/main.c ****       MenuAtual = 1;
 978              		.loc 1 200 17
 979 0014 144B     		ldr	r3, .L30
 980 0016 0122     		movs	r2, #1
 981 0018 1A60     		str	r2, [r3]
 982              	.L26:
 201:Core/Src/main.c ****     }
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   if(MenuAtual == 1)
 983              		.loc 1 203 16
 984 001a 134B     		ldr	r3, .L30
 985 001c 1B68     		ldr	r3, [r3]
 986              		.loc 1 203 5
 987 001e 012B     		cmp	r3, #1
 988 0020 1CD1     		bne	.L27
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     if(counterOpcao == 1) //Ligar Interrupt
 989              		.loc 1 205 21
 990 0022 124B     		ldr	r3, .L30+4
 991 0024 1B68     		ldr	r3, [r3]
 992              		.loc 1 205 7
 993 0026 012B     		cmp	r3, #1
 994 0028 03D1     		bne	.L28
 206:Core/Src/main.c ****     {
 207:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim4);
 995              		.loc 1 207 7
 996 002a 1148     		ldr	r0, .L30+8
 997 002c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 998 0030 14E0     		b	.L27
 999              	.L28:
 208:Core/Src/main.c ****     }
 209:Core/Src/main.c ****     else if (counterOpcao == 2) // Desligar Interrupt
 1000              		.loc 1 209 27
 1001 0032 0E4B     		ldr	r3, .L30+4
 1002 0034 1B68     		ldr	r3, [r3]
 1003              		.loc 1 209 13
 1004 0036 022B     		cmp	r3, #2
 1005 0038 09D1     		bne	.L29
 210:Core/Src/main.c ****     {
 211:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 1006              		.loc 1 211 7
 1007 003a 0D48     		ldr	r0, .L30+8
 1008 003c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 212:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, 0);
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 22


 1009              		.loc 1 212 7
 1010 0040 0022     		movs	r2, #0
 1011 0042 4FF48071 		mov	r1, #256
 1012 0046 0B48     		ldr	r0, .L30+12
 1013 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1014 004c 06E0     		b	.L27
 1015              	.L29:
 213:Core/Src/main.c ****     }
 214:Core/Src/main.c ****     else if(counterOpcao == 0)
 1016              		.loc 1 214 26
 1017 004e 074B     		ldr	r3, .L30+4
 1018 0050 1B68     		ldr	r3, [r3]
 1019              		.loc 1 214 12
 1020 0052 002B     		cmp	r3, #0
 1021 0054 02D1     		bne	.L27
 215:Core/Src/main.c ****     {
 216:Core/Src/main.c ****       MenuAtual = 0;
 1022              		.loc 1 216 17
 1023 0056 044B     		ldr	r3, .L30
 1024 0058 0022     		movs	r2, #0
 1025 005a 1A60     		str	r2, [r3]
 1026              	.L27:
 217:Core/Src/main.c ****     }
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   counterPrev = 99; // Forca a atualizar a tela 
 1027              		.loc 1 219 15
 1028 005c 064B     		ldr	r3, .L30+16
 1029 005e 6322     		movs	r2, #99
 1030 0060 1A60     		str	r2, [r3]
 220:Core/Src/main.c **** }
 1031              		.loc 1 220 1
 1032 0062 00BF     		nop
 1033 0064 80BD     		pop	{r7, pc}
 1034              	.L31:
 1035 0066 00BF     		.align	2
 1036              	.L30:
 1037 0068 00000000 		.word	MenuAtual
 1038 006c 00000000 		.word	counterOpcao
 1039 0070 00000000 		.word	htim4
 1040 0074 00080140 		.word	1073809408
 1041 0078 00000000 		.word	counterPrev
 1042              		.cfi_endproc
 1043              	.LFE69:
 1045              		.global	__aeabi_ui2d
 1046              		.global	__aeabi_dmul
 1047              		.section	.text.main,"ax",%progbits
 1048              		.align	1
 1049              		.global	main
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu softvfp
 1055              	main:
 1056              	.LFB70:
 221:Core/Src/main.c **** /* USER CODE END PFP */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 23


 224:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* USER CODE END 0 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /**
 229:Core/Src/main.c ****   * @brief  The application entry point.
 230:Core/Src/main.c ****   * @retval int
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** int main(void)
 233:Core/Src/main.c **** {
 1057              		.loc 1 233 1
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 16
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              	.LCFI13:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 7, -8
 1065              		.cfi_offset 14, -4
 1066 0002 84B0     		sub	sp, sp, #16
 1067              	.LCFI14:
 1068              		.cfi_def_cfa_offset 24
 1069 0004 00AF     		add	r7, sp, #0
 1070              	.LCFI15:
 1071              		.cfi_def_cfa_register 7
 234:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 235:Core/Src/main.c ****   //OLED
 236:Core/Src/main.c ****   GPIO_PinState aState;
 237:Core/Src/main.c ****   GPIO_PinState aLastState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 1072              		.loc 1 237 30
 1073 0006 4021     		movs	r1, #64
 1074 0008 6748     		ldr	r0, .L44+24
 1075 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1076 000e 0346     		mov	r3, r0
 1077 0010 FB73     		strb	r3, [r7, #15]
 238:Core/Src/main.c ****   uint32_t counter = 0;
 1078              		.loc 1 238 12
 1079 0012 0023     		movs	r3, #0
 1080 0014 BB60     		str	r3, [r7, #8]
 239:Core/Src/main.c ****   
 240:Core/Src/main.c ****   
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END 1 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 247:Core/Src/main.c ****   HAL_Init();
 1081              		.loc 1 247 3
 1082 0016 FFF7FEFF 		bl	HAL_Init
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END Init */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* Configure the system clock */
 254:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 24


 1083              		.loc 1 254 3
 1084 001a FFF7FEFF 		bl	SystemClock_Config
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END SysInit */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* Initialize all configured peripherals */
 261:Core/Src/main.c ****   MX_GPIO_Init();
 1085              		.loc 1 261 3
 1086 001e FFF7FEFF 		bl	MX_GPIO_Init
 262:Core/Src/main.c ****   MX_I2C1_Init();
 1087              		.loc 1 262 3
 1088 0022 FFF7FEFF 		bl	MX_I2C1_Init
 263:Core/Src/main.c ****   MX_TIM4_Init();
 1089              		.loc 1 263 3
 1090 0026 FFF7FEFF 		bl	MX_TIM4_Init
 264:Core/Src/main.c ****   MX_ADC1_Init();
 1091              		.loc 1 264 3
 1092 002a FFF7FEFF 		bl	MX_ADC1_Init
 265:Core/Src/main.c ****   MX_TIM2_Init();
 1093              		.loc 1 265 3
 1094 002e FFF7FEFF 		bl	MX_TIM2_Init
 266:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   
 269:Core/Src/main.c ****   /* USER CODE END 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* Infinite loop */
 272:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 273:Core/Src/main.c ****   SSD1306_Init();
 1095              		.loc 1 273 3
 1096 0032 FFF7FEFF 		bl	SSD1306_Init
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   // Sentido Motor de Passo
 276:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 1097              		.loc 1 276 3
 1098 0036 0122     		movs	r2, #1
 1099 0038 1021     		movs	r1, #16
 1100 003a 5C48     		ldr	r0, .L44+28
 1101 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   //PID
 279:Core/Src/main.c ****   setpoint = 20.0;
 1102              		.loc 1 279 12
 1103 0040 5B4B     		ldr	r3, .L44+32
 1104 0042 5C4A     		ldr	r2, .L44+36
 1105 0044 1A60     		str	r2, [r3]	@ float
 280:Core/Src/main.c ****   TempCelsius = 13.0;
 1106              		.loc 1 280 15
 1107 0046 5C4B     		ldr	r3, .L44+40
 1108 0048 5C4A     		ldr	r2, .L44+44
 1109 004a 1A60     		str	r2, [r3]	@ float
 281:Core/Src/main.c ****   kp = 5.0; //Calibrar depois
 1110              		.loc 1 281 6
 1111 004c 5C4B     		ldr	r3, .L44+48
 1112 004e 5D4A     		ldr	r2, .L44+52
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 25


 1113 0050 1A60     		str	r2, [r3]	@ float
 282:Core/Src/main.c ****   ki = 0.05;
 1114              		.loc 1 282 6
 1115 0052 5D4B     		ldr	r3, .L44+56
 1116 0054 5D4A     		ldr	r2, .L44+60
 1117 0056 1A60     		str	r2, [r3]	@ float
 283:Core/Src/main.c ****   kd = 0;
 1118              		.loc 1 283 6
 1119 0058 5D4B     		ldr	r3, .L44+64
 1120 005a 4FF00002 		mov	r2, #0
 1121 005e 1A60     		str	r2, [r3]	@ float
 284:Core/Src/main.c ****   erroAnt = 0.0; //Qual o valor inicial?
 1122              		.loc 1 284 11
 1123 0060 5C4B     		ldr	r3, .L44+68
 1124 0062 4FF00002 		mov	r2, #0
 1125 0066 1A60     		str	r2, [r3]	@ float
 285:Core/Src/main.c ****   yiAnt = 0.0;
 1126              		.loc 1 285 9
 1127 0068 5B4B     		ldr	r3, .L44+72
 1128 006a 4FF00002 		mov	r2, #0
 1129 006e 1A60     		str	r2, [r3]	@ float
 286:Core/Src/main.c ****   ydAnt = 0.0;
 1130              		.loc 1 286 9
 1131 0070 5A4B     		ldr	r3, .L44+76
 1132 0072 4FF00002 		mov	r2, #0
 1133 0076 1A60     		str	r2, [r3]	@ float
 287:Core/Src/main.c ****   Nd = 1; // Filtro
 1134              		.loc 1 287 6
 1135 0078 594B     		ldr	r3, .L44+80
 1136 007a 4FF07E52 		mov	r2, #1065353216
 1137 007e 1A60     		str	r2, [r3]	@ float
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   // Timer de Aquecimento
 290:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 1138              		.loc 1 290 3
 1139 0080 0421     		movs	r1, #4
 1140 0082 5848     		ldr	r0, .L44+84
 1141 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   // Interrupt de passo / PID
 293:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1142              		.loc 1 293 3
 1143 0088 5748     		ldr	r0, .L44+88
 1144 008a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1145              	.L41:
 294:Core/Src/main.c ****   
 295:Core/Src/main.c ****   
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   while (1)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     // Contador Rot Button
 302:Core/Src/main.c ****     aState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 1146              		.loc 1 302 14
 1147 008e 4021     		movs	r1, #64
 1148 0090 4548     		ldr	r0, .L44+24
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 26


 1149 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1150 0096 0346     		mov	r3, r0
 1151 0098 FB71     		strb	r3, [r7, #7]
 303:Core/Src/main.c ****     if (aState != aLastState)
 1152              		.loc 1 303 8
 1153 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1154 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1155 009e 9A42     		cmp	r2, r3
 1156 00a0 1DD0     		beq	.L33
 304:Core/Src/main.c ****     {
 305:Core/Src/main.c ****       if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7) != aState)
 1157              		.loc 1 305 11
 1158 00a2 8021     		movs	r1, #128
 1159 00a4 4048     		ldr	r0, .L44+24
 1160 00a6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1161 00aa 0346     		mov	r3, r0
 1162 00ac 1A46     		mov	r2, r3
 1163              		.loc 1 305 10
 1164 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1165 00b0 9342     		cmp	r3, r2
 1166 00b2 03D0     		beq	.L34
 306:Core/Src/main.c ****       {
 307:Core/Src/main.c ****         counter--; // Sentido Horario
 1167              		.loc 1 307 16
 1168 00b4 BB68     		ldr	r3, [r7, #8]
 1169 00b6 013B     		subs	r3, r3, #1
 1170 00b8 BB60     		str	r3, [r7, #8]
 1171 00ba 02E0     		b	.L35
 1172              	.L34:
 308:Core/Src/main.c ****       }
 309:Core/Src/main.c ****       else
 310:Core/Src/main.c ****       {
 311:Core/Src/main.c ****         counter++; // Sentido Anti Horario
 1173              		.loc 1 311 16
 1174 00bc BB68     		ldr	r3, [r7, #8]
 1175 00be 0133     		adds	r3, r3, #1
 1176 00c0 BB60     		str	r3, [r7, #8]
 1177              	.L35:
 312:Core/Src/main.c ****       }
 313:Core/Src/main.c ****       if (counter % 2 == 0)
 1178              		.loc 1 313 19
 1179 00c2 BB68     		ldr	r3, [r7, #8]
 1180 00c4 03F00103 		and	r3, r3, #1
 1181              		.loc 1 313 10
 1182 00c8 002B     		cmp	r3, #0
 1183 00ca 03D1     		bne	.L36
 314:Core/Src/main.c ****       {
 315:Core/Src/main.c ****         counterOpcao = counter/2;
 1184              		.loc 1 315 31
 1185 00cc BB68     		ldr	r3, [r7, #8]
 1186 00ce 5B08     		lsrs	r3, r3, #1
 1187              		.loc 1 315 22
 1188 00d0 464A     		ldr	r2, .L44+92
 1189 00d2 1360     		str	r3, [r2]
 1190              	.L36:
 316:Core/Src/main.c ****       }
 317:Core/Src/main.c ****       if(counter>100)
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 27


 1191              		.loc 1 317 9
 1192 00d4 BB68     		ldr	r3, [r7, #8]
 1193 00d6 642B     		cmp	r3, #100
 1194 00d8 01D9     		bls	.L33
 318:Core/Src/main.c ****       {
 319:Core/Src/main.c ****         counter = 0;
 1195              		.loc 1 319 17
 1196 00da 0023     		movs	r3, #0
 1197 00dc BB60     		str	r3, [r7, #8]
 1198              	.L33:
 320:Core/Src/main.c ****       }
 321:Core/Src/main.c ****     }
 322:Core/Src/main.c ****     aLastState = aState;
 1199              		.loc 1 322 16
 1200 00de FB79     		ldrb	r3, [r7, #7]
 1201 00e0 FB73     		strb	r3, [r7, #15]
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****     // Sensor Temp
 326:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 1202              		.loc 1 326 5
 1203 00e2 4348     		ldr	r0, .L44+96
 1204 00e4 FFF7FEFF 		bl	HAL_ADC_Start
 327:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1,100);
 1205              		.loc 1 327 5
 1206 00e8 6421     		movs	r1, #100
 1207 00ea 4148     		ldr	r0, .L44+96
 1208 00ec FFF7FEFF 		bl	HAL_ADC_PollForConversion
 328:Core/Src/main.c ****     TempVolts = HAL_ADC_GetValue(&hadc1);
 1209              		.loc 1 328 17
 1210 00f0 3F48     		ldr	r0, .L44+96
 1211 00f2 FFF7FEFF 		bl	HAL_ADC_GetValue
 1212 00f6 0346     		mov	r3, r0
 1213              		.loc 1 328 15
 1214 00f8 3E4A     		ldr	r2, .L44+100
 1215 00fa 1360     		str	r3, [r2]
 329:Core/Src/main.c ****     TempCelsius = ((TempVolts * 1.1 / (4095)) / 0.01);
 1216              		.loc 1 329 31
 1217 00fc 3D4B     		ldr	r3, .L44+100
 1218 00fe 1B68     		ldr	r3, [r3]
 1219 0100 1846     		mov	r0, r3
 1220 0102 FFF7FEFF 		bl	__aeabi_ui2d
 1221 0106 22A3     		adr	r3, .L44
 1222 0108 D3E90023 		ldrd	r2, [r3]
 1223 010c FFF7FEFF 		bl	__aeabi_dmul
 1224 0110 0246     		mov	r2, r0
 1225 0112 0B46     		mov	r3, r1
 1226 0114 1046     		mov	r0, r2
 1227 0116 1946     		mov	r1, r3
 1228              		.loc 1 329 37
 1229 0118 1FA3     		adr	r3, .L44+8
 1230 011a D3E90023 		ldrd	r2, [r3]
 1231 011e FFF7FEFF 		bl	__aeabi_ddiv
 1232 0122 0246     		mov	r2, r0
 1233 0124 0B46     		mov	r3, r1
 1234 0126 1046     		mov	r0, r2
 1235 0128 1946     		mov	r1, r3
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 28


 1236              		.loc 1 329 47
 1237 012a 1DA3     		adr	r3, .L44+16
 1238 012c D3E90023 		ldrd	r2, [r3]
 1239 0130 FFF7FEFF 		bl	__aeabi_ddiv
 1240 0134 0246     		mov	r2, r0
 1241 0136 0B46     		mov	r3, r1
 1242 0138 1046     		mov	r0, r2
 1243 013a 1946     		mov	r1, r3
 1244 013c FFF7FEFF 		bl	__aeabi_d2f
 1245 0140 0346     		mov	r3, r0
 1246              		.loc 1 329 17
 1247 0142 1D4A     		ldr	r2, .L44+40
 1248 0144 1360     		str	r3, [r2]	@ float
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****     MenuHandler();
 1249              		.loc 1 331 5
 1250 0146 FFF7FEFF 		bl	MenuHandler
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     //calcPid();
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     if(TempCelsius<setpoint)
 1251              		.loc 1 335 19
 1252 014a 1B4B     		ldr	r3, .L44+40
 1253 014c 1B68     		ldr	r3, [r3]	@ float
 1254 014e 184A     		ldr	r2, .L44+32
 1255 0150 1268     		ldr	r2, [r2]	@ float
 1256              		.loc 1 335 7
 1257 0152 1146     		mov	r1, r2
 1258 0154 1846     		mov	r0, r3
 1259 0156 FFF7FEFF 		bl	__aeabi_fcmplt
 1260 015a 0346     		mov	r3, r0
 1261 015c 002B     		cmp	r3, #0
 1262 015e 06D0     		beq	.L43
 336:Core/Src/main.c ****     {
 337:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 1263              		.loc 1 337 7
 1264 0160 0122     		movs	r2, #1
 1265 0162 4FF40051 		mov	r1, #8192
 1266 0166 2448     		ldr	r0, .L44+104
 1267 0168 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1268 016c 05E0     		b	.L39
 1269              	.L43:
 338:Core/Src/main.c ****     }
 339:Core/Src/main.c ****     else
 340:Core/Src/main.c ****     {
 341:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 1270              		.loc 1 341 7
 1271 016e 0022     		movs	r2, #0
 1272 0170 4FF40051 		mov	r1, #8192
 1273 0174 2048     		ldr	r0, .L44+104
 1274 0176 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1275              	.L39:
 342:Core/Src/main.c ****     }
 343:Core/Src/main.c ****     
 344:Core/Src/main.c ****   
 345:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10))
 1276              		.loc 1 345 8
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 29


 1277 017a 4FF48061 		mov	r1, #1024
 1278 017e 0B48     		ldr	r0, .L44+28
 1279 0180 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1280 0184 0346     		mov	r3, r0
 1281              		.loc 1 345 7
 1282 0186 002B     		cmp	r3, #0
 1283 0188 81D0     		beq	.L41
 346:Core/Src/main.c ****     {
 347:Core/Src/main.c ****       ClickHandler();
 1284              		.loc 1 347 7
 1285 018a FFF7FEFF 		bl	ClickHandler
 302:Core/Src/main.c ****     if (aState != aLastState)
 1286              		.loc 1 302 12
 1287 018e 7EE7     		b	.L41
 1288              	.L45:
 1289              		.align	3
 1290              	.L44:
 1291 0190 9A999999 		.word	-1717986918
 1292 0194 9999F13F 		.word	1072798105
 1293 0198 00000000 		.word	0
 1294 019c 00FEAF40 		.word	1085275648
 1295 01a0 7B14AE47 		.word	1202590843
 1296 01a4 E17A843F 		.word	1065646817
 1297 01a8 00080140 		.word	1073809408
 1298 01ac 000C0140 		.word	1073810432
 1299 01b0 00000000 		.word	setpoint
 1300 01b4 0000A041 		.word	1101004800
 1301 01b8 00000000 		.word	TempCelsius
 1302 01bc 00005041 		.word	1095761920
 1303 01c0 00000000 		.word	kp
 1304 01c4 0000A040 		.word	1084227584
 1305 01c8 00000000 		.word	ki
 1306 01cc CDCC4C3D 		.word	1028443341
 1307 01d0 00000000 		.word	kd
 1308 01d4 00000000 		.word	erroAnt
 1309 01d8 00000000 		.word	yiAnt
 1310 01dc 00000000 		.word	ydAnt
 1311 01e0 00000000 		.word	Nd
 1312 01e4 00000000 		.word	htim2
 1313 01e8 00000000 		.word	htim4
 1314 01ec 00000000 		.word	counterOpcao
 1315 01f0 00000000 		.word	hadc1
 1316 01f4 00000000 		.word	TempVolts
 1317 01f8 00100140 		.word	1073811456
 1318              		.cfi_endproc
 1319              	.LFE70:
 1321              		.section	.text.SystemClock_Config,"ax",%progbits
 1322              		.align	1
 1323              		.global	SystemClock_Config
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1327              		.fpu softvfp
 1329              	SystemClock_Config:
 1330              	.LFB71:
 348:Core/Src/main.c ****     }
 349:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 30


 350:Core/Src/main.c ****     
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     
 355:Core/Src/main.c ****     
 356:Core/Src/main.c ****     
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****     /* USER CODE END WHILE */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE END 3 */
 363:Core/Src/main.c **** }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief System Clock Configuration
 367:Core/Src/main.c ****   * @retval None
 368:Core/Src/main.c ****   */
 369:Core/Src/main.c **** void SystemClock_Config(void)
 370:Core/Src/main.c **** {
 1331              		.loc 1 370 1
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 80
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 0000 80B5     		push	{r7, lr}
 1336              	.LCFI16:
 1337              		.cfi_def_cfa_offset 8
 1338              		.cfi_offset 7, -8
 1339              		.cfi_offset 14, -4
 1340 0002 94B0     		sub	sp, sp, #80
 1341              	.LCFI17:
 1342              		.cfi_def_cfa_offset 88
 1343 0004 00AF     		add	r7, sp, #0
 1344              	.LCFI18:
 1345              		.cfi_def_cfa_register 7
 371:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1346              		.loc 1 371 22
 1347 0006 07F12803 		add	r3, r7, #40
 1348 000a 2822     		movs	r2, #40
 1349 000c 0021     		movs	r1, #0
 1350 000e 1846     		mov	r0, r3
 1351 0010 FFF7FEFF 		bl	memset
 372:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1352              		.loc 1 372 22
 1353 0014 07F11403 		add	r3, r7, #20
 1354 0018 0022     		movs	r2, #0
 1355 001a 1A60     		str	r2, [r3]
 1356 001c 5A60     		str	r2, [r3, #4]
 1357 001e 9A60     		str	r2, [r3, #8]
 1358 0020 DA60     		str	r2, [r3, #12]
 1359 0022 1A61     		str	r2, [r3, #16]
 373:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1360              		.loc 1 373 28
 1361 0024 3B1D     		adds	r3, r7, #4
 1362 0026 0022     		movs	r2, #0
 1363 0028 1A60     		str	r2, [r3]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 31


 1364 002a 5A60     		str	r2, [r3, #4]
 1365 002c 9A60     		str	r2, [r3, #8]
 1366 002e DA60     		str	r2, [r3, #12]
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 376:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 1367              		.loc 1 378 36
 1368 0030 0123     		movs	r3, #1
 1369 0032 BB62     		str	r3, [r7, #40]
 379:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1370              		.loc 1 379 30
 1371 0034 4FF48033 		mov	r3, #65536
 1372 0038 FB62     		str	r3, [r7, #44]
 380:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1373              		.loc 1 380 36
 1374 003a 0023     		movs	r3, #0
 1375 003c 3B63     		str	r3, [r7, #48]
 381:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1376              		.loc 1 381 30
 1377 003e 0123     		movs	r3, #1
 1378 0040 BB63     		str	r3, [r7, #56]
 382:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1379              		.loc 1 382 34
 1380 0042 0223     		movs	r3, #2
 1381 0044 7B64     		str	r3, [r7, #68]
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1382              		.loc 1 383 35
 1383 0046 4FF48033 		mov	r3, #65536
 1384 004a BB64     		str	r3, [r7, #72]
 384:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1385              		.loc 1 384 32
 1386 004c 4FF4E013 		mov	r3, #1835008
 1387 0050 FB64     		str	r3, [r7, #76]
 385:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1388              		.loc 1 385 7
 1389 0052 07F12803 		add	r3, r7, #40
 1390 0056 1846     		mov	r0, r3
 1391 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1392 005c 0346     		mov	r3, r0
 1393              		.loc 1 385 6
 1394 005e 002B     		cmp	r3, #0
 1395 0060 01D0     		beq	.L47
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 1396              		.loc 1 387 5
 1397 0062 FFF7FEFF 		bl	Error_Handler
 1398              	.L47:
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1399              		.loc 1 391 31
 1400 0066 0F23     		movs	r3, #15
 1401 0068 7B61     		str	r3, [r7, #20]
 392:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 32


 393:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1402              		.loc 1 393 34
 1403 006a 0223     		movs	r3, #2
 1404 006c BB61     		str	r3, [r7, #24]
 394:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1405              		.loc 1 394 35
 1406 006e 0023     		movs	r3, #0
 1407 0070 FB61     		str	r3, [r7, #28]
 395:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1408              		.loc 1 395 36
 1409 0072 4FF48063 		mov	r3, #1024
 1410 0076 3B62     		str	r3, [r7, #32]
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1411              		.loc 1 396 36
 1412 0078 0023     		movs	r3, #0
 1413 007a 7B62     		str	r3, [r7, #36]
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 1414              		.loc 1 398 7
 1415 007c 07F11403 		add	r3, r7, #20
 1416 0080 0221     		movs	r1, #2
 1417 0082 1846     		mov	r0, r3
 1418 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1419 0088 0346     		mov	r3, r0
 1420              		.loc 1 398 6
 1421 008a 002B     		cmp	r3, #0
 1422 008c 01D0     		beq	.L48
 399:Core/Src/main.c ****   {
 400:Core/Src/main.c ****     Error_Handler();
 1423              		.loc 1 400 5
 1424 008e FFF7FEFF 		bl	Error_Handler
 1425              	.L48:
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 1426              		.loc 1 402 38
 1427 0092 0223     		movs	r3, #2
 1428 0094 7B60     		str	r3, [r7, #4]
 403:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 1429              		.loc 1 403 35
 1430 0096 4FF40043 		mov	r3, #32768
 1431 009a FB60     		str	r3, [r7, #12]
 404:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1432              		.loc 1 404 7
 1433 009c 3B1D     		adds	r3, r7, #4
 1434 009e 1846     		mov	r0, r3
 1435 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1436 00a4 0346     		mov	r3, r0
 1437              		.loc 1 404 6
 1438 00a6 002B     		cmp	r3, #0
 1439 00a8 01D0     		beq	.L50
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 1440              		.loc 1 406 5
 1441 00aa FFF7FEFF 		bl	Error_Handler
 1442              	.L50:
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c **** }
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 33


 1443              		.loc 1 408 1
 1444 00ae 00BF     		nop
 1445 00b0 5037     		adds	r7, r7, #80
 1446              	.LCFI19:
 1447              		.cfi_def_cfa_offset 8
 1448 00b2 BD46     		mov	sp, r7
 1449              	.LCFI20:
 1450              		.cfi_def_cfa_register 13
 1451              		@ sp needed
 1452 00b4 80BD     		pop	{r7, pc}
 1453              		.cfi_endproc
 1454              	.LFE71:
 1456              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1457              		.align	1
 1458              		.syntax unified
 1459              		.thumb
 1460              		.thumb_func
 1461              		.fpu softvfp
 1463              	MX_ADC1_Init:
 1464              	.LFB72:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** /**
 411:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 412:Core/Src/main.c ****   * @param None
 413:Core/Src/main.c ****   * @retval None
 414:Core/Src/main.c ****   */
 415:Core/Src/main.c **** static void MX_ADC1_Init(void)
 416:Core/Src/main.c **** {
 1465              		.loc 1 416 1
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 16
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469 0000 80B5     		push	{r7, lr}
 1470              	.LCFI21:
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 7, -8
 1473              		.cfi_offset 14, -4
 1474 0002 84B0     		sub	sp, sp, #16
 1475              	.LCFI22:
 1476              		.cfi_def_cfa_offset 24
 1477 0004 00AF     		add	r7, sp, #0
 1478              	.LCFI23:
 1479              		.cfi_def_cfa_register 7
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1480              		.loc 1 422 26
 1481 0006 3B1D     		adds	r3, r7, #4
 1482 0008 0022     		movs	r2, #0
 1483 000a 1A60     		str	r2, [r3]
 1484 000c 5A60     		str	r2, [r3, #4]
 1485 000e 9A60     		str	r2, [r3, #8]
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 34


 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 427:Core/Src/main.c ****   /** Common config
 428:Core/Src/main.c ****   */
 429:Core/Src/main.c ****   hadc1.Instance = ADC1;
 1486              		.loc 1 429 18
 1487 0010 184B     		ldr	r3, .L55
 1488 0012 194A     		ldr	r2, .L55+4
 1489 0014 1A60     		str	r2, [r3]
 430:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1490              		.loc 1 430 27
 1491 0016 174B     		ldr	r3, .L55
 1492 0018 0022     		movs	r2, #0
 1493 001a 9A60     		str	r2, [r3, #8]
 431:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1494              		.loc 1 431 33
 1495 001c 154B     		ldr	r3, .L55
 1496 001e 0022     		movs	r2, #0
 1497 0020 1A73     		strb	r2, [r3, #12]
 432:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1498              		.loc 1 432 36
 1499 0022 144B     		ldr	r3, .L55
 1500 0024 0022     		movs	r2, #0
 1501 0026 1A75     		strb	r2, [r3, #20]
 433:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1502              		.loc 1 433 31
 1503 0028 124B     		ldr	r3, .L55
 1504 002a 4FF46022 		mov	r2, #917504
 1505 002e DA61     		str	r2, [r3, #28]
 434:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1506              		.loc 1 434 24
 1507 0030 104B     		ldr	r3, .L55
 1508 0032 0022     		movs	r2, #0
 1509 0034 5A60     		str	r2, [r3, #4]
 435:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1510              		.loc 1 435 30
 1511 0036 0F4B     		ldr	r3, .L55
 1512 0038 0122     		movs	r2, #1
 1513 003a 1A61     		str	r2, [r3, #16]
 436:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1514              		.loc 1 436 7
 1515 003c 0D48     		ldr	r0, .L55
 1516 003e FFF7FEFF 		bl	HAL_ADC_Init
 1517 0042 0346     		mov	r3, r0
 1518              		.loc 1 436 6
 1519 0044 002B     		cmp	r3, #0
 1520 0046 01D0     		beq	.L52
 437:Core/Src/main.c ****   {
 438:Core/Src/main.c ****     Error_Handler();
 1521              		.loc 1 438 5
 1522 0048 FFF7FEFF 		bl	Error_Handler
 1523              	.L52:
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   /** Configure Regular Channel
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 1524              		.loc 1 442 19
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 35


 1525 004c 0323     		movs	r3, #3
 1526 004e 7B60     		str	r3, [r7, #4]
 443:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1527              		.loc 1 443 16
 1528 0050 0123     		movs	r3, #1
 1529 0052 BB60     		str	r3, [r7, #8]
 444:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 1530              		.loc 1 444 24
 1531 0054 0023     		movs	r3, #0
 1532 0056 FB60     		str	r3, [r7, #12]
 445:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1533              		.loc 1 445 7
 1534 0058 3B1D     		adds	r3, r7, #4
 1535 005a 1946     		mov	r1, r3
 1536 005c 0548     		ldr	r0, .L55
 1537 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1538 0062 0346     		mov	r3, r0
 1539              		.loc 1 445 6
 1540 0064 002B     		cmp	r3, #0
 1541 0066 01D0     		beq	.L54
 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 1542              		.loc 1 447 5
 1543 0068 FFF7FEFF 		bl	Error_Handler
 1544              	.L54:
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** }
 1545              		.loc 1 453 1
 1546 006c 00BF     		nop
 1547 006e 1037     		adds	r7, r7, #16
 1548              	.LCFI24:
 1549              		.cfi_def_cfa_offset 8
 1550 0070 BD46     		mov	sp, r7
 1551              	.LCFI25:
 1552              		.cfi_def_cfa_register 13
 1553              		@ sp needed
 1554 0072 80BD     		pop	{r7, pc}
 1555              	.L56:
 1556              		.align	2
 1557              	.L55:
 1558 0074 00000000 		.word	hadc1
 1559 0078 00240140 		.word	1073816576
 1560              		.cfi_endproc
 1561              	.LFE72:
 1563              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1564              		.align	1
 1565              		.syntax unified
 1566              		.thumb
 1567              		.thumb_func
 1568              		.fpu softvfp
 1570              	MX_I2C1_Init:
 1571              	.LFB73:
 454:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 36


 455:Core/Src/main.c **** /**
 456:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 457:Core/Src/main.c ****   * @param None
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** static void MX_I2C1_Init(void)
 461:Core/Src/main.c **** {
 1572              		.loc 1 461 1
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576 0000 80B5     		push	{r7, lr}
 1577              	.LCFI26:
 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 00AF     		add	r7, sp, #0
 1582              	.LCFI27:
 1583              		.cfi_def_cfa_register 7
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 470:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 1584              		.loc 1 470 18
 1585 0004 124B     		ldr	r3, .L60
 1586 0006 134A     		ldr	r2, .L60+4
 1587 0008 1A60     		str	r2, [r3]
 471:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1588              		.loc 1 471 25
 1589 000a 114B     		ldr	r3, .L60
 1590 000c 124A     		ldr	r2, .L60+8
 1591 000e 5A60     		str	r2, [r3, #4]
 472:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1592              		.loc 1 472 24
 1593 0010 0F4B     		ldr	r3, .L60
 1594 0012 0022     		movs	r2, #0
 1595 0014 9A60     		str	r2, [r3, #8]
 473:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1596              		.loc 1 473 26
 1597 0016 0E4B     		ldr	r3, .L60
 1598 0018 0022     		movs	r2, #0
 1599 001a DA60     		str	r2, [r3, #12]
 474:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1600              		.loc 1 474 29
 1601 001c 0C4B     		ldr	r3, .L60
 1602 001e 4FF48042 		mov	r2, #16384
 1603 0022 1A61     		str	r2, [r3, #16]
 475:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1604              		.loc 1 475 30
 1605 0024 0A4B     		ldr	r3, .L60
 1606 0026 0022     		movs	r2, #0
 1607 0028 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 37


 476:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1608              		.loc 1 476 26
 1609 002a 094B     		ldr	r3, .L60
 1610 002c 0022     		movs	r2, #0
 1611 002e 9A61     		str	r2, [r3, #24]
 477:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1612              		.loc 1 477 30
 1613 0030 074B     		ldr	r3, .L60
 1614 0032 0022     		movs	r2, #0
 1615 0034 DA61     		str	r2, [r3, #28]
 478:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1616              		.loc 1 478 28
 1617 0036 064B     		ldr	r3, .L60
 1618 0038 0022     		movs	r2, #0
 1619 003a 1A62     		str	r2, [r3, #32]
 479:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1620              		.loc 1 479 7
 1621 003c 0448     		ldr	r0, .L60
 1622 003e FFF7FEFF 		bl	HAL_I2C_Init
 1623 0042 0346     		mov	r3, r0
 1624              		.loc 1 479 6
 1625 0044 002B     		cmp	r3, #0
 1626 0046 01D0     		beq	.L59
 480:Core/Src/main.c ****   {
 481:Core/Src/main.c ****     Error_Handler();
 1627              		.loc 1 481 5
 1628 0048 FFF7FEFF 		bl	Error_Handler
 1629              	.L59:
 482:Core/Src/main.c ****   }
 483:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** }
 1630              		.loc 1 487 1
 1631 004c 00BF     		nop
 1632 004e 80BD     		pop	{r7, pc}
 1633              	.L61:
 1634              		.align	2
 1635              	.L60:
 1636 0050 00000000 		.word	hi2c1
 1637 0054 00540040 		.word	1073763328
 1638 0058 801A0600 		.word	400000
 1639              		.cfi_endproc
 1640              	.LFE73:
 1642              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1643              		.align	1
 1644              		.syntax unified
 1645              		.thumb
 1646              		.thumb_func
 1647              		.fpu softvfp
 1649              	MX_TIM2_Init:
 1650              	.LFB74:
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /**
 490:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 491:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 38


 492:Core/Src/main.c ****   * @retval None
 493:Core/Src/main.c ****   */
 494:Core/Src/main.c **** static void MX_TIM2_Init(void)
 495:Core/Src/main.c **** {
 1651              		.loc 1 495 1
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 56
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655 0000 80B5     		push	{r7, lr}
 1656              	.LCFI28:
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 8EB0     		sub	sp, sp, #56
 1661              	.LCFI29:
 1662              		.cfi_def_cfa_offset 64
 1663 0004 00AF     		add	r7, sp, #0
 1664              	.LCFI30:
 1665              		.cfi_def_cfa_register 7
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1666              		.loc 1 501 26
 1667 0006 07F12803 		add	r3, r7, #40
 1668 000a 0022     		movs	r2, #0
 1669 000c 1A60     		str	r2, [r3]
 1670 000e 5A60     		str	r2, [r3, #4]
 1671 0010 9A60     		str	r2, [r3, #8]
 1672 0012 DA60     		str	r2, [r3, #12]
 502:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1673              		.loc 1 502 27
 1674 0014 07F12003 		add	r3, r7, #32
 1675 0018 0022     		movs	r2, #0
 1676 001a 1A60     		str	r2, [r3]
 1677 001c 5A60     		str	r2, [r3, #4]
 503:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1678              		.loc 1 503 22
 1679 001e 3B1D     		adds	r3, r7, #4
 1680 0020 0022     		movs	r2, #0
 1681 0022 1A60     		str	r2, [r3]
 1682 0024 5A60     		str	r2, [r3, #4]
 1683 0026 9A60     		str	r2, [r3, #8]
 1684 0028 DA60     		str	r2, [r3, #12]
 1685 002a 1A61     		str	r2, [r3, #16]
 1686 002c 5A61     		str	r2, [r3, #20]
 1687 002e 9A61     		str	r2, [r3, #24]
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 508:Core/Src/main.c ****   htim2.Instance = TIM2;
 1688              		.loc 1 508 18
 1689 0030 2E4B     		ldr	r3, .L68
 1690 0032 4FF08042 		mov	r2, #1073741824
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 39


 1691 0036 1A60     		str	r2, [r3]
 509:Core/Src/main.c ****   htim2.Init.Prescaler = 7200-1;
 1692              		.loc 1 509 24
 1693 0038 2C4B     		ldr	r3, .L68
 1694 003a 41F61F42 		movw	r2, #7199
 1695 003e 5A60     		str	r2, [r3, #4]
 510:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1696              		.loc 1 510 26
 1697 0040 2A4B     		ldr	r3, .L68
 1698 0042 0022     		movs	r2, #0
 1699 0044 9A60     		str	r2, [r3, #8]
 511:Core/Src/main.c ****   htim2.Init.Period = 10000;
 1700              		.loc 1 511 21
 1701 0046 294B     		ldr	r3, .L68
 1702 0048 42F21072 		movw	r2, #10000
 1703 004c DA60     		str	r2, [r3, #12]
 512:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1704              		.loc 1 512 28
 1705 004e 274B     		ldr	r3, .L68
 1706 0050 0022     		movs	r2, #0
 1707 0052 1A61     		str	r2, [r3, #16]
 513:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1708              		.loc 1 513 32
 1709 0054 254B     		ldr	r3, .L68
 1710 0056 0022     		movs	r2, #0
 1711 0058 9A61     		str	r2, [r3, #24]
 514:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1712              		.loc 1 514 7
 1713 005a 2448     		ldr	r0, .L68
 1714 005c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1715 0060 0346     		mov	r3, r0
 1716              		.loc 1 514 6
 1717 0062 002B     		cmp	r3, #0
 1718 0064 01D0     		beq	.L63
 515:Core/Src/main.c ****   {
 516:Core/Src/main.c ****     Error_Handler();
 1719              		.loc 1 516 5
 1720 0066 FFF7FEFF 		bl	Error_Handler
 1721              	.L63:
 517:Core/Src/main.c ****   }
 518:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1722              		.loc 1 518 34
 1723 006a 4FF48053 		mov	r3, #4096
 1724 006e BB62     		str	r3, [r7, #40]
 519:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1725              		.loc 1 519 7
 1726 0070 07F12803 		add	r3, r7, #40
 1727 0074 1946     		mov	r1, r3
 1728 0076 1D48     		ldr	r0, .L68
 1729 0078 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1730 007c 0346     		mov	r3, r0
 1731              		.loc 1 519 6
 1732 007e 002B     		cmp	r3, #0
 1733 0080 01D0     		beq	.L64
 520:Core/Src/main.c ****   {
 521:Core/Src/main.c ****     Error_Handler();
 1734              		.loc 1 521 5
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 40


 1735 0082 FFF7FEFF 		bl	Error_Handler
 1736              	.L64:
 522:Core/Src/main.c ****   }
 523:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1737              		.loc 1 523 7
 1738 0086 1948     		ldr	r0, .L68
 1739 0088 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1740 008c 0346     		mov	r3, r0
 1741              		.loc 1 523 6
 1742 008e 002B     		cmp	r3, #0
 1743 0090 01D0     		beq	.L65
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 1744              		.loc 1 525 5
 1745 0092 FFF7FEFF 		bl	Error_Handler
 1746              	.L65:
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1747              		.loc 1 527 37
 1748 0096 0023     		movs	r3, #0
 1749 0098 3B62     		str	r3, [r7, #32]
 528:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1750              		.loc 1 528 33
 1751 009a 0023     		movs	r3, #0
 1752 009c 7B62     		str	r3, [r7, #36]
 529:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1753              		.loc 1 529 7
 1754 009e 07F12003 		add	r3, r7, #32
 1755 00a2 1946     		mov	r1, r3
 1756 00a4 1148     		ldr	r0, .L68
 1757 00a6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1758 00aa 0346     		mov	r3, r0
 1759              		.loc 1 529 6
 1760 00ac 002B     		cmp	r3, #0
 1761 00ae 01D0     		beq	.L66
 530:Core/Src/main.c ****   {
 531:Core/Src/main.c ****     Error_Handler();
 1762              		.loc 1 531 5
 1763 00b0 FFF7FEFF 		bl	Error_Handler
 1764              	.L66:
 532:Core/Src/main.c ****   }
 533:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1765              		.loc 1 533 20
 1766 00b4 6023     		movs	r3, #96
 1767 00b6 7B60     		str	r3, [r7, #4]
 534:Core/Src/main.c ****   sConfigOC.Pulse = 10000;
 1768              		.loc 1 534 19
 1769 00b8 42F21073 		movw	r3, #10000
 1770 00bc BB60     		str	r3, [r7, #8]
 535:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1771              		.loc 1 535 24
 1772 00be 0023     		movs	r3, #0
 1773 00c0 FB60     		str	r3, [r7, #12]
 536:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1774              		.loc 1 536 24
 1775 00c2 0023     		movs	r3, #0
 1776 00c4 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 41


 537:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1777              		.loc 1 537 7
 1778 00c6 3B1D     		adds	r3, r7, #4
 1779 00c8 0422     		movs	r2, #4
 1780 00ca 1946     		mov	r1, r3
 1781 00cc 0748     		ldr	r0, .L68
 1782 00ce FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1783 00d2 0346     		mov	r3, r0
 1784              		.loc 1 537 6
 1785 00d4 002B     		cmp	r3, #0
 1786 00d6 01D0     		beq	.L67
 538:Core/Src/main.c ****   {
 539:Core/Src/main.c ****     Error_Handler();
 1787              		.loc 1 539 5
 1788 00d8 FFF7FEFF 		bl	Error_Handler
 1789              	.L67:
 540:Core/Src/main.c ****   }
 541:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 544:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 1790              		.loc 1 544 3
 1791 00dc 0348     		ldr	r0, .L68
 1792 00de FFF7FEFF 		bl	HAL_TIM_MspPostInit
 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** }
 1793              		.loc 1 546 1
 1794 00e2 00BF     		nop
 1795 00e4 3837     		adds	r7, r7, #56
 1796              	.LCFI31:
 1797              		.cfi_def_cfa_offset 8
 1798 00e6 BD46     		mov	sp, r7
 1799              	.LCFI32:
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 00e8 80BD     		pop	{r7, pc}
 1803              	.L69:
 1804 00ea 00BF     		.align	2
 1805              	.L68:
 1806 00ec 00000000 		.word	htim2
 1807              		.cfi_endproc
 1808              	.LFE74:
 1810              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1811              		.align	1
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu softvfp
 1817              	MX_TIM4_Init:
 1818              	.LFB75:
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** /**
 549:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 550:Core/Src/main.c ****   * @param None
 551:Core/Src/main.c ****   * @retval None
 552:Core/Src/main.c ****   */
 553:Core/Src/main.c **** static void MX_TIM4_Init(void)
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 42


 554:Core/Src/main.c **** {
 1819              		.loc 1 554 1
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 24
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0000 80B5     		push	{r7, lr}
 1824              	.LCFI33:
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 7, -8
 1827              		.cfi_offset 14, -4
 1828 0002 86B0     		sub	sp, sp, #24
 1829              	.LCFI34:
 1830              		.cfi_def_cfa_offset 32
 1831 0004 00AF     		add	r7, sp, #0
 1832              	.LCFI35:
 1833              		.cfi_def_cfa_register 7
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1834              		.loc 1 560 26
 1835 0006 07F10803 		add	r3, r7, #8
 1836 000a 0022     		movs	r2, #0
 1837 000c 1A60     		str	r2, [r3]
 1838 000e 5A60     		str	r2, [r3, #4]
 1839 0010 9A60     		str	r2, [r3, #8]
 1840 0012 DA60     		str	r2, [r3, #12]
 561:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1841              		.loc 1 561 27
 1842 0014 3B46     		mov	r3, r7
 1843 0016 0022     		movs	r2, #0
 1844 0018 1A60     		str	r2, [r3]
 1845 001a 5A60     		str	r2, [r3, #4]
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 566:Core/Src/main.c ****   htim4.Instance = TIM4;
 1846              		.loc 1 566 18
 1847 001c 2C4B     		ldr	r3, .L74+8
 1848 001e 2D4A     		ldr	r2, .L74+12
 1849 0020 1A60     		str	r2, [r3]
 567:Core/Src/main.c ****   htim4.Init.Prescaler = 7200-1;
 1850              		.loc 1 567 24
 1851 0022 2B4B     		ldr	r3, .L74+8
 1852 0024 41F61F42 		movw	r2, #7199
 1853 0028 5A60     		str	r2, [r3, #4]
 568:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1854              		.loc 1 568 26
 1855 002a 294B     		ldr	r3, .L74+8
 1856 002c 0022     		movs	r2, #0
 1857 002e 9A60     		str	r2, [r3, #8]
 569:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1858              		.loc 1 569 21
 1859 0030 274B     		ldr	r3, .L74+8
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 43


 1860 0032 42F21072 		movw	r2, #10000
 1861 0036 DA60     		str	r2, [r3, #12]
 570:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1862              		.loc 1 570 28
 1863 0038 254B     		ldr	r3, .L74+8
 1864 003a 0022     		movs	r2, #0
 1865 003c 1A61     		str	r2, [r3, #16]
 571:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1866              		.loc 1 571 32
 1867 003e 244B     		ldr	r3, .L74+8
 1868 0040 0022     		movs	r2, #0
 1869 0042 9A61     		str	r2, [r3, #24]
 572:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1870              		.loc 1 572 7
 1871 0044 2248     		ldr	r0, .L74+8
 1872 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1873 004a 0346     		mov	r3, r0
 1874              		.loc 1 572 6
 1875 004c 002B     		cmp	r3, #0
 1876 004e 01D0     		beq	.L71
 573:Core/Src/main.c ****   {
 574:Core/Src/main.c ****     Error_Handler();
 1877              		.loc 1 574 5
 1878 0050 FFF7FEFF 		bl	Error_Handler
 1879              	.L71:
 575:Core/Src/main.c ****   }
 576:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1880              		.loc 1 576 34
 1881 0054 4FF48053 		mov	r3, #4096
 1882 0058 BB60     		str	r3, [r7, #8]
 577:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1883              		.loc 1 577 7
 1884 005a 07F10803 		add	r3, r7, #8
 1885 005e 1946     		mov	r1, r3
 1886 0060 1B48     		ldr	r0, .L74+8
 1887 0062 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1888 0066 0346     		mov	r3, r0
 1889              		.loc 1 577 6
 1890 0068 002B     		cmp	r3, #0
 1891 006a 01D0     		beq	.L72
 578:Core/Src/main.c ****   {
 579:Core/Src/main.c ****     Error_Handler();
 1892              		.loc 1 579 5
 1893 006c FFF7FEFF 		bl	Error_Handler
 1894              	.L72:
 580:Core/Src/main.c ****   }
 581:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1895              		.loc 1 581 37
 1896 0070 0023     		movs	r3, #0
 1897 0072 3B60     		str	r3, [r7]
 582:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1898              		.loc 1 582 33
 1899 0074 0023     		movs	r3, #0
 1900 0076 7B60     		str	r3, [r7, #4]
 583:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1901              		.loc 1 583 7
 1902 0078 3B46     		mov	r3, r7
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 44


 1903 007a 1946     		mov	r1, r3
 1904 007c 1448     		ldr	r0, .L74+8
 1905 007e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1906 0082 0346     		mov	r3, r0
 1907              		.loc 1 583 6
 1908 0084 002B     		cmp	r3, #0
 1909 0086 01D0     		beq	.L73
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****     Error_Handler();
 1910              		.loc 1 585 5
 1911 0088 FFF7FEFF 		bl	Error_Handler
 1912              	.L73:
 586:Core/Src/main.c ****   }
 587:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 588:Core/Src/main.c ****   tim4ms = (htim4.Init.Prescaler+1)*htim4.Init.Period/72000000.0;
 1913              		.loc 1 588 23
 1914 008c 104B     		ldr	r3, .L74+8
 1915 008e 5B68     		ldr	r3, [r3, #4]
 1916              		.loc 1 588 33
 1917 0090 0133     		adds	r3, r3, #1
 1918              		.loc 1 588 47
 1919 0092 0F4A     		ldr	r2, .L74+8
 1920 0094 D268     		ldr	r2, [r2, #12]
 1921              		.loc 1 588 36
 1922 0096 02FB03F3 		mul	r3, r2, r3
 1923              		.loc 1 588 54
 1924 009a 1846     		mov	r0, r3
 1925 009c FFF7FEFF 		bl	__aeabi_ui2d
 1926 00a0 09A3     		adr	r3, .L74
 1927 00a2 D3E90023 		ldrd	r2, [r3]
 1928 00a6 FFF7FEFF 		bl	__aeabi_ddiv
 1929 00aa 0246     		mov	r2, r0
 1930 00ac 0B46     		mov	r3, r1
 1931 00ae 1046     		mov	r0, r2
 1932 00b0 1946     		mov	r1, r3
 1933 00b2 FFF7FEFF 		bl	__aeabi_d2f
 1934 00b6 0346     		mov	r3, r0
 1935              		.loc 1 588 10
 1936 00b8 074A     		ldr	r2, .L74+16
 1937 00ba 1360     		str	r3, [r2]	@ float
 589:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** }
 1938              		.loc 1 591 1
 1939 00bc 00BF     		nop
 1940 00be 1837     		adds	r7, r7, #24
 1941              	.LCFI36:
 1942              		.cfi_def_cfa_offset 8
 1943 00c0 BD46     		mov	sp, r7
 1944              	.LCFI37:
 1945              		.cfi_def_cfa_register 13
 1946              		@ sp needed
 1947 00c2 80BD     		pop	{r7, pc}
 1948              	.L75:
 1949 00c4 AFF30080 		.align	3
 1950              	.L74:
 1951 00c8 00000000 		.word	0
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 45


 1952 00cc 882A9141 		.word	1100032648
 1953 00d0 00000000 		.word	htim4
 1954 00d4 00080040 		.word	1073743872
 1955 00d8 00000000 		.word	tim4ms
 1956              		.cfi_endproc
 1957              	.LFE75:
 1959              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1960              		.align	1
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu softvfp
 1966              	MX_GPIO_Init:
 1967              	.LFB76:
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** /**
 594:Core/Src/main.c ****   * @brief GPIO Initialization Function
 595:Core/Src/main.c ****   * @param None
 596:Core/Src/main.c ****   * @retval None
 597:Core/Src/main.c ****   */
 598:Core/Src/main.c **** static void MX_GPIO_Init(void)
 599:Core/Src/main.c **** {
 1968              		.loc 1 599 1
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 32
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
 1973              	.LCFI38:
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 88B0     		sub	sp, sp, #32
 1978              	.LCFI39:
 1979              		.cfi_def_cfa_offset 40
 1980 0004 00AF     		add	r7, sp, #0
 1981              	.LCFI40:
 1982              		.cfi_def_cfa_register 7
 600:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1983              		.loc 1 600 20
 1984 0006 07F11003 		add	r3, r7, #16
 1985 000a 0022     		movs	r2, #0
 1986 000c 1A60     		str	r2, [r3]
 1987 000e 5A60     		str	r2, [r3, #4]
 1988 0010 9A60     		str	r2, [r3, #8]
 1989 0012 DA60     		str	r2, [r3, #12]
 1990              	.LBB4:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 603:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1991              		.loc 1 603 3
 1992 0014 444B     		ldr	r3, .L77
 1993 0016 9B69     		ldr	r3, [r3, #24]
 1994 0018 434A     		ldr	r2, .L77
 1995 001a 43F01003 		orr	r3, r3, #16
 1996 001e 9361     		str	r3, [r2, #24]
 1997 0020 414B     		ldr	r3, .L77
 1998 0022 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 46


 1999 0024 03F01003 		and	r3, r3, #16
 2000 0028 FB60     		str	r3, [r7, #12]
 2001 002a FB68     		ldr	r3, [r7, #12]
 2002              	.LBE4:
 2003              	.LBB5:
 604:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 2004              		.loc 1 604 3
 2005 002c 3E4B     		ldr	r3, .L77
 2006 002e 9B69     		ldr	r3, [r3, #24]
 2007 0030 3D4A     		ldr	r2, .L77
 2008 0032 43F02003 		orr	r3, r3, #32
 2009 0036 9361     		str	r3, [r2, #24]
 2010 0038 3B4B     		ldr	r3, .L77
 2011 003a 9B69     		ldr	r3, [r3, #24]
 2012 003c 03F02003 		and	r3, r3, #32
 2013 0040 BB60     		str	r3, [r7, #8]
 2014 0042 BB68     		ldr	r3, [r7, #8]
 2015              	.LBE5:
 2016              	.LBB6:
 605:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2017              		.loc 1 605 3
 2018 0044 384B     		ldr	r3, .L77
 2019 0046 9B69     		ldr	r3, [r3, #24]
 2020 0048 374A     		ldr	r2, .L77
 2021 004a 43F00403 		orr	r3, r3, #4
 2022 004e 9361     		str	r3, [r2, #24]
 2023 0050 354B     		ldr	r3, .L77
 2024 0052 9B69     		ldr	r3, [r3, #24]
 2025 0054 03F00403 		and	r3, r3, #4
 2026 0058 7B60     		str	r3, [r7, #4]
 2027 005a 7B68     		ldr	r3, [r7, #4]
 2028              	.LBE6:
 2029              	.LBB7:
 606:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2030              		.loc 1 606 3
 2031 005c 324B     		ldr	r3, .L77
 2032 005e 9B69     		ldr	r3, [r3, #24]
 2033 0060 314A     		ldr	r2, .L77
 2034 0062 43F00803 		orr	r3, r3, #8
 2035 0066 9361     		str	r3, [r2, #24]
 2036 0068 2F4B     		ldr	r3, .L77
 2037 006a 9B69     		ldr	r3, [r3, #24]
 2038 006c 03F00803 		and	r3, r3, #8
 2039 0070 3B60     		str	r3, [r7]
 2040 0072 3B68     		ldr	r3, [r7]
 2041              	.LBE7:
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 609:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 2042              		.loc 1 609 3
 2043 0074 0022     		movs	r2, #0
 2044 0076 4FF40051 		mov	r1, #8192
 2045 007a 2C48     		ldr	r0, .L77+4
 2046 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 612:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8|GPIO_PIN_10, GPIO_PIN_RESET);
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 47


 2047              		.loc 1 612 3
 2048 0080 0022     		movs	r2, #0
 2049 0082 4FF4A061 		mov	r1, #1280
 2050 0086 2A48     		ldr	r0, .L77+8
 2051 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 615:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
 2052              		.loc 1 615 3
 2053 008c 0022     		movs	r2, #0
 2054 008e 1821     		movs	r1, #24
 2055 0090 2848     		ldr	r0, .L77+12
 2056 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 618:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 2057              		.loc 1 618 23
 2058 0096 4FF40053 		mov	r3, #8192
 2059 009a 3B61     		str	r3, [r7, #16]
 619:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2060              		.loc 1 619 24
 2061 009c 0123     		movs	r3, #1
 2062 009e 7B61     		str	r3, [r7, #20]
 620:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2063              		.loc 1 620 24
 2064 00a0 0023     		movs	r3, #0
 2065 00a2 BB61     		str	r3, [r7, #24]
 621:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2066              		.loc 1 621 25
 2067 00a4 0223     		movs	r3, #2
 2068 00a6 FB61     		str	r3, [r7, #28]
 622:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2069              		.loc 1 622 3
 2070 00a8 07F11003 		add	r3, r7, #16
 2071 00ac 1946     		mov	r1, r3
 2072 00ae 1F48     		ldr	r0, .L77+4
 2073 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 */
 625:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 2074              		.loc 1 625 23
 2075 00b4 C023     		movs	r3, #192
 2076 00b6 3B61     		str	r3, [r7, #16]
 626:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2077              		.loc 1 626 24
 2078 00b8 0023     		movs	r3, #0
 2079 00ba 7B61     		str	r3, [r7, #20]
 627:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2080              		.loc 1 627 24
 2081 00bc 0123     		movs	r3, #1
 2082 00be BB61     		str	r3, [r7, #24]
 628:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2083              		.loc 1 628 3
 2084 00c0 07F11003 		add	r3, r7, #16
 2085 00c4 1946     		mov	r1, r3
 2086 00c6 1A48     		ldr	r0, .L77+8
 2087 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 48


 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /*Configure GPIO pin : PB10 */
 631:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 2088              		.loc 1 631 23
 2089 00cc 4FF48063 		mov	r3, #1024
 2090 00d0 3B61     		str	r3, [r7, #16]
 632:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2091              		.loc 1 632 24
 2092 00d2 0023     		movs	r3, #0
 2093 00d4 7B61     		str	r3, [r7, #20]
 633:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 2094              		.loc 1 633 24
 2095 00d6 0223     		movs	r3, #2
 2096 00d8 BB61     		str	r3, [r7, #24]
 634:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2097              		.loc 1 634 3
 2098 00da 07F11003 		add	r3, r7, #16
 2099 00de 1946     		mov	r1, r3
 2100 00e0 1448     		ldr	r0, .L77+12
 2101 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /*Configure GPIO pins : PA8 PA10 */
 637:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_10;
 2102              		.loc 1 637 23
 2103 00e6 4FF4A063 		mov	r3, #1280
 2104 00ea 3B61     		str	r3, [r7, #16]
 638:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2105              		.loc 1 638 24
 2106 00ec 0123     		movs	r3, #1
 2107 00ee 7B61     		str	r3, [r7, #20]
 639:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2108              		.loc 1 639 24
 2109 00f0 0023     		movs	r3, #0
 2110 00f2 BB61     		str	r3, [r7, #24]
 640:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2111              		.loc 1 640 25
 2112 00f4 0223     		movs	r3, #2
 2113 00f6 FB61     		str	r3, [r7, #28]
 641:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2114              		.loc 1 641 3
 2115 00f8 07F11003 		add	r3, r7, #16
 2116 00fc 1946     		mov	r1, r3
 2117 00fe 0C48     		ldr	r0, .L77+8
 2118 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 */
 644:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 2119              		.loc 1 644 23
 2120 0104 1823     		movs	r3, #24
 2121 0106 3B61     		str	r3, [r7, #16]
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2122              		.loc 1 645 24
 2123 0108 0123     		movs	r3, #1
 2124 010a 7B61     		str	r3, [r7, #20]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2125              		.loc 1 646 24
 2126 010c 0023     		movs	r3, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 49


 2127 010e BB61     		str	r3, [r7, #24]
 647:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2128              		.loc 1 647 25
 2129 0110 0223     		movs	r3, #2
 2130 0112 FB61     		str	r3, [r7, #28]
 648:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2131              		.loc 1 648 3
 2132 0114 07F11003 		add	r3, r7, #16
 2133 0118 1946     		mov	r1, r3
 2134 011a 0648     		ldr	r0, .L77+12
 2135 011c FFF7FEFF 		bl	HAL_GPIO_Init
 649:Core/Src/main.c **** 
 650:Core/Src/main.c **** }
 2136              		.loc 1 650 1
 2137 0120 00BF     		nop
 2138 0122 2037     		adds	r7, r7, #32
 2139              	.LCFI41:
 2140              		.cfi_def_cfa_offset 8
 2141 0124 BD46     		mov	sp, r7
 2142              	.LCFI42:
 2143              		.cfi_def_cfa_register 13
 2144              		@ sp needed
 2145 0126 80BD     		pop	{r7, pc}
 2146              	.L78:
 2147              		.align	2
 2148              	.L77:
 2149 0128 00100240 		.word	1073876992
 2150 012c 00100140 		.word	1073811456
 2151 0130 00080140 		.word	1073809408
 2152 0134 000C0140 		.word	1073810432
 2153              		.cfi_endproc
 2154              	.LFE76:
 2156              		.section	.text.Error_Handler,"ax",%progbits
 2157              		.align	1
 2158              		.global	Error_Handler
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu softvfp
 2164              	Error_Handler:
 2165              	.LFB77:
 651:Core/Src/main.c **** 
 652:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** /* USER CODE END 4 */
 655:Core/Src/main.c **** 
 656:Core/Src/main.c **** /**
 657:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 658:Core/Src/main.c ****   * @retval None
 659:Core/Src/main.c ****   */
 660:Core/Src/main.c **** void Error_Handler(void)
 661:Core/Src/main.c **** {
 2166              		.loc 1 661 1
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 1, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 50


 2171 0000 80B4     		push	{r7}
 2172              	.LCFI43:
 2173              		.cfi_def_cfa_offset 4
 2174              		.cfi_offset 7, -4
 2175 0002 00AF     		add	r7, sp, #0
 2176              	.LCFI44:
 2177              		.cfi_def_cfa_register 7
 2178              	.LBB8:
 2179              	.LBB9:
 2180              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 51


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 52


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2181              		.loc 2 142 3
 2182              		.syntax unified
 2183              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2184 0004 72B6     		cpsid i
 2185              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2186              		.loc 2 143 1
 2187              		.thumb
 2188              		.syntax unified
 2189 0006 00BF     		nop
 2190              	.L80:
 2191              	.LBE9:
 2192              	.LBE8:
 662:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 663:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 664:Core/Src/main.c ****   __disable_irq();
 665:Core/Src/main.c ****   while (1)
 2193              		.loc 1 665 9 discriminator 1
 2194 0008 FEE7     		b	.L80
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 53


 2195              		.cfi_endproc
 2196              	.LFE77:
 2198              		.text
 2199              	.Letext0:
 2200              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 2201              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 2202              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2203              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2204              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2205              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2206              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2207              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2208              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2209              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2210              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 2211              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2212              		.file 15 "Core/Inc/fonts.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:20     .bss.hadc1:00000000 hadc1
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:17     .bss.hadc1:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:27     .bss.hi2c1:00000000 hi2c1
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:24     .bss.hi2c1:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:34     .bss.htim2:00000000 htim2
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:31     .bss.htim2:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:41     .bss.htim4:00000000 htim4
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:38     .bss.htim4:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:48     .bss.MenuAtual:00000000 MenuAtual
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:45     .bss.MenuAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:55     .bss.counterOpcao:00000000 counterOpcao
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:52     .bss.counterOpcao:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:62     .bss.counterPrev:00000000 counterPrev
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:59     .bss.counterPrev:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:69     .bss.txtCounter:00000000 txtCounter
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:66     .bss.txtCounter:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:75     .bss.ligarMotor:00000000 ligarMotor
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:76     .bss.ligarMotor:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:81     .data.StepAlta:00000000 StepAlta
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:88     .bss.TempVolts:00000000 TempVolts
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:85     .bss.TempVolts:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:95     .bss.TempCelsius:00000000 TempCelsius
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:92     .bss.TempCelsius:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:102    .bss.setpoint:00000000 setpoint
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:99     .bss.setpoint:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:109    .bss.kp:00000000 kp
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:106    .bss.kp:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:116    .bss.ki:00000000 ki
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:113    .bss.ki:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:123    .bss.kd:00000000 kd
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:120    .bss.kd:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:130    .bss.erroAtual:00000000 erroAtual
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:127    .bss.erroAtual:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:137    .bss.erroInt:00000000 erroInt
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:134    .bss.erroInt:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:144    .bss.erroAnt:00000000 erroAnt
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:141    .bss.erroAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:151    .bss.Ts:00000000 Ts
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:148    .bss.Ts:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:158    .bss.yiAnt:00000000 yiAnt
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:155    .bss.yiAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:165    .bss.ydAnt:00000000 ydAnt
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:162    .bss.ydAnt:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:172    .bss.Nd:00000000 Nd
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:169    .bss.Nd:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:179    .bss.tim4ms:00000000 tim4ms
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:176    .bss.tim4ms:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:186    .bss.y:00000000 y
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:183    .bss.y:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:193    .bss.yPWM:00000000 yPWM
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:190    .bss.yPWM:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:200    .data.yPWMint:00000000 yPWMint
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:197    .data.yPWMint:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:207    .bss.yp:00000000 yp
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:204    .bss.yp:00000000 $d
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 55


C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:214    .bss.yi:00000000 yi
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:211    .bss.yi:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:221    .bss.yd:00000000 yd
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:218    .bss.yd:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:235    .text.calcPid:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:243    .text.calcPid:00000000 calcPid
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:505    .text.calcPid:000001d4 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:529    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:536    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:596    .text.HAL_TIM_PeriodElapsedCallback:00000040 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:602    .text.fastPulse:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:609    .text.fastPulse:00000000 fastPulse
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:642    .text.fastPulse:00000024 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:647    .rodata:00000000 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:665    .text.MenuHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:672    .text.MenuHandler:00000000 MenuHandler
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:926    .text.MenuHandler:000001d0 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:945    .text.ClickHandler:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:952    .text.ClickHandler:00000000 ClickHandler
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1037   .text.ClickHandler:00000068 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1048   .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1055   .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1329   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1966   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1570   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1817   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1463   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1649   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1291   .text.main:00000190 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1322   .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:2164   .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1457   .text.MX_ADC1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1558   .text.MX_ADC1_Init:00000074 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1564   .text.MX_I2C1_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1636   .text.MX_I2C1_Init:00000050 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1643   .text.MX_TIM2_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1806   .text.MX_TIM2_Init:000000ec $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1811   .text.MX_TIM4_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1951   .text.MX_TIM4_Init:000000c8 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:1960   .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:2149   .text.MX_GPIO_Init:00000128 $d
C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s:2157   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
__aeabi_f2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fdiv
__aeabi_f2uiz
HAL_GPIO_WritePin
HAL_Delay
ARM GAS  C:\Users\danie\AppData\Local\Temp\cc3pzKyH.s 			page 56


__aeabi_f2iz
__aeabi_i2f
itoa
SSD1306_GotoXY
SSD1306_Puts
SSD1306_UpdateScreen
SSD1306_Clear
Font_7x10
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Stop_IT
__aeabi_ui2d
__aeabi_dmul
HAL_GPIO_ReadPin
HAL_Init
SSD1306_Init
HAL_TIM_PWM_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_GPIO_Init
